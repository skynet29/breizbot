$$.control.registerControl("rootPage",{template:'<div>\n    <div bn-control="DSKY" bn-event="key: onKey" bn-iface="dsky"></div>\n\n    <div bn-control="FDAI" bn-iface="fdai" bn-event="data: onFdaiData"></div>\n\n</div>\n\n<div>\n    <div bn-control="INPUT"></div>\n    <div bn-control="OUTPUT" bn-iface="output"></div>\n</div>\n\n<div bn-control="SIMU" bn-iface="simu" bn-event="data: onSimuData"></div>\n\n',deps:["breizbot.files","app.emuAgc","app.imu","brainjs.http"],props:{},init:function(n,t,e,a,i){window.agc=e;const s=e.bit,l=$$.viewController(n,{data:{},events:{onKey:function(n,t){const{val:a}=t;isNaN(a)?(e.writeIoBit(26,14,0),setTimeout(()=>{e.writeIoBit(26,14,1)},200)):e.writeIo(13,a)},onSimuData:function(n,t){const{rotate:e,accelerate:i,omega:s}=t;e&&a.rotate(e),i&&a.accelerate(i)},onFdaiData:function(n,t){o.setData(t)}}}),c=l.scope.dsky,o=l.scope.simu,r=l.scope.fdai,d=l.scope.output;let u=null;a.on("data",n=>{u=n}),async function(){await e.loadRom(t.assetsUrl("LMY99R0.bin")),e.start();let n=0,i=0,l=0,b=Date.now(),p=0,v=0,h=!1,f=!1,g=!1;setInterval(()=>{e.run()},10),function t(){const _=e.readIo();if(null!=_){const{channel:n,value:i}=_;switch(n){case 8:case 9:case 11:c.process(n,i);break;case 10:s(i,5)&&!g?(a.zero(),g=!0):!s(i,5)&&g&&(g=!1);break;case 124:case 125:case 126:a.gyro_coarse_align(n,i);break;case 127:a.gyro_fine_align(n,i);break;case 5:case 6:0!=i&&console.log("JET",n.toString(8),i.toString(2).padStart(15,"0")),function(n){let t=0;for(let n=1;n<=8;n++)t+=e.getChannelBitState(5,n);for(let n=1;n<=8;n++)t+=e.getChannelBitState(6,n);h=t>0}(),d.update();break;case 12:d.update()}t()}else{const e=Date.now(),a=e-b;if(n+=a,i+=a,l+=a,p+=a,b=e,v=10,h&&(o.update_RCS(a/1e3),v=5),n>25&&(o.setData({Simulation_Timer:p/1e3}),o.dynamic_simulation(n/1e3),n=0),i>100){if(null!=u){const{imu_angle:n,error:t}=u;r.update(n,t)}i=0}l>300&&(f=!f,c.setData({flash_flag:f}),l=0),setTimeout(t,v)}}()}()}}),$$.service.registerService("app.emuAgc",{deps:["breizbot.files"],init:function(n){const t=Module.cwrap("set_fixed",null,["number"]),e=Module.cwrap("cpu_reset"),a=Module.cwrap("cpu_step",null,["number"]),i=Module.cwrap("packet_read","number"),s=Module.cwrap("packet_write",null,["number","number"]),l=Module.cwrap("get_erasable_ptr","number"),c=.01172;let o=0,r=0,d=null;const u={24:32767,25:32767,26:9215,27:32766},b={24:15577,25:32767,26:9215,27:24574};function p(n,t,e){n=parseInt(n),e?console.log("writeIo",n.toString(8),t.toString(2).padStart(15,"0"),e.toString(2).padStart(15,"0")):console.log("writeIo",n.toString(8),t),null!=e&&s(n+256,e),s(n,t)}function v(n,t,e){const a=_(t);return 0==e?n&=~a:n|=a,n}function h(n,t){let e=0,a=0;console.log("writeIoBits",n.toString(8),t),Object.entries(t).forEach(([t,i])=>{e=v(e,t,1),a=v(a,t,i),b[n]=v(b[n],t,i)}),p(n,a,e)}function f(n,t){return 1==(n>>--t&1)}function g(n){const t=parseInt(n).toString(8).padStart("3","0");console.log(`channel[${t}] = `+b[n].toString(2).padStart(15,"0"))}function _(n){return 1<<n-1}function f(n,t){return 1==(n>>--t&1)}return{writeIo:p,writeIoBit:function(n,t,e){const a={};a[t]=e,h(n,a)},writeIoBits:h,loadRom:async function(n){const e=await fetch(n),a=await e.arrayBuffer(),i=new Uint8Array(a);console.log("romArray",i.length);const s=Module._malloc(i.length*i.BYTES_PER_ELEMENT);console.log("romPtr",s),Module.HEAP8.set(i,s),t(s),Module._free(s),d=l(),console.log("erasablePtr",d)},start:function(){console.log("start"),e(),setTimeout(()=>{Object.entries(b).forEach(([n,t])=>{p(n,t,u[n])}),[5,6,12].forEach(n=>{b[n]=0})},100),o=performance.now(),r=0},run:function(){const n=Math.floor((performance.now()-o)/c)-r;if(n<0||n>1e5)return o=performance.now(),void(r=0);a(n),r+=n},readIo:function(){let n=null;const t=i();if(t){const e=t>>16,a=65535&t;b[e]=a,n={channel:e,value:a}}return n},peek:function(n){return 32767&Module.getValue(d+2*n,"i16")},poke:function(n,t){Module.setValue(d+2*n,t,"i16")},getChannelState:function(n){return b[n]},getChannelBitState:function(n,t){return f(b[n],t)},bitMask:_,bit:f,logChannelState:g,logAllChannelState:function(){Object.keys(b).forEach(n=>{g(n)})}}}}),$$.service.registerService("app.imu",{deps:["app.emuAgc"],init:function(n,t){const e=new EventEmitter2,a=Math.abs,i=Math.floor,s=Math.sin,l=Math.cos,c=Math.PI,o=c/180,r=.043948*o,d=.617981/3600*o,u=360/32768*o,b=.0585;let p,v,h,f,g,_,k;function E(){console.log("zero"),p=[0,0,0],v=[0,0,0],euler=[0,0,0],h=[0,0,0],f=[0,0,0],_=[0,0,0],g=[0,0,0],k=!1,S()}function S(){e.emit("data",{imu_angle:v,error:p})}function T(n,t,e){return n-(e-t)*i((n-t)/(e-t))}function A(n){if(k)return;for(let e=0;e<3;e++)if(n[e]){v[e]=T(v[e]+n[e],0,2*c);const s=T(v[e]-h[e],-c,c),l=s>0?1:-1;let o=i(a(s)/u);h[e]=T(h[e]+l*u*o,0,2*c);let r=t.peek(26+e);r=16384&r?-(32767^r):r,r+=l*o,t.poke(26+e,r<0?32767^-r:r)}}return E(),{rotate:function(n){const t=s(v[2]),e=l(v[2])*l(v[0]),a=s(v[0]),i=-l(v[2])*s(v[0]),o=l(v[0]),r=o*e-i*a;A([T(n[0]-(n[1]*o*t-n[2]*a*t)/r,-c,c),T((n[1]*o-n[2]*a)/r,-c,c),T((n[2]*e-n[1]*i)/r,-c,c)])},update:S,accelerate:function(n){const e=s(v[0]),a=s(v[1]),c=s(v[2]),o=l(v[0]),r=l(v[1]),d=l(v[2]),u=[d*r*n[0]+(-o*c*r+e*a)*n[1]+(e*c*r+o*a)*n[2],c*n[0]+o*d*n[1]-e*d*n[2],-d*a*n[0]+(o*c*a+e*r)*n[1]+(-e*c*a+o*r)*n[2]];for(let n=0;n<3;n++){_[n]+=u[n];const e=i((_[n]-g[n]*b)/b);g[n]+=e;let a=t.peek(31+n);a=16384&a?-(32767^a):a,a+=e,t.poke(31+n,a<0?32767^-a:a)}},gyro_coarse_align:function(n,e){const a=(16384&e?-1:1)*(16383&e);1==t.getChannelBitState(10,4)?(124===n?A([a*r,0,0]):125===n?A([0,a*r,0]):126===n&&A([0,0,a*r]),S()):p[n-124]+=a},zero:E,gyro_fine_align:function(n,t){const e=8192&t,a=4096&t,i=(16384&t?-1:1)*(2047&t);!e&&a&&A([i*d,0,0]),e&&!a&&A([0,i*d,0]),e&&a&&A([0,0,i*d]),S()},on:e.on.bind(e)}}}),$$.control.registerControl("DSKY",{template:'\n<div class="top">\n    <div class="left">\n        <div class="col">\n            <div bn-style="uplink_acty"><span>UPLINK ACTY</span></div>\n            <div bn-style="no_att">NO ATT</div>\n            <div bn-style="stby">STBY</div>\n            <div bn-style="key_rel">KEY REL</div>\n            <div bn-style="opr_err">OPR ERR</div>\n            <div></div>\n            <div></div>\n        </div>\n\n        <div class="col">\n            <div bn-style="temp">TEMP</div>\n            <div bn-style="gimball_lock"><span>GIMBALL LOCK</span></div>\n            <div bn-style="prog">PROG</div>\n            <div>RESTART</div>\n            <div bn-style="tracker">TRACKER</div>\n            <div bn-style="alt">ALT</div>\n            <div bn-style="vel">VEL</div>\n        </div>\n\n    \n    </div>\n    \n    \n    <div class="right">\n        <div class="line">\n            <div class="compActy" bn-style="comp_acty"><span>COMP ACTY</span></div>\n            <div>\n                <div class="label">PROG</div>\n                <div class="digit" bn-html="prog00"></div>\n            </div>\n    \n        </div>\n        <div class="line">\n            <div>\n                <div class="label">VERB</div>\n                <div class="digit" bn-html="verb00"></div>\n            </div>\n            <div>\n                <div class="label">NOUN</div>\n                <div class="digit" bn-html="noun00"></div>\n            </div>\n        </div>\n        <div class="digit big" bn-html="r1"></div>\n        <div class="digit big" bn-html="r2"></div>\n        <div class="digit big" bn-html="r3"></div>\n    \n    </div>\n</div>\n\n<div class="bottom">\n    <div class="keyboard" bn-event="click.key: onKey">\n        <div>\n            <button class="label key">VERB</button>\n            <button class="label key">NOUN</button>\n        </div>\n        <div>\n            <button class="key">+</button>\n            <button class="key">-</button>\n            <button class="key">0</button>\n        </div>\n        <div>\n            <button class="key">1</button>\n            <button class="key">4</button>\n            <button class="key">7</button>\n        </div>\n        <div>\n            <button class="key">8</button>\n            <button class="key">5</button>\n            <button class="key">2</button>\n        </div>\n        <div>\n            <button class="key">9</button>\n            <button class="key">6</button>\n            <button class="key">3</button>\n        </div>\n        <div>\n            <button class="label key">CLR</button>\n            <button class="label key">PRO</button>\n            <button class="label key">KEY REL</button>\n        </div>\n        <div>\n            <button class="label key">ENTR</button>\n            <button class="label key">RSET</button>\n        </div>\n    \n    </div>\n</div>\n',deps:["breizbot.pager","app.emuAgc"],props:{},init:function(n,t,e){const a={VERB:17,NOUN:31,"+":26,"-":27,0:16,CLR:30,"KEY REL":25,ENTR:28,RSET:18},i=e.bit;function s(n){var t="E";switch(n){case 0:t="H";break;case 21:t="0";break;case 3:t="1";break;case 25:t="2";break;case 27:t="3";break;case 15:t="4";break;case 30:t="5";break;case 28:t="6";break;case 19:t="7";break;case 29:t="8";break;case 31:t="9"}return t}let l=0,c=0,o=0,r=0,d=0,u=0;const b="&nbsp;";function p(n){return{"background-color":n?"#ffc200":"#888888"}}function v(n){return{"background-color":n?"#ffffff":"#888888"}}const h=$$.viewController(n,{data:{flash_flag:!1,status11:0,status13:0,status10:0,digits:"000000+00000+00000+00000",comp_acty:function(){return p(i(this.status11,2))},uplink_acty:function(){return v(i(this.status11,3))},temp:function(){return p(i(this.status11,4))},key_rel:function(){return v(i(this.status11,5)&&this.flash_flag)},opr_err:function(){return v(i(this.status11,7)&&this.flash_flag)},stby:function(){return v(i(this.status13,11))},vel:function(){return p(i(this.status10,3))},no_att:function(){return v(i(this.status10,4))},alt:function(){return p(i(this.status10,5))},gimball_lock:function(){return p(i(this.status10,6))},tracker:function(){return p(i(this.status10,8))},prog:function(){return p(i(this.status10,9))},r1:function(){return this.digits.slice(6,12).replace(/H/g,b)},r2:function(){return this.digits.slice(12,18).replace(/H/g,b)},prog00:function(){return this.digits.slice(0,2).replace(/H/g,b)},r3:function(){return this.digits.slice(18,24).replace(/H/g,b)},verb00:function(){return i(this.status11,6)&&!this.flash_flag?b+b:this.digits.slice(2,4).replace(/H/g,b)},noun00:function(){return i(this.status11,6)&&!this.flash_flag?b+b:this.digits.slice(4,6).replace(/H/g,b)}},events:{onKey:function(t){const e=$(this).text();let i=a[e];null==i&&(i=parseInt(e)),t.stopPropagation(),n.trigger("key",{val:i})}}});this.processLights=function(n){h.setData({lamps:n})},this.setData=function(n){h.setData(n)},this.process=function(n,t){if(8==n&&0==t)return;if(9==n)return void h.setData({status11:t});if(11==n)return void h.setData({status13:t});const e=t>>11,a=t>>10&1,i=s(t>>5&31),b=s(31&t),p=h.model.digits.split("");switch(e){case 12:h.setData({status10:t});break;case 11:p[0]=i,p[1]=b;break;case 10:p[2]=i,p[3]=b;break;case 9:p[4]=i,p[5]=b;break;case 8:p[7]=b;break;case 7:p[8]=i,p[9]=b,l=a;break;case 6:p[10]=i,p[11]=b,c=a;break;case 5:p[13]=i,p[14]=b,o=a;break;case 4:p[15]=i,p[16]=b,r=a;break;case 3:p[17]=i,p[19]=b;break;case 2:p[20]=i,p[21]=b,d=a;break;case 1:p[22]=i,p[23]=b,u=a}if(12!=e){p[6]=l&&!c?"+":l||c?"-":"H",p[12]=o&&!r?"+":o||r?"-":"H",p[18]=d&&!u?"+":d||u?"-":"H";const n=p.join("");h.setData({digits:n})}}}}),$$.control.registerControl("FDAI",{template:'<svg width="350" height="360" bn-bind="svg">\n    <defs>\n      <marker id="triangle" viewBox="0 0 10 10"\n            refX="1" refY="5"\n            markerUnits="strokeWidth"\n            markerWidth="10" markerHeight="10"\n            orient="auto">\n        <path d="M 0 0 L 10 5 L 0 10 z" fill="black"/>\n      </marker>\n      <marker id="triangle2" viewBox="0 0 16 16"\n            refX="1" refY="8"\n            markerUnits="strokeWidth"\n            markerWidth="16" markerHeight="16"\n            orient="auto">\n        <path d="M 0 0 L 16 8 L 0 16 z" fill="black"/>\n      </marker>\n  \n  </defs>\n    \n  </svg>',deps:["breizbot.pager"],props:{},init:function(n,t){const e=$$.viewController(n,{data:{},events:{}}).scope.svg.get(0),a=150,i=180,s=180/Math.PI,l=42.1875/384;let c=0,o=0,r=0;function d(n,t){Object.keys(t).forEach(e=>{n.setAttribute(e,t[e])})}function u(n,t){const a=document.createElementNS("http://www.w3.org/2000/svg",n);return"object"==typeof t&&d(a,t),e.appendChild(a),a}function b(n,t,e,a,i,s){return u("line",Object.assign({x1:n,y1:t,x2:e,y2:a,stroke:i},s))}function p(n,t,e,a,i){const s=u("text",Object.assign({x:n,y:t,fill:a},i));return s.textContent=e,s}function v(n,t,e,a,i){return u("circle",Object.assign({r:e,cx:n,cy:t,fill:a},i))}const h={};function f(n,t){d(h[n],{x1:t,x2:t})}function g(n,t){d(h[n],{y1:t,y2:t})}function _(n,t,e,a,i){d(h[n],{x1:t,y1:e,x2:a,y2:i})}function k(n,t,e){d(h[n],{x:t,y:e})}function E(n,t,e,a,i,s){const l=a*Math.PI/180;return b(n+e*Math.sin(l),t+e*Math.cos(l),n+(e+=i)*Math.sin(l),t+e*Math.cos(l),s)}for(let n=-270;n<=270;n+=30){const t=n>=-180&&n<=0||n>=180&&n<=360?"black":"white";h[`PITCH_${n}`]=b(0,0,0,0,t);const e=n<0?n+360:n;h[`PITCH_TXT_${n}`]=p(0,0,e,t)}h.zAxisLM=b(0,0,0,0,"blue");for(let n=-270;n<=270;n+=30){h[`zAxis_${n}`]=b(0,0,0,0,"blue");const t=n<0?n+360:n;h[`zAxis_TXT_${n}`]=p(0,0,t,"blue")}h.RollMarker=b(0,0,0,0,"black",{"marker-end":"url(#triangle2)"}),h.YawErrorNeedle=b(0,i+10,0,i+100,"orange"),h.PitchErrorNeedle=b(a+10,0,a+100,0,"orange"),h.RollErrorNeedle=b(0,i-10,0,i-100,"orange"),v(a,i,190,"none",{stroke:"darkgrey","stroke-width":180});for(let n=70;n<110;n+=.5)E(a,i,100,n,10,"red");for(let n=250;n<290;n+=.5)E(a,i,100,n,10,"red");for(let n=0;n<360;n+=10){E(a,i,100,n,n%30==0?10:15,"white")}v(a,i,100,"none",{stroke:"black","stroke-width":4}),b(a-10,i,a+10,i,"white"),b(a,i-10,a,i+10,"white");for(let n=-5;n<=5;n++)b(a+10*n,310,a+10*n,315,"white");h.YawRateMarker=b(0,325,0,324,"black",{"marker-end":"url(#triangle)"}),p(a,310,"0","white"),p(a,340,"YAW RATE","white"),h.RollRateMarker=b(0,36,0,37,"black",{"marker-end":"url(#triangle)"}),p(a,62,"0","white"),p(a,30,"ROLL RATE","white");for(let n=-5;n<=5;n++)b(a+10*n,45,a+10*n,50,"white");for(let n=-5;n<=5;n++)b(280,i+10*n,285,i+10*n,"white");function S(n){const t=2*Math.PI;return n<-t?n+t:n>=t?n-t:n}function T(n,t,e){return Math.max(Math.min(e,n),t)}function A(t,e){const[d,u,b]=t,[p,v,h]=e,E=Math.sin(d),A=Math.sin(u),y=Math.sin(b),C=Math.cos(d),D=Math.cos(u),w=Math.cos(b),R=y,M=w*C,x=D*y*E+A*C,I=-w*E,m=-A*y*E+D*C,N=S(Math.atan2(R,M)),L=S(Math.atan2(x,m)),P=S(Math.asin(I)),O=N,U=Math.sin(-1*O),F=Math.cos(-1*O),B=-1*P*s,G=L*s,K=N*s,$=B>0?360-B:Math.abs(B),H=G<0?G+360:G,Q=K<0?K+360:K;n.trigger("data",{euler:[$,H,Q]}),f("YawRateMarker",a-10*T(r,-5,5)),g("PitchRateMarker",i-10*T(o,-5,5)),f("RollRateMarker",a+10*T(c,-5,5)),f("YawErrorNeedle",a+p*l),g("PitchErrorNeedle",i+v*l),f("RollErrorNeedle",a-h*l);const Y=a+85*Math.sin(O+Math.PI),q=a+86*Math.sin(O+Math.PI);function X(n,t){return{x:n*F-t*U+a,y:n*U+t*F+i}}_("RollMarker",Y,i+85*Math.cos(O+Math.PI),q,i+86*Math.cos(O+Math.PI));const z=G>180?G-180:G;for(let n=-270;n<=270;n+=30){const t=-50,e=50,a=-n+z,i=0,s=a,{x:l,y:c}=X(i,s),{x:o,y:r}=X(t,a),{x:d,y:u}=X(e,a);k(`PITCH_TXT_${n}`,l,c),_(`PITCH_${n}`,o,r,d,u)}const W=B>180?B-360:B,j=-280+W,V=280+W,{x:Z,y:J}=X(j,0),{x:nn,y:tn}=X(V,0);_("zAxisLM",Z,J,nn,tn);for(let n=-270;n<=270;n+=30){const t=n+W,e=-2,a=n+W,i=3,s=n+W,l=10,{x:c,y:o}=X(s,l),{x:r,y:d}=X(t,e),{x:u,y:b}=X(a,i);k(`zAxis_TXT_${n}`,c,o),_(`zAxis_${n}`,r,d,u,b)}}h.PitchRateMarker=b(296,0,295,0,"black",{"marker-end":"url(#triangle)"}),p(a+128-5,i,"0","white",{"alignment-baseline":"middle"}),p(a+155,i-30,"P","white"),p(a+155,i-22,"I","white"),p(a+155,i-14,"T","white"),p(a+155,i-6,"C","white"),p(a+155,i+2,"H","white"),p(a+155,i+18,"R","white"),p(a+155,i+26,"A","white"),p(a+155,i+34,"T","white"),p(a+155,i+42,"E","white"),A([0,0,0],[0,0,0]),this.update=A}}),$$.control.registerControl("INPUT",{template:'<div bn-event="click.check: onCheckbox">\n    <div>\n        <fieldset>\n            <legend>ENGINE</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 3}" class="check" checked>\n                <label>ENGINE ARMES SIGNAL</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 5}" class="check">\n                <label>AUTO THROTTLE<br>COMPUTER CONTROL OF DESCENT</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 9}" class="check">\n                <label>DESCENT ENGINE<br>DISABLED BY CREW</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 10}" class="check">\n                <label>APPARENT DESCENT ENGINE<br>GIMBAL FAILURE</label>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>THRUSTERS</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 1}" class="check">\n                <label>THRUSTERS 2&4 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 2}" class="check">\n                <label>THRUSTERS 5&8 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 3}" class="check">\n                <label>THRUSTERS 1&3 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 4}" class="check">\n                <label>THRUSTERS 6&7 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 5}" class="check">\n                <label>THRUSTERS 14&16 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 6}" class="check">\n                <label>THRUSTERS 13&15 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 7}" class="check">\n                <label>THRUSTERS 9&12 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 8}" class="check">\n                <label>THRUSTERS 10&11 DISABLED</label>\n            </div>\n        </fieldset>\n    </div>\n    <div>\n        <fieldset>\n            <legend>RADAR</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 33, bit: 2}" class="check">\n                <label>RR AUTO-POWER ON</label>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>IMU</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 14}" class="check">\n                <label>ISS TURN ON REQUESTED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 11}" class="check">\n                <label>IMU CAGE COMMAND TO DRIVE<br>IMU GIMBAL ANGLES TO 0</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 6}" class="check" checked>\n                <label>DISPLAY INERTIAL DATA</label>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>DAP/ATTITUDE MODE</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 10}" class="check" checked>\n                <label>AGC HAS CONTROL OF LM<br>(NOT AGS)</label>\n            </div>\n            <div bn-control="brainjs.radiogroup" bn-event="change: onDapModeChange" bn-val="DAP_MODE">\n                <div class="data">\n                    <input type="radio" value="OFF">\n                    <label>DAP OFF</label>\n                </div>\n                <div class="data">\n                    <input type="radio" value="HOLD">\n                    <label>ATTITUDE HOLD MODE ON</label>\n                </div>\n                <div class="data">\n                    <input type="radio" value="AUTO">\n                    <label>AUTO STABILIZATION<br>OF ATTITUDE ON</label>\n                </div>\n\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>AOT BUTTONS</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 3}" class="check">\n                <label>X-AXIS MARK</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 4}" class="check">\n                <label>Y-AXIS MARK</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 5}" class="check">\n                <label>MARK REJECT</label>\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>DESCENT CONTROL</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 6}" class="check">\n                <label>DESCENT+</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 7}" class="check">\n                <label>DESCENT-</label>\n            </div>\n        </fieldset>\n    </div>\n\n    <div>\n        <fieldset>\n            <legend>RHC/ACA</legend>\n            <div class="slider">\n                <div class="sliderValue">\n                    <label>Roll</label>\n                    <span bn-text="roll"></span>\n                </div>\n                <div bn-control="brainjs.slider" bn-data="rhcRange" bn-update="input" bn-val="roll" bn-event="sliderchange: onRollChange"></div>\n            </div>\n            <div class="slider">\n                <div class="sliderValue">\n                    <label>Pitch</label>\n                    <span bn-text="pitch"></span>\n                </div>\n                <div bn-control="brainjs.slider" bn-data="rhcRange" bn-update="input" bn-val="pitch" bn-event="sliderchange: onPitchChange"></div>\n            </div>\n            <div class="slider">\n                <div class="sliderValue">\n                    <label>Yaw</label>\n                    <span bn-text="yaw"></span>\n                </div>\n                <div bn-control="brainjs.slider" bn-data="rhcRange" bn-update="input" bn-val="yaw" bn-event="sliderchange: onYawChange"></div>\n            </div>\n            <div>\n                <button bn-event="click: onDetent">DETENT</button>\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>THC</legend>\n            <div bn-control="brainjs.radiogroup" class="THC" bn-event="change: onThcChange" bn-val="THC">\n                <div class="data">\n                    <input type="radio" value="NEUTRAL">\n                    <label>NEUTRAL</label>\n                </div>\n                <div class="XYZ">\n                    <div>\n                        <div class="data">\n                            <input type="radio" value="+X">\n                            <label>+X</label>\n                        </div>\n                        <div class="data">\n                            <input type="radio" value="+Y">\n                            <label>+Y</label>\n                        </div>\n                        <div class="data">\n                            <input type="radio" value="+Z">\n                            <label>+Z</label>\n                        </div>\n                    </div>\n                    <div>\n                        <div class="data">\n                            <input type="radio" value="-X">\n                            <label>-X</label>\n                        </div>\n                        <div class="data">\n                            <input type="radio" value="-Y">\n                            <label>-Y</label>\n                        </div>\n                        <div class="data">\n                            <input type="radio" value="-Z">\n                            <label>-Z</label>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        </fieldset>\n    </div>\n</div>',deps:["breizbot.pager","app.emuAgc"],props:{},init:function(n,t,e){const a=$$.viewController(n,{data:{roll:0,pitch:0,yaw:0,rhcRange:{min:-57,max:57},DAP_MODE:"OFF",THC:"NEUTRAL"},events:{onDetent:function(n){a.setData({roll:0,pitch:0,yaw:0}),e.writeIo(118,0),e.writeIo(119,0),e.writeIo(120,0),e.writeIoBit(25,15,1),s()},onCheckbox:function(){const n=$(this),{channel:t,bit:a}=n.data(),i=parseInt(t,8);e.writeIoBit(i,a,n.getValue()?0:1)},onDapModeChange:function(n){const t=$(this).getValue();switch(console.log("onDapModeChange",t),t){case"OFF":e.writeIoBits(25,{13:1,14:1});break;case"HOLD":e.writeIoBits(25,{13:0,14:1});break;case"AUTO":e.writeIoBits(25,{13:1,14:0})}},onThcChange:function(){const n=$(this).getValue();switch(console.log("onThcChange",n),n){case"NEUTRAL":e.writeIoBits(25,{7:1,8:1,9:1,10:1,11:1,12:1});break;case"+X":e.writeIoBits(25,{7:0,8:1,9:1,10:1,11:1,12:1});break;case"-X":e.writeIoBits(25,{7:1,8:0,9:1,10:1,11:1,12:1});break;case"+Y":e.writeIoBits(25,{7:1,8:1,9:0,10:1,11:1,12:1});break;case"-Y":e.writeIoBits(25,{7:1,8:1,9:1,10:0,11:1,12:1});break;case"+Z":e.writeIoBits(25,{7:1,8:1,9:1,10:1,11:0,12:1});break;case"-Z":e.writeIoBits(25,{7:1,8:1,9:1,10:1,11:1,12:0})}},onRollChange:function(){console.log("onRollChange",a.model.roll),i(a.model.roll,120,5,6)},onPitchChange:function(){console.log("onPitchChange",a.model.pitch),i(a.model.pitch,118,1,2)},onYawChange:function(){console.log("onYawChange",a.model.yaw),i(a.model.yaw,119,3,4)}}});function i(n,t,i,l){const c=e.getChannelBitState(25,15);let o={};n<0?(1==c&&(o[i]=1,o[l]=0,setTimeout(s,100)),o[15]=0,n=32767^-n):n>0&&(1==c&&(o[i]=0,o[l]=1,setTimeout(s,100)),o[15]=0),e.writeIoBits(25,o),e.writeIo(t,n);const{roll:r,pitch:d,yaw:u}=a.model;0==r&&0==d&&0==u&&0==c&&e.writeIoBit(25,15,1)}function s(){console.log("reset_rhc"),e.writeIoBits(25,{1:1,2:1,3:1,4:1,5:1,6:1})}}}),$$.control.registerControl("OUTPUT",{template:'<div>\n    <fieldset>\n        <legend>RCS JET CONTROL</legend>\n        <div>\n            <div class="quad">\n                <label>QUAD 1</label>\n                    <span bn-style="Q1D" class="one">D</span>\n                    <span bn-style="Q1F" class="two">F</span>\n                    <span bn-style="Q1L" class="three">L</span>\n                    <span bn-style="Q1U" class="four">U</span>\n            </div>\n            <div class="quad">\n                <label>QUAD 4</label>\n                    <span bn-style="Q4F" class="one">F</span>\n                    <span bn-style="Q4D" class="two">D</span>\n                    <span bn-style="Q4U" class="three">U</span>\n                    <span bn-style="Q4R" class="four">R</span>\n            </div>    \n        </div>\n        <div>\n            <div class="quad">\n                <label>QUAD 2</label>\n                    <span bn-style="Q2L" class="one">L</span>\n                    <span bn-style="Q2U" class="two">U</span>\n                    <span bn-style="Q2D" class="three">D</span>\n                    <span bn-style="Q2A" class="four">A</span>\n            </div>\n            <div class="quad">\n                <label>QUAD 3</label>\n                    <span bn-style="Q3U" class="one">U</span>\n                    <span bn-style="Q3R" class="two">R</span>\n                    <span bn-style="Q3A" class="three">A</span>\n                    <span bn-style="Q3D" class="four">D</span>\n            </div>    \n        </div>\n    </fieldset>\n\n    <fieldset>\n        <legend>CDU</legend>\n        <div class="cdu">\n            <span bn-style="CDUZ">DRIVE CDU Z</span>\n            <span bn-style="CDUY">DRIVE CDU Y</span>\n            <span bn-style="CDUX">DRIVE CDU X</span>\n        </div>\n    </fieldset>\n</div>',deps:["app.emuAgc"],props:{},init:function(n,t){function e(n){return{"background-color":n?"#ffffff":"transparent"}}const a=$$.viewController(n,{data:{quad:new Array(16).fill(0),cdu:new Array(3).fill(0),CDUZ:function(){return e(this.cdu[0])},CDUY:function(){return e(this.cdu[1])},CDUX:function(){return e(this.cdu[2])},Q4U:function(){return e(this.quad[0])},Q4D:function(){return e(this.quad[1])},Q3U:function(){return e(this.quad[2])},Q3D:function(){return e(this.quad[3])},Q2U:function(){return e(this.quad[4])},Q2D:function(){return e(this.quad[5])},Q1U:function(){return e(this.quad[6])},Q1D:function(){return e(this.quad[7])},Q3A:function(){return e(this.quad[8])},Q4F:function(){return e(this.quad[9])},Q1F:function(){return e(this.quad[10])},Q2A:function(){return e(this.quad[11])},Q2L:function(){return e(this.quad[12])},Q3R:function(){return e(this.quad[13])},Q4R:function(){return e(this.quad[14])},Q1L:function(){return e(this.quad[15])}},events:{}});this.update=function(){const n=[];for(let e=1;e<=8;e++)n.push(t.getChannelBitState(5,e));for(let e=1;e<=8;e++)n.push(t.getChannelBitState(6,e));const e=[];for(let n=0;n<3;n++)e.push(t.getChannelBitState(12,n+13));a.setData({quad:n,cdu:e})}}}),$$.control.registerControl("SIMU",{template:'<div>\n    <fieldset>\n        <div class="data">\n            <label>SIMULATION TIME:</label>\n            <div>\n                <span bn-text="Simulation_Timer_text"></span>\n                <span class="unit">SEC</span>    \n            </div>\n        </div>\n        <div class="data">\n            <label>LM WEIGHT:</label>\n            <div>\n                <span bn-text="LM_Weight_KG_text"></span>\n                <span class="unit">KG</span>    \n            </div>\n        </div>\n\n    </fieldset>\n    <fieldset>\n        <legend>DESCENT</legend>\n        <div class="data">\n            <label>THRUST:</label>\n            <div>\n                <span bn-text="Descent_Thrust_Procent_text"></span>\n                <span class="unit"></span>\n            </div>\n        </div>\n        <div class="data">\n            <label>PROPELLANT:</label>\n            <div>\n                <span bn-text="Descent_Propellant_Mass_KG_text"></span>\n                <span class="unit">KG</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>FUEL FLOW:</label>\n            <div>\n                <span bn-text="Descent_Fuel_Flow_SEC_text"></span>\n                <span class="unit">KG/S</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>ACCELERATION:</label>\n            <div>\n                <span bn-text="Descent_Acceleration_text"></span>\n                <span class="unit">M/S²</span>\n            </div>\n        </div>\n        <div bn-show="!isSeparated">\n            <div>\n                <input type="checkbox" bn-val="DESCENT_ENGINE_FLAG" bn-update="click">\n                <label>ENGINE ON/OFF</label>\n            </div>\n            <div class="data">\n                <label>Thrust</label>\n                <div>\n                    <span bn-text="Descent_Propulsion_N"></span>\n                    <span class="unit">N</span>\n                </div>\n            </div>\n            <div bn-control="brainjs.slider" bn-data="{min: Descent_Propulsion_Min_N, max: Descent_Propulsion_Max_N }"\n                bn-update="input" bn-val="Descent_Propulsion_N"></div>\n        </div>\n    </fieldset>\n    <fieldset>\n        <legend>Stage</legend>\n        <button bn-event="click: onSeperateStage" bn-prop="{disabled: isSeparated}">SEPARATE STAGE</button>\n    </fieldset>\n    <fieldset>\n        <legend>ASCENT</legend>\n        <div class="data">\n            <label>PROPELLANT:</label>\n            <div>\n                <span bn-text="Ascent_Propellant_Mass_KG_text"></span>\n                <span class="unit">KG</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>FUEL FLOW:</label>\n            <div>\n                <span bn-text="Ascent_Fuel_Flow_SEC_text"></span>\n                <span class="unit">KG/S</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>ACCELERATION:</label>\n            <div>\n                <span bn-text="Ascent_Acceleration_text"></span>\n                <span class="unit">M/S²</span>\n            </div>\n        </div>\n        <div bn-show="isSeparated">\n            <input type="checkbox" bn-val="ASCENT_ENGINE_FLAG" bn-update="click">\n            <label>ENGINE ON/OFF</label>\n        </div>\n    </fieldset>\n    <fieldset>\n        <legend>RCS</legend>\n        <div class="data">\n            <label>PROPELLANT:</label>\n            <div>\n                <span bn-text="RCS_Propellant_Mass_KG_text"></span>\n                <span class="unit">KG</span>\n            </div>\n        </div>\n\n    </fieldset>\n    <fieldset>\n        <legend>EULER ANGLE</legend>\n        <div class="data">\n            <label>YAW:</label>\n            <div>\n                <span bn-text="yaw"></span>\n                <span class="unit">°</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>PITCH:</label>\n            <div>\n                <span bn-text="pitch"></span>\n                <span class="unit">°</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>ROLL:</label>\n            <div>\n                <span bn-text="roll"></span>\n                <span class="unit">°</span>\n            </div>\n        </div>\n    </fieldset>\n\n</div>',deps:["breizbot.pager","app.emuAgc"],props:{},init:function(n,t,e){const a=Math.PI,i=180/a*(a/4),s=Math.abs;let l=0,c=4670,o=10694,r=287,d=445,u=2840,b=8355,p=45040,v=3050,h=4560,f=0,g=0,_=0,k=!1,E=2353,S=15600,T=3050,A=0,y=0,C=!1,D="DESCENT",w=0,R=0,M=0,x=0,I=0,m=0;const N={ASCENT:{a:[.0065443852,.0035784354,.0056946631],b:[32e-6,.162862,.009312],c:[-.006923,.002588,-.023608]},DESCENT:{a:[.0059347674,.0014979264,.0010451889],b:[.002989,.018791,-.068163],c:[.008721,-.068163,-.066027]}},L=$$.viewController(n,{data:{Simulation_Timer:0,Descent_Thrust_Procent:g,LM_Weight_KG:l,Descent_Propellant_Mass_KG:b,Descent_Fuel_Flow_SEC:f,Descent_Acceleration:_,RCS_Propellant_Mass_KG:r,Ascent_Propellant_Mass_KG:E,Ascent_Fuel_Flow_SEC:A,Ascent_Acceleration:y,Descent_Propulsion_Min_N:4560,Descent_Propulsion_Max_N:p,Descent_Propulsion_N:h,DESCENT_ENGINE_FLAG:k,ASCENT_ENGINE_FLAG:C,LM_CONFIG:D,euler:[0,0,0],yaw:function(){return this.euler[0].toFixed(2)},pitch:function(){return this.euler[1].toFixed(2)},roll:function(){return this.euler[2].toFixed(2)},Simulation_Timer_text:function(){return this.Simulation_Timer.toFixed(1)},Descent_Thrust_Procent_text:function(){return this.Descent_Thrust_Procent.toFixed(1)},LM_Weight_KG_text:function(){return this.LM_Weight_KG.toFixed(0)},Descent_Propellant_Mass_KG_text:function(){return this.Descent_Propellant_Mass_KG.toFixed(0)},Descent_Fuel_Flow_SEC_text:function(){return this.Descent_Fuel_Flow_SEC.toFixed(2)},Descent_Acceleration_text:function(){return this.Descent_Acceleration.toFixed(3)},RCS_Propellant_Mass_KG_text:function(){return this.RCS_Propellant_Mass_KG.toFixed(1)},Ascent_Propellant_Mass_KG_text:function(){return this.Ascent_Propellant_Mass_KG.toFixed(0)},Ascent_Fuel_Flow_SEC_text:function(){return this.Ascent_Fuel_Flow_SEC.toFixed(1)},Ascent_Acceleration_text:function(){return this.Ascent_Acceleration.toFixed(3)},isSeparated:function(){return"ASCENT"==this.LM_CONFIG}},events:{onSeperateStage:function(){console.log("onSeperateStage"),D="ASCENT",b=0,o=0,L.setData({LM_CONFIG:D,Descent_Propellant_Mass_KG:b,LM_Weight_Descent_KG:o})}}});function P(t,e,a){n.trigger("data",{accelerate:[t,e,a]})}window.simu=L,this.dynamic_simulation=function(t){if(l=c+o,L.setData({Descent_Thrust_Procent:g,LM_Weight_KG:l,Descent_Propellant_Mass_KG:b,Descent_Fuel_Flow_SEC:f,Descent_Acceleration:_,RCS_Propellant_Mass_KG:r,Ascent_Propellant_Mass_KG:E,Ascent_Fuel_Flow_SEC:A,Ascent_Acceleration:y}),k=L.model.DESCENT_ENGINE_FLAG,C=L.model.ASCENT_ENGINE_FLAG,h=L.model.Descent_Propulsion_N,g=h/p,k&&b>0){const n=(f=h/v)*t;b-=n,o-=n,P((_=h/l)*t,0,0)}else k=!1,_=0,f=0;if(C&&E>0){const n=(A=S/T)*t;E-=n,P((y=S/(c-=n))*t,0,0)}else C=!1,y=0,A=0;const e=l/65535,[a,s,d]=N[D].a,[u,O,U]=N[D].b,[F,B,G]=N[D].c;var K,$,H;w=i*(u+a/(e+F)),R=i*(O+s/(e+B)),M=i*(U+d/(e+G)),K=m*t,$=I*t,H=x*t,n.trigger("data",{rotate:[K,$,H]})},this.update_RCS=function(t){console.log("update_RCS",t);const a=e.getChannelBitState(5,1),i=e.getChannelBitState(5,2),o=e.getChannelBitState(5,3),b=e.getChannelBitState(5,4),p=e.getChannelBitState(5,5),v=e.getChannelBitState(5,6),h=e.getChannelBitState(5,7),f=e.getChannelBitState(5,8),g=e.getChannelBitState(6,1),_=e.getChannelBitState(6,2),k=e.getChannelBitState(6,3),E=e.getChannelBitState(6,4),S=e.getChannelBitState(6,5),T=e.getChannelBitState(6,6),A=e.getChannelBitState(6,7),y=e.getChannelBitState(6,8),C=1==v||1==a?v+a:0,D=1==p||1==i?-(p+i):0,N=1==f||1==o?f+o:0,L=1==h||1==b?-(h+b):0,O=1==k||1==S||1==g||1==A?k+S+g+A:0,U=1==y||1==E||1==T||1==_?-(y+E+T+_):0,F=C+D,B=N+L,G=O+U;let K=0;0!=C&&C+D==0&&(K=1==v?v+i:-(p+a)),0!=N&&N+L==0&&(1==f?K+=f+b:K-=h+o),0!=K&&P(t*K*d/l,0,0);0!=O&&O+U==0&&(1==y&&P(0,2*t*d/l,0),1==T&&P(0,2*-t*d/l,0),1==E&&P(0,0,2*t*d/l),1==k&&P(0,0,2*-t*d/l));if(r>0){m+=w*t*G,I+=R*t*(B-F),x+=M*t*(B+F),n.trigger("data",{omega:[m,I,x]});const e=(s(C)+s(D)+s(N)+s(L)+s(O)+s(U))*d/u*t;c-=e,r-=e}},this.setData=function(n){L.setData(n)}}});