$$.control.registerControl("rootPage",{template:'<div>\n    <div bn-control="DSKY" bn-event="key: onKey" bn-iface="dsky"></div>\n\n    <div bn-control="FDAI" bn-iface="fdai" bn-event="data: onFdaiData"></div>\n\n</div>\n\n\n<div bn-control="INPUT"></div>\n\n<div bn-control="SIMU" bn-iface="simu" bn-event="data: onSimuData"></div>\n\n',deps:["breizbot.files","app.emuAgc","app.imu","brainjs.http"],props:{},init:function(n,t,e,a,i){window.agc=e;const s=e.bit,l=$$.viewController(n,{data:{},events:{onKey:function(n,t){const{val:a}=t;isNaN(a)?(e.writeIoBit(26,14,0),setTimeout(()=>{e.writeIoBit(26,14,1)},200)):e.writeIo(13,a)},onSimuData:function(n,t){const{rotate:e,accelerate:i,omega:s}=t;e&&a.rotate(e),i&&a.accelerate(i)},onFdaiData:function(n,t){o.setData(t)}}}),c=l.scope.dsky,o=l.scope.simu,r=l.scope.fdai;a.on("data",n=>{const{imu_angle:t,error:e}=n;r.update(t,e)}),async function(){await e.loadRom(t.assetsUrl("Luminary099.bin")),e.start();let n=0,i=0,l=0,r=Date.now(),d=0,b=0,u=0,v=!1,p=!1;setInterval(()=>{e.run()},10),function t(){const h=e.readIo();if(null!=h){const{channel:n,value:e}=h;switch(n){case 8:case 9:case 19:c.process(n,e);break;case 10:s(e,5)&&!p?(a.zero(),p=!0):!s(e,5)&&p&&(p=!1);break;case 124:case 125:case 126:a.gyro_coarse_align(n,e);break;case 127:a.gyro_fine_align(n,e)}t()}else{const e=Date.now(),s=e-r;n+=s,i+=s,l+=s,d+=s,r=e,b=10,1==u&&(o.update_RCS(s/1e3),b=5),n>25&&(o.setData({Simulation_Timer:d/1e3}),o.dynamic_simulation(n/1e3),n=0),i>100&&(a.update(),i=0),l>300&&(v=!v,c.setData({flash_flag:v}),l=0),setTimeout(t,b)}}()}()}}),$$.service.registerService("app.emuAgc",{deps:["breizbot.files"],init:function(n){const t=Module.cwrap("set_fixed",null,["number"]),e=Module.cwrap("cpu_reset"),a=Module.cwrap("cpu_step",null,["number"]),i=Module.cwrap("packet_read","number"),s=Module.cwrap("packet_write",null,["number","number"]),l=Module.cwrap("get_erasable_ptr","number"),c=.01172;let o=0,r=0,d=null;const b={24:15577,25:32767,26:9215,27:32766};function u(n,t,e){null!=e&&s(n+256,e),s(n,t)}function v(n,t,e){const a=f(t);return 0==e?n&=~a:n|=a,n}function p(n,t){let e=0,a=0;console.log("writeIoBits",n.toString(8),t),Object.entries(t).forEach(([t,i])=>{e=v(e,t,1),a=v(a,t,i),b[n]=v(b[n],t,i)}),u(n,a,e)}function h(n,t){return n>>--t&1}function _(n){const t=parseInt(n).toString(8).padStart("3","0");console.log(`channel[${t}] = `+b[n].toString(2).padStart(15,"0"))}function f(n){return 1<<n-1}function h(n,t){return 1==(n>>--t&1)}return{writeIo:u,writeIoBit:function(n,t,e){const a={};a[t]=e,p(n,a)},writeIoBits:p,loadRom:async function(n){const e=await fetch(n),a=await e.arrayBuffer(),i=new Uint8Array(a);console.log("romArray",i.length);const s=Module._malloc(i.length*i.BYTES_PER_ELEMENT);console.log("romPtr",s),Module.HEAP8.set(i,s),t(s),Module._free(s),d=l(),console.log("erasablePtr",d)},start:function(){e(),[5,6].forEach(n=>{b[n]=0}),o=performance.now(),r=0},run:function(){const n=Math.floor((performance.now()-o)/c)-r;if(n<0||n>1e5)return o=performance.now(),void(r=0);a(n),r+=n},readIo:function(){let n=null;const t=i();if(t){const e=t>>16,a=65535&t;b[e]=a,n={channel:e,value:a}}return n},peek:function(n){return 32767&Module.getValue(d+2*n,"i16")},poke:function(n,t){Module.setValue(d+2*n,t,"i16")},getChannelState:function(n){return b[n]},getChannelBitState:function(n,t){return h(b[n],t)},bitMask:f,bit:h,logChannelState:_,logAllChannelState:function(){Object.keys(b).forEach(n=>{_(n)})}}}}),$$.service.registerService("app.imu",{deps:["app.emuAgc"],init:function(n,t){const e=new EventEmitter2,a=Math.abs,i=Math.floor,s=Math.sin,l=Math.cos,c=Math.PI,o=c/180,r=.043948*o,d=.617981/3600*o,b=360/32768*o,u=.0585;let v,p,h,_,f,g,k;function E(){console.log("zero"),v=[0,0,0],p=[0,0,0],euler=[0,0,0],h=[0,0,0],_=[0,0,0],g=[0,0,0],f=[0,0,0],k=!1,T()}function T(){e.emit("data",{imu_angle:p,error:v})}function A(n,t,e){return n-(e-t)*i((n-t)/(e-t))}function S(n){if(k)return;for(let e=0;e<3;e++)if(n[e]){p[e]=A(p[e]+n[e],0,2*c);const s=A(p[e]-h[e],-c,c),l=s>0?1:-1;let o=i(a(s)/b);h[e]=A(h[e]+l*b*o,0,2*c);let r=t.peek(26+e);r=16384&r?-(32767^r):r,r+=l*o,t.poke(26+e,r<0?32767^-r:r)}}return E(),{rotate:function(n){const t=s(p[2]),e=l(p[2])*l(p[0]),a=s(p[0]),i=-l(p[2])*s(p[0]),o=l(p[0]),r=o*e-i*a;S([A(n[0]-(n[1]*o*t-n[2]*a*t)/r,-c,c),A((n[1]*o-n[2]*a)/r,-c,c),A((n[2]*e-n[1]*i)/r,-c,c)])},update:T,accelerate:function(n){const e=s(p[0]),a=s(p[1]),c=s(p[2]),o=l(p[0]),r=l(p[1]),d=l(p[2]),b=[d*r*n[0]+(-o*c*r+e*a)*n[1]+(e*c*r+o*a)*n[2],c*n[0]+o*d*n[1]-e*d*n[2],-d*a*n[0]+(o*c*a+e*r)*n[1]+(-e*c*a+o*r)*n[2]];for(let n=0;n<3;n++){g[n]+=b[n];const e=i((g[n]-f[n]*u)/u);f[n]+=e;let a=t.peek(31+n);a=16384&a?-(32767^a):a,a+=e,t.poke(31+n,a<0?32767^-a:a)}},gyro_coarse_align:function(n,e){const a=(16384&e?-1:1)*(16383&e);1==t.getChannelBitState(10,4)?(124===n?S([a*r,0,0]):125===n?S([0,a*r,0]):126===n&&S([0,0,a*r]),T()):v[n-124]+=a},zero:E,gyro_fine_align:function(n,t){const e=8192&t,a=4096&t,i=(16384&t?-1:1)*(2047&t);!e&&a&&S([i*d,0,0]),e&&!a&&S([0,i*d,0]),e&&a&&S([0,0,i*d]),T()},on:e.on.bind(e)}}}),$$.control.registerControl("DSKY",{template:'\n<div class="top">\n    <div class="left">\n        <div class="col">\n            <div bn-style="uplink_acty"><span>UPLINK ACTY</span></div>\n            <div bn-style="no_att">NO ATT</div>\n            <div bn-style="stby">STBY</div>\n            <div bn-style="key_rel">KEY REL</div>\n            <div bn-style="opr_err">OPR ERR</div>\n            <div></div>\n            <div></div>\n        </div>\n\n        <div class="col">\n            <div bn-style="temp">TEMP</div>\n            <div bn-style="gimball_lock"><span>GIMBALL LOCK</span></div>\n            <div bn-style="prog">PROG</div>\n            <div>RESTART</div>\n            <div bn-style="tracker">TRACKER</div>\n            <div bn-style="alt">ALT</div>\n            <div bn-style="vel">VEL</div>\n        </div>\n\n    \n    </div>\n    \n    \n    <div class="right">\n        <div class="line">\n            <div class="compActy" bn-style="comp_acty"><span>COMP ACTY</span></div>\n            <div>\n                <div class="label">PROG</div>\n                <div class="digit" bn-html="prog00"></div>\n            </div>\n    \n        </div>\n        <div class="line">\n            <div>\n                <div class="label">VERB</div>\n                <div class="digit" bn-html="verb00"></div>\n            </div>\n            <div>\n                <div class="label">NOUN</div>\n                <div class="digit" bn-html="noun00"></div>\n            </div>\n        </div>\n        <div class="digit big" bn-html="r1"></div>\n        <div class="digit big" bn-html="r2"></div>\n        <div class="digit big" bn-html="r3"></div>\n    \n    </div>\n</div>\n\n<div class="bottom">\n    <div class="keyboard" bn-event="click.key: onKey">\n        <div>\n            <button class="label key">VERB</button>\n            <button class="label key">NOUN</button>\n        </div>\n        <div>\n            <button class="key">+</button>\n            <button class="key">-</button>\n            <button class="key">0</button>\n        </div>\n        <div>\n            <button class="key">1</button>\n            <button class="key">4</button>\n            <button class="key">7</button>\n        </div>\n        <div>\n            <button class="key">8</button>\n            <button class="key">5</button>\n            <button class="key">2</button>\n        </div>\n        <div>\n            <button class="key">9</button>\n            <button class="key">6</button>\n            <button class="key">3</button>\n        </div>\n        <div>\n            <button class="label key">CLR</button>\n            <button class="label key">PRO</button>\n            <button class="label key">KEY REL</button>\n        </div>\n        <div>\n            <button class="label key">ENTR</button>\n            <button class="label key">RSET</button>\n        </div>\n    \n    </div>\n</div>\n',deps:["breizbot.pager","app.emuAgc"],props:{},init:function(n,t,e){Math.floor,Math.round;const a={VERB:17,NOUN:31,"+":26,"-":27,0:16,CLR:30,"KEY REL":25,ENTR:28,RSET:18},i=e.bit;function s(n){var t="E";switch(n){case 0:t="H";break;case 21:t="0";break;case 3:t="1";break;case 25:t="2";break;case 27:t="3";break;case 15:t="4";break;case 30:t="5";break;case 28:t="6";break;case 19:t="7";break;case 29:t="8";break;case 31:t="9"}return t}let l=0,c=0,o=0,r=0,d=0,b=0;const u="&nbsp;";function v(n){return{"background-color":n?"#ffc200":"#888888"}}function p(n){return{"background-color":n?"#ffffff":"#888888"}}const h=$$.viewController(n,{data:{flash_flag:!1,status11:0,status13:0,status10:0,digits:"000000+00000+00000+00000",comp_acty:function(){return v(i(this.status11,2))},uplink_acty:function(){return p(i(this.status11,3))},temp:function(){return v(i(this.status11,4))},key_rel:function(){return p(i(this.status11,5)&&this.flash_flag)},opr_err:function(){return p(i(this.status11,7)&&this.flash_flag)},stby:function(){return p(i(this.status13,11))},vel:function(){return v(i(this.status10,3))},no_att:function(){return p(i(this.status10,4))},alt:function(){return v(i(this.status10,5))},gimball_lock:function(){return v(i(this.status10,6))},tracker:function(){return v(i(this.status10,8))},prog:function(){return v(i(this.status10,9))},r1:function(){return this.digits.slice(6,12).replace(/H/g,u)},r2:function(){return this.digits.slice(12,18).replace(/H/g,u)},prog00:function(){return this.digits.slice(0,2).replace(/H/g,u)},r3:function(){return this.digits.slice(18,24).replace(/H/g,u)},verb00:function(){return i(this.status11,6)&&!this.flash_flag?u+u:this.digits.slice(2,4).replace(/H/g,u)},noun00:function(){return i(this.status11,6)&&!this.flash_flag?u+u:this.digits.slice(4,6).replace(/H/g,u)}},events:{onKey:function(t){const e=$(this).text();let i=a[e];null==i&&(i=parseInt(e)),t.stopPropagation(),n.trigger("key",{val:i})}}});this.processLights=function(n){h.setData({lamps:n})},this.setData=function(n){h.setData(n)},this.process=function(n,t){if(8==n&&0==t)return;if(9==n)return void h.setData({status11:t});if(11==n)return void h.setData({status11:t});const e=t>>11,a=t>>10&1,i=s(t>>5&31),u=s(31&t),v=h.model.digits.split("");switch(e){case 12:h.setData({status10:t});break;case 11:v[0]=i,v[1]=u;break;case 10:v[2]=i,v[3]=u;break;case 9:v[4]=i,v[5]=u;break;case 8:v[7]=u;break;case 7:v[8]=i,v[9]=u,l=a;break;case 6:v[10]=i,v[11]=u,c=a;break;case 5:v[13]=i,v[14]=u,o=a;break;case 4:v[15]=i,v[16]=u,r=a;break;case 3:v[17]=i,v[19]=u;break;case 2:v[20]=i,v[21]=u,d=a;break;case 1:v[22]=i,v[23]=u,b=a}if(12!=e){v[6]=l&&!c?"+":l||c?"-":"H",v[12]=o&&!r?"+":o||r?"-":"H",v[18]=d&&!b?"+":d||b?"-":"H";const n=v.join("");h.setData({digits:n})}}}}),$$.control.registerControl("FDAI",{template:'<svg width="350" height="360" bn-bind="svg">\n    <defs>\n      <marker id="triangle" viewBox="0 0 10 10"\n            refX="1" refY="5"\n            markerUnits="strokeWidth"\n            markerWidth="10" markerHeight="10"\n            orient="auto">\n        <path d="M 0 0 L 10 5 L 0 10 z" fill="black"/>\n      </marker>\n      <marker id="triangle2" viewBox="0 0 16 16"\n            refX="1" refY="8"\n            markerUnits="strokeWidth"\n            markerWidth="16" markerHeight="16"\n            orient="auto">\n        <path d="M 0 0 L 16 8 L 0 16 z" fill="black"/>\n      </marker>\n  \n  </defs>\n    \n  </svg>',deps:["breizbot.pager"],props:{},init:function(n,t){const e=$$.viewController(n,{data:{},events:{}}).scope.svg.get(0),a=150,i=180,s=180/Math.PI,l=42.1875/384;let c=0,o=0,r=0;function d(n,t){Object.keys(t).forEach(e=>{n.setAttribute(e,t[e])})}function b(n,t){const a=document.createElementNS("http://www.w3.org/2000/svg",n);return"object"==typeof t&&d(a,t),e.appendChild(a),a}function u(n,t,e,a,i,s){return b("line",Object.assign({x1:n,y1:t,x2:e,y2:a,stroke:i},s))}function v(n,t,e,a,i){const s=b("text",Object.assign({x:n,y:t,fill:a},i));return s.textContent=e,s}function p(n,t,e,a,i){return b("circle",Object.assign({r:e,cx:n,cy:t,fill:a},i))}const h={};function _(n,t){d(h[n],{x1:t,x2:t})}function f(n,t){d(h[n],{y1:t,y2:t})}function g(n,t,e,a,i){d(h[n],{x1:t,y1:e,x2:a,y2:i})}function k(n,t,e){d(h[n],{x:t,y:e})}function E(n,t,e,a,i,s){const l=a*Math.PI/180;return u(n+e*Math.sin(l),t+e*Math.cos(l),n+(e+=i)*Math.sin(l),t+e*Math.cos(l),s)}for(let n=-270;n<=270;n+=30){const t=n>=-180&&n<=0||n>=180&&n<=360?"black":"white";h[`PITCH_${n}`]=u(0,0,0,0,t);const e=n<0?n+360:n;h[`PITCH_TXT_${n}`]=v(0,0,e,t)}h.zAxisLM=u(0,0,0,0,"blue");for(let n=-270;n<=270;n+=30){h[`zAxis_${n}`]=u(0,0,0,0,"blue");const t=n<0?n+360:n;h[`zAxis_TXT_${n}`]=v(0,0,t,"blue")}h.RollMarker=u(0,0,0,0,"black",{"marker-end":"url(#triangle2)"}),h.YawErrorNeedle=u(0,i+10,0,i+100,"orange"),h.PitchErrorNeedle=u(a+10,0,a+100,0,"orange"),h.RollErrorNeedle=u(0,i-10,0,i-100,"orange"),p(a,i,190,"none",{stroke:"darkgrey","stroke-width":180});for(let n=70;n<110;n+=.5)E(a,i,100,n,10,"red");for(let n=250;n<290;n+=.5)E(a,i,100,n,10,"red");for(let n=0;n<360;n+=10){E(a,i,100,n,n%30==0?10:15,"white")}p(a,i,100,"none",{stroke:"black","stroke-width":4}),u(a-10,i,a+10,i,"white"),u(a,i-10,a,i+10,"white");for(let n=-5;n<=5;n++)u(a+10*n,310,a+10*n,315,"white");h.YawRateMarker=u(0,325,0,324,"black",{"marker-end":"url(#triangle)"}),v(a,310,"0","white"),v(a,340,"YAW RATE","white"),h.RollRateMarker=u(0,36,0,37,"black",{"marker-end":"url(#triangle)"}),v(a,62,"0","white"),v(a,30,"ROLL RATE","white");for(let n=-5;n<=5;n++)u(a+10*n,45,a+10*n,50,"white");for(let n=-5;n<=5;n++)u(280,i+10*n,285,i+10*n,"white");function T(n){const t=2*Math.PI;return n<-t?n+t:n>=t?n-t:n}function A(n,t,e){return Math.max(Math.min(e,n),t)}function S(t,e){const[d,b,u]=t,[v,p,h]=e,E=Math.sin(d),S=Math.sin(b),y=Math.sin(u),M=Math.cos(d),x=Math.cos(b),D=Math.cos(u),R=y,N=D*M,w=x*y*E+S*M,C=-D*E,m=-S*y*E+x*M,I=T(Math.atan2(R,N)),L=T(Math.atan2(w,m)),P=T(Math.asin(C)),O=I,F=Math.sin(-1*O),G=Math.cos(-1*O),U=-1*P*s,K=L*s,B=I*s,H=U>0?360-U:Math.abs(U),$=K<0?K+360:K,Y=B<0?B+360:B;n.trigger("data",{euler:[H,$,Y]}),_("YawRateMarker",a-10*A(r,-5,5)),f("PitchRateMarker",i-10*A(o,-5,5)),_("RollRateMarker",a+10*A(c,-5,5)),_("YawErrorNeedle",a+v*l),f("PitchErrorNeedle",i+p*l),_("RollErrorNeedle",a-h*l);const z=a+85*Math.sin(O+Math.PI),W=a+86*Math.sin(O+Math.PI);function X(n,t){return{x:n*G-t*F+a,y:n*F+t*G+i}}g("RollMarker",z,i+85*Math.cos(O+Math.PI),W,i+86*Math.cos(O+Math.PI));const j=K>180?K-180:K;for(let n=-270;n<=270;n+=30){const t=-50,e=50,a=-n+j,i=0,s=a,{x:l,y:c}=X(i,s),{x:o,y:r}=X(t,a),{x:d,y:b}=X(e,a);k(`PITCH_TXT_${n}`,l,c),g(`PITCH_${n}`,o,r,d,b)}const V=U>180?U-360:U,Z=-280+V,J=280+V,{x:Q,y:q}=X(Z,0),{x:nn,y:tn}=X(J,0);g("zAxisLM",Q,q,nn,tn);for(let n=-270;n<=270;n+=30){const t=n+V,e=-2,a=n+V,i=3,s=n+V,l=10,{x:c,y:o}=X(s,l),{x:r,y:d}=X(t,e),{x:b,y:u}=X(a,i);k(`zAxis_TXT_${n}`,c,o),g(`zAxis_${n}`,r,d,b,u)}}h.PitchRateMarker=u(296,0,295,0,"black",{"marker-end":"url(#triangle)"}),v(a+128-5,i,"0","white",{"alignment-baseline":"middle"}),v(a+155,i-30,"P","white"),v(a+155,i-22,"I","white"),v(a+155,i-14,"T","white"),v(a+155,i-6,"C","white"),v(a+155,i+2,"H","white"),v(a+155,i+18,"R","white"),v(a+155,i+26,"A","white"),v(a+155,i+34,"T","white"),v(a+155,i+42,"E","white"),S([0,0,0],[0,0,0]),this.update=S}}),$$.control.registerControl("INPUT",{template:'<div bn-event="click.check: onCheckbox">\n    <div>\n        <fieldset>\n            <legend>ENGINE</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 3}" class="check">\n                <label>ENGINE ARMES SIGNAL</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 5}" class="check">\n                <label>AUTO THROTTLE<br>COMPUTER CONTROL OF DESCENT</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 9}" class="check">\n                <label>DESCENT ENGINE<br>DISABLED BY CREW</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 10}" class="check">\n                <label>APPARENT DESCENT ENGINE<br>GIMBAL FAILURE</label>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>THRUSTERS</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 1}" class="check">\n                <label>THRUSTERS 2&4 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 2}" class="check">\n                <label>THRUSTERS 5&8 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 3}" class="check">\n                <label>THRUSTERS 1&3 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 4}" class="check">\n                <label>THRUSTERS 6&7 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 5}" class="check">\n                <label>THRUSTERS 14&16 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 6}" class="check">\n                <label>THRUSTERS 13&15 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 7}" class="check">\n                <label>THRUSTERS 9&12 DISABLED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 32, bit: 8}" class="check">\n                <label>THRUSTERS 10&11 DISABLED</label>\n            </div>\n        </fieldset>\n    </div>\n    <div>\n        <fieldset>\n            <legend>RADAR</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 33, bit: 2}" class="check">\n                <label>RR AUTO-POWER ON</label>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>IMU</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 14}" class="check">\n                <label>ISS TURN ON REQUESTED</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 11}" class="check">\n                <label>IMU CAGE COMMAND TO DRIVE<br>IMU GIMBAL ANGLES TO 0</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 6}" class="check">\n                <label>DISPLAY INERTIAL DATA</label>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>DAP/ATTITUDE MODE</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 30, bit: 10}" class="check">\n                <label>AGC HAS CONTROL OF LM<br>(NOT AGS)</label>\n            </div>\n            <div bn-control="brainjs.radiogroup" bn-event="change: onDapModeChange" bn-val="DAP_MODE">\n                <div class="data">\n                    <input type="radio" value="OFF">\n                    <label>DAP OFF</label>\n                </div>\n                <div class="data">\n                    <input type="radio" value="HOLD">\n                    <label>ATTITUDE HOLD MODE ON</label>\n                </div>\n                <div class="data">\n                    <input type="radio" value="AUTO">\n                    <label>AUTO STABILIZATION<br>OF ATTITUDE ON</label>\n                </div>\n\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>AOT BUTTONS</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 3}" class="check">\n                <label>X-AXIS MARK</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 4}" class="check">\n                <label>Y-AXIS MARK</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 5}" class="check">\n                <label>MARK REJECT</label>\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>DESCENT CONTROL</legend>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 6}" class="check">\n                <label>DESCENT+</label>\n            </div>\n            <div class="data">\n                <input type="checkbox" bn-data="{channel: 16, bit: 7}" class="check">\n                <label>DESCENT-</label>\n            </div>\n        </fieldset>\n    </div>\n\n    <div>\n        <fieldset>\n            <legend>RHC/ACA</legend>\n            <div class="slider">\n                <div class="sliderValue">\n                    <label>Roll</label>\n                    <span bn-text="roll"></span>\n                </div>\n                <div bn-control="brainjs.slider" bn-data="rhcRange" bn-update="input" bn-val="roll"></div>\n            </div>\n            <div class="slider">\n                <div class="sliderValue">\n                    <label>Pitch</label>\n                    <span bn-text="pitch"></span>\n                </div>\n                <div bn-control="brainjs.slider" bn-data="rhcRange" bn-update="input" bn-val="pitch"></div>\n            </div>\n            <div class="slider">\n                <div class="sliderValue">\n                    <label>Yaw</label>\n                    <span bn-text="yaw"></span>\n                </div>\n                <div bn-control="brainjs.slider" bn-data="rhcRange" bn-update="input" bn-val="yaw"></div>\n            </div>\n            <div>\n                <button bn-event="click: onDetent">DETENT</button>\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>THC</legend>\n            <div bn-control="brainjs.radiogroup" class="THC" bn-event="change: onThcChange" bn-val="THC">\n                <div class="data">\n                    <input type="radio" value="NEUTRAL">\n                    <label>NEUTRAL</label>\n                </div>\n                <div class="XYZ">\n                    <div>\n                        <div class="data">\n                            <input type="radio" value="+X">\n                            <label>+X</label>\n                        </div>\n                        <div class="data">\n                            <input type="radio" value="+Y">\n                            <label>+Y</label>\n                        </div>\n                        <div class="data">\n                            <input type="radio" value="+Z">\n                            <label>+Z</label>\n                        </div>\n                    </div>\n                    <div>\n                        <div class="data">\n                            <input type="radio" value="-X">\n                            <label>-X</label>\n                        </div>\n                        <div class="data">\n                            <input type="radio" value="-Y">\n                            <label>-Y</label>\n                        </div>\n                        <div class="data">\n                            <input type="radio" value="-Z">\n                            <label>-Z</label>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        </fieldset>\n    </div>\n</div>',deps:["breizbot.pager","app.emuAgc"],props:{},init:function(n,t,e){const a=$$.viewController(n,{data:{roll:0,pitch:0,yaw:0,rhcRange:{min:-57,max:57},DAP_MODE:"OFF",THC:"NEUTRAL"},events:{onDetent:function(n){a.setData({roll:0,pitch:0,yaw:0})},onCheckbox:function(){const n=$(this),{channel:t,bit:a}=n.data(),i=parseInt(t,8);e.writeIoBit(i,a,n.getValue()?0:1)},onDapModeChange:function(n){const t=$(this).getValue();switch(console.log("onDapModeChange",t),t){case"OFF":e.writeIoBits(25,{13:1,14:1});break;case"HOLD":e.writeIoBits(25,{13:0,14:1});break;case"AUTO":e.writeIoBits(25,{13:1,14:0})}},onThcChange:function(){const n=$(this).getValue();switch(console.log("onThcChange",n),n){case"NEUTRAL":e.writeIoBits(25,{7:1,8:1,9:1,10:1,11:1,12:1});break;case"+X":e.writeIoBits(25,{7:0,8:1,9:1,10:1,11:1,12:1});break;case"-X":e.writeIoBits(25,{7:1,8:0,9:1,10:1,11:1,12:1});break;case"+Y":e.writeIoBits(25,{7:1,8:1,9:0,10:1,11:1,12:1});break;case"-Y":e.writeIoBits(25,{7:1,8:1,9:1,10:0,11:1,12:1});break;case"+Z":e.writeIoBits(25,{7:1,8:1,9:1,10:1,11:0,12:1});break;case"-Z":e.writeIoBits(25,{7:1,8:1,9:1,10:1,11:1,12:0})}}}})}}),$$.control.registerControl("SIMU",{template:'<div>\n    <fieldset>\n        <div class="data">\n            <label>SIMULATION TIME:</label>\n            <div>\n                <span bn-text="Simulation_Timer_text"></span>\n                <span class="unit">SEC</span>    \n            </div>\n        </div>\n        <div class="data">\n            <label>LM WEIGHT:</label>\n            <div>\n                <span bn-text="LM_Weight_KG_text"></span>\n                <span class="unit">KG</span>    \n            </div>\n        </div>\n\n    </fieldset>\n    <fieldset>\n        <legend>DESCENT</legend>\n        <div class="data">\n            <label>THRUST:</label>\n            <div>\n                <span bn-text="Descent_Thrust_Procent_text"></span>\n                <span class="unit"></span>\n            </div>\n        </div>\n        <div class="data">\n            <label>PROPELLANT:</label>\n            <div>\n                <span bn-text="Descent_Propellant_Mass_KG_text"></span>\n                <span class="unit">KG</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>FUEL FLOW:</label>\n            <div>\n                <span bn-text="Descent_Fuel_Flow_SEC_text"></span>\n                <span class="unit">KG/S</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>ACCELERATION:</label>\n            <div>\n                <span bn-text="Descent_Acceleration_text"></span>\n                <span class="unit">M/S²</span>\n            </div>\n        </div>\n        <div bn-show="!isSeparated">\n            <div>\n                <input type="checkbox" bn-val="DESCENT_ENGINE_FLAG" bn-update="click">\n                <label>ENGINE ON/OFF</label>\n            </div>\n            <div class="data">\n                <label>Thrust</label>\n                <div>\n                    <span bn-text="Descent_Propulsion_N"></span>\n                    <span class="unit">N</span>\n                </div>\n            </div>\n            <div bn-control="brainjs.slider" bn-data="{min: Descent_Propulsion_Min_N, max: Descent_Propulsion_Max_N }"\n                bn-update="input" bn-val="Descent_Propulsion_N"></div>\n        </div>\n    </fieldset>\n    <fieldset>\n        <legend>Stage</legend>\n        <button bn-event="click: onSeperateStage" bn-prop="{disabled: isSeparated}">SEPARATE STAGE</button>\n    </fieldset>\n    <fieldset>\n        <legend>ASCENT</legend>\n        <div class="data">\n            <label>PROPELLANT:</label>\n            <div>\n                <span bn-text="Ascent_Propellant_Mass_KG_text"></span>\n                <span class="unit">KG</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>FUEL FLOW:</label>\n            <div>\n                <span bn-text="Ascent_Fuel_Flow_SEC_text"></span>\n                <span class="unit">KG/S</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>ACCELERATION:</label>\n            <div>\n                <span bn-text="Ascent_Acceleration_text"></span>\n                <span class="unit">M/S²</span>\n            </div>\n        </div>\n        <div bn-show="isSeparated">\n            <input type="checkbox" bn-val="ASCENT_ENGINE_FLAG" bn-update="click">\n            <label>ENGINE ON/OFF</label>\n        </div>\n    </fieldset>\n    <fieldset>\n        <legend>RCS</legend>\n        <div class="data">\n            <label>PROPELLANT:</label>\n            <div>\n                <span bn-text="RCS_Propellant_Mass_KG_text"></span>\n                <span class="unit">KG</span>\n            </div>\n        </div>\n\n    </fieldset>\n    <fieldset>\n        <legend>EULER ANGLE</legend>\n        <div class="data">\n            <label>YAW:</label>\n            <div>\n                <span bn-text="yaw"></span>\n                <span class="unit">°</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>PITCH:</label>\n            <div>\n                <span bn-text="pitch"></span>\n                <span class="unit">°</span>\n            </div>\n        </div>\n        <div class="data">\n            <label>ROLL:</label>\n            <div>\n                <span bn-text="roll"></span>\n                <span class="unit">°</span>\n            </div>\n        </div>\n    </fieldset>\n\n</div>',deps:["breizbot.pager"],props:{},init:function(n,t){const e=Math.PI,a=180/e*(e/4),i=Math.abs;let s=0,l=4670,c=10694,o=287,r=445,d=2840,b=8355,u=45040,v=3050,p=4560,h=0,_=0,f=0,g=!1,k=2353,E=15600,T=3050,A=0,S=0,y=!1,M="DESCENT",x=0,D=0,R=0,N=0,w=0,C=0;const m={ASCENT:{a:[.0065443852,.0035784354,.0056946631],b:[32e-6,.162862,.009312],c:[-.006923,.002588,-.023608]},DESCENT:{a:[.0059347674,.0014979264,.0010451889],b:[.002989,.018791,-.068163],c:[.008721,-.068163,-.066027]}};let I=0,L=0,P=0,O=0,F=0,G=0,U=0,K=0,B=0,H=0,$=0,Y=0,z=0,W=0,X=0,j=0;const V=$$.viewController(n,{data:{Simulation_Timer:0,Descent_Thrust_Procent:_,LM_Weight_KG:s,Descent_Propellant_Mass_KG:b,Descent_Fuel_Flow_SEC:h,Descent_Acceleration:f,RCS_Propellant_Mass_KG:o,Ascent_Propellant_Mass_KG:k,Ascent_Fuel_Flow_SEC:A,Ascent_Acceleration:S,Descent_Propulsion_Min_N:4560,Descent_Propulsion_Max_N:u,Descent_Propulsion_N:p,DESCENT_ENGINE_FLAG:g,ASCENT_ENGINE_FLAG:y,LM_CONFIG:M,euler:[0,0,0],yaw:function(){return this.euler[0].toFixed(2)},pitch:function(){return this.euler[1].toFixed(2)},roll:function(){return this.euler[2].toFixed(2)},Simulation_Timer_text:function(){return this.Simulation_Timer.toFixed(1)},Descent_Thrust_Procent_text:function(){return this.Descent_Thrust_Procent.toFixed(1)},LM_Weight_KG_text:function(){return this.LM_Weight_KG.toFixed(0)},Descent_Propellant_Mass_KG_text:function(){return this.Descent_Propellant_Mass_KG.toFixed(0)},Descent_Fuel_Flow_SEC_text:function(){return this.Descent_Fuel_Flow_SEC.toFixed(2)},Descent_Acceleration_text:function(){return this.Descent_Acceleration.toFixed(3)},RCS_Propellant_Mass_KG_text:function(){return this.RCS_Propellant_Mass_KG.toFixed(1)},Ascent_Propellant_Mass_KG_text:function(){return this.Ascent_Propellant_Mass_KG.toFixed(0)},Ascent_Fuel_Flow_SEC_text:function(){return this.Ascent_Fuel_Flow_SEC.toFixed(1)},Ascent_Acceleration_text:function(){return this.Ascent_Acceleration.toFixed(3)},isSeparated:function(){return"ASCENT"==this.LM_CONFIG}},events:{onSeperateStage:function(){console.log("onSeperateStage"),M="ASCENT",b=0,c=0,V.setData({LM_CONFIG:M,Descent_Propellant_Mass_KG:b,LM_Weight_Descent_KG:c})}}});function Z(t,e,a){n.trigger("data",{accelerate:[t,e,a]})}window.simu=V,this.dynamic_simulation=function(t){if(s=l+c,V.setData({Descent_Thrust_Procent:_,LM_Weight_KG:s,Descent_Propellant_Mass_KG:b,Descent_Fuel_Flow_SEC:h,Descent_Acceleration:f,RCS_Propellant_Mass_KG:o,Ascent_Propellant_Mass_KG:k,Ascent_Fuel_Flow_SEC:A,Ascent_Acceleration:S}),g=V.model.DESCENT_ENGINE_FLAG,y=V.model.ASCENT_ENGINE_FLAG,_=V.model.Descent_Propulsion_N/u,g&&b>0){const n=(h=p/v)*t;b-=n,c-=n,Z((f=p/s)*t,0,0)}else g=!1,f=0,h=0;if(y&&k>0){const n=(A=E/T)*t;k-=n,Z((S=E/(l-=n))*t,0,0)}else y=!1,S=0,A=0;const e=s/65535,[i,r,d]=m[M].a,[I,L,P]=m[M].b,[O,F,G]=m[M].c;var U,K,B;x=a*(I+i/(e+O)),D=a*(L+r/(e+F)),R=a*(P+d/(e+G)),U=C*t,K=w*t,B=N*t,n.trigger("data",{rotate:[U,K,B]})},this.update_RCS=function(t){console.log("update_RCS",t);const e=1==H||1==I?H+I:0,a=1==B||1==L?-(B+L):0,c=1==z||1==F?z+F:0,b=1==j||1==G?-(j+G):0,u=1==W||1==Y||1==U||1==O?W+Y+U+O:0,v=1==X||1==$||1==K||1==P?-(X+$+K+P):0,p=e+a,h=c+b,_=u+v;let f=0;0!=e&&e+a==0&&(f=1==H?H+L:-(B+I)),0!=c&&c+b==0&&(1==z?f+=z+G:f-=j+F),0!=f&&Z(t*f*r/s,0,0);0!=u&&u+v==0&&(1==X&&Z(0,2*t*r/s,0),1==K&&Z(0,2*-t*r/s,0),1==$&&Z(0,0,2*t*r/s),1==W&&Z(0,0,2*-t*r/s));if(o>0){C+=x*t*_,w+=D*t*(h-p),N+=R*t*(h+p),n.trigger("data",{omega:[C,w,N]});const s=(i(e)+i(a)+i(c)+i(b)+i(u)+i(v))*r/d*t;l-=s,o-=s}},this.setData=function(n){V.setData(n)}}});