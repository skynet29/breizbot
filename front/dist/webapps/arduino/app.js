$$.control.registerControl("rootPage",{deps:["breizbot.broker"],template:'<div class="message w3-text-red" bn-show="!homeboxConnected">Homebox not connected</div>\n<div class="scrollPanel" bn-show="homeboxConnected">\n    <table class="w3-table-all w3-centered">\n        <thead>\n            <tr class="w3-green">\n                <th>Alias</th>\n                <th>Type</th>\n                <th>Properties</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody bn-each="devices" bn-iter="dev" bn-event="click.action: onAction">\n            <tr bn-data="{item: dev}">\n                <td bn-text="dev.alias"></td>\n                <td bn-text="dev.type"></td>\n                <td bn-each="dev.props" bn-iter="prop">\n                    <div>\n                        <span bn-text="prop.label"></span>:\n                        <span bn-text="prop.value"></span>\n                    </div>\n                </td>\n                <td bn-each="dev.actions" bn-iter="a">\n                    <button class="action w3-btn w3-blue w3-margin-right" \n                        bn-data="{action: a.cmd}" \n                        bn-text="a.label"></button>\n                </td>\n            </tr>       \n\n        </tbody>\n    </table>\n</div>',init:function(e,t){const n=$$.viewController(e,{data:{devices:[],homeboxConnected:!1},events:{onAction:function(){const e=$(this).data("action");console.log("action",e);const{deviceId:n,type:a}=$(this).closest("tr").data("item"),s=o[a].actions,{args:i,label:c}=s[e];console.log("args",i),console.log("deviceId",n),null!=i?$$.ui.showForm({fields:i,title:c},function(o){t.emitTopic("homebox.arduino.cmd",{deviceId:n,cmd:e,args:o})}):t.emitTopic("homebox.arduino.cmd",{deviceId:n,cmd:e})}}});let o={};t.register("homebox.arduino.types",function(e){console.log("msg",e),o=e.data}),t.register("homebox.arduino.status",function(e){console.log("msg",e);const t=e.data.map(e=>{const{properties:t,alias:n,deviceId:a,type:s}=e,i=o[s],c=[];for(let e in t){const n=t[e],o=i.properties[e].label;c.push({value:n,label:o,propName:e})}const d=[],l=i.actions;for(let e in l){const{label:t}=l[e];d.push({label:t,cmd:e})}return{actions:d,props:c,alias:n,deviceId:a,type:s}});console.log("devices",t),n.setData({devices:t})}),t.register("breizbot.homebox.status",e=>{n.setData({homeboxConnected:e.data.connected})})}});