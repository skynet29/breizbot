$$.control.registerControl("addBook",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="data">\n        <label>Title</label>\n        <input type="text" required name="title">\n\n        <label>Author</label>\n        <input type="text" name="author" bn-control="brainjs.autocomplete" bn-data="{source: authors}" required bn-event="autocompleteselect: onAuthorChange"> \n\n        <label>Year</label>\n        <input type="number" name="year">\n\n        <label>Series</label>\n        <input type="text" name="series" bn-control="brainjs.autocomplete" bn-data="{source: series}">\n\n        <fieldset bn-control="brainjs.checkgroup" name="medium">\n            <legend>Medium</legend>\n            <div>\n                <input type="checkbox" value="pocket" class="w3-check">\n                <label>Pocket</label>\n            </div>\n            <div>\n                <input type="checkbox" value="paperback" class="w3-check">\n                <label>Paperback</label>\n            </div>\n            <div>\n                <input type="checkbox" value="ebook" class="w3-check">\n                <label>eBook</label>\n            </div>\n        </fieldset>\n\n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>',deps:["breizbot.pager","breizbot.http"],props:{data:{},authors:[],series:[]},init:function(t,n,e){const{data:o}=this.props,i=$$.viewController(t,{data:{data:o},events:{onSubmit:function(t){t.preventDefault(),n.popPage($(this).getFormData())},onAuthorChange:async function(t,n){console.log("onAuthorChange",n.item.value),await async function(t){const n=await e.post("/series",{author:t});console.log("series",n),i.setData({series:n})}(n.item.value)}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){i.scope.submit.click()}}}},async function(){const t=await e.get("/authors");console.log("authors",t),i.setData({authors:t})}()}}),$$.control.registerControl("filter",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="filters">\n        <label>Author</label>\n        <div bn-control="brainjs.combobox" bn-data="{items: authors}" name="author"></div>    \n        \n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>\n',deps:["breizbot.pager","breizbot.http"],props:{filters:null},init:function(t,n,e){const o=$.extend({author:"All"},this.props.filters),i=$$.viewController(t,{data:{filters:{},authors:[]},events:{onSubmit:function(t){t.preventDefault(),n.popPage($(this).getFormData())}}});!async function(){const t=await e.get("/authors");t.unshift({value:"All",label:"All",style:"font-weight: bold;"}),i.setData({authors:t}),i.setData({filters:o})}(),this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){i.scope.submit.click()}}}}}}),$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n    <div class="left">\n        <button class="w3-button" title="Add Book" bn-event="click: onAddBook" bn-icon="fas fa-plus">\n        </button>\n\n        <button class="w3-button" title="Filter" bn-event="click: onFilter" bn-icon="fas fa-filter">\n        </button>\n\n        \n    </div>\n\n    <div class="right">\n        <span bn-text="getBooksQty"></span>\n    </div>\n\n\n</div>\n\n<div class="scrollBar">\n    <table class="w3-table-all w3-hoverable w3-small">\n        <thead>\n            <tr>\n                <th>Title</th>\n                <th>Author</th>\n                <th>Year</th>\n                <th>Medium</th>\n                <th>Series</th>\n            </tr>\n        </thead>\n        <tbody bn-each="books" bn-lazzy="getBooks">\n            <tr>\n                <td bn-text="$scope.$i.title"></td>\n                <td bn-text="$scope.$i.author"></td>\n                <td bn-text="$scope.$i.year"></td>\n                <td>\n                    <ul bn-each="$scope.$i.medium" bn-iter="medium">\n                        <li bn-text="$scope.medium"></li>\n                    </ul>\n                </td>\n                <td bn-text="$scope.$i.series"></td>\n            </tr>\n\n        </tbody>\n    </table>\n</div>',deps:["breizbot.pager","breizbot.http"],init:function(t,n,e){let o={};const i=$$.viewController(t,{data:{books:[],getBooks:async function(t){return a(t)},booksQty:0,getBooksQty:function(){return this.booksQty>0?`${this.booksQty} books`:""}},events:{onAddBook:function(){n.pushPage("addBook",{title:"Add Book",onReturn:async function(t){await e.post("/addBook",t),a()}})},onFilter:function(){console.log("onFilter"),n.pushPage("filter",{title:"Set Filter",props:{filters:o},onReturn:async function(t){Object.keys(t).forEach(n=>{"All"==t[n]&&delete t[n]}),o=t,a()}})}}});async function a(t){t=t||0;const n=await e.post("/",{offset:t,filters:o});if(0!=t)return i.model.books=i.model.books.concat(n),n;{const{booksQty:t}=await e.post("/booksQty",{filters:o});i.setData({books:n,booksQty:t})}}a()}});