$$.control.registerControl("addBook",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="data">\n        <label>Title</label>\n        <input type="text" required name="title">\n\n        <label>Author</label>\n        <input type="text" name="author" bn-control="brainjs.autocomplete" bn-data="{source: authors}" required\n            bn-event="autocompleteselect: onAuthorChange">\n\n        <label>Year</label>\n        <input type="number" name="year">\n\n        <label>Series</label>\n        <input type="text" name="series" bn-control="brainjs.autocomplete" bn-data="{source: series}">\n\n        <label>Cover</label>\n        <div class="cover">\n            <img bn-attr="{src:getCoverUrl}" bn-show="data.cover">\n            <button type="button" class="w3-btn w3-blue" bn-icon="fas fa-download" title="Download"\n                bn-event="click: onDownloadCover"></button>\n            <input type="hidden" name="cover">\n        </div>\n\n        <label>Description</label><br>\n        <textarea name="description" rows="5"></textarea>\n\n        <fieldset bn-control="brainjs.checkgroup" name="medium">\n            <legend>Medium</legend>\n            <div>\n                <input type="checkbox" value="pocket" class="w3-check">\n                <label>Pocket</label>\n            </div>\n            <div>\n                <input type="checkbox" value="paperback" class="w3-check">\n                <label>Paperback</label>\n            </div>\n            <div>\n                <input type="checkbox" value="ebook" class="w3-check">\n                <label>eBook</label>\n            </div>\n        </fieldset>\n\n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>',deps:["breizbot.pager","breizbot.http","breizbot.files"],props:{data:{}},init:function(t,e,n,o){const{data:i}=this.props;console.log("data",i);const a=$$.viewController(t,{data:{authors:[],series:[],data:i,getCoverUrl:function(){return this.data.cover?o.fileAppThumbnailUrl(this.data.cover,"100x?"):"#"}},events:{onSubmit:function(t){t.preventDefault(),e.popPage($(this).getFormData())},onAuthorChange:async function(t,e){console.log("onAuthorChange",e.item.value),await async function(t){const e=await n.post("/series",{author:t});console.log("series",e),a.setData({series:e})}(e.item.value)},onDownloadCover:function(){$$.ui.openFileDialog(async t=>{console.log("file",t);const e=t.name.split(".").pop(),n=`Cover${Date.now()}.${e}`;console.log("fileName",n),await o.saveFile(t,n),a.model.data.cover=n,a.update()},!1)}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){a.scope.submit.click()}}}},async function(){const t=await n.get("/authors");console.log("authors",t),a.setData({authors:t})}()}}),$$.control.registerControl("filter",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="filters">\n        <label>Author</label>\n        <div bn-control="brainjs.combobox" bn-data="{items: authors}" name="author"></div>    \n        \n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>\n',deps:["breizbot.pager","breizbot.http"],props:{filters:null},init:function(t,e,n){const o=$.extend({author:"All"},this.props.filters),i=$$.viewController(t,{data:{filters:{},authors:[]},events:{onSubmit:function(t){t.preventDefault(),e.popPage($(this).getFormData())}}});!async function(){const t=await n.get("/authors");t.unshift({value:"All",label:"All",style:"font-weight: bold;"}),i.setData({authors:t}),i.setData({filters:o})}(),this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){i.scope.submit.click()}}}}}}),$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n    <div class="left">\n        <button class="w3-button" title="Add Book" bn-event="click: onAddBook" bn-icon="fas fa-plus">\n        </button>\n\n        <button class="w3-button" title="Filter" bn-event="click: onFilter" bn-icon="fas fa-filter">\n        </button>\n\n        \n    </div>\n\n    <div class="right">\n        <span bn-text="getBooksQty" bn-bind="booksQty"></span>\n    </div>\n\n\n</div>\n\n<div class="scrollBar">\n    <table class="w3-table-all w3-hoverable w3-small">\n        <thead>\n            <tr>\n                <th></th>\n                <th>Title</th>\n                <th>Author</th>\n                <th>Year</th>\n                <th>Medium</th>\n                <th>Series</th>\n            </tr>\n        </thead>\n        <tbody bn-each="books" bn-lazzy="getBooks" bn-event="contextmenuchange.item: onItemContextMenu, click.item: onBookDetail" bn-bind="books">\n            <tr class="item" bn-control="brainjs.contextmenu" bn-data="{items: {\n\t\t\t\tdel: {\n\t\t\t\t\tname: \'Delete\',\n\t\t\t\t\ticon: \'fas fa-trash-alt\'\n\t\t\t\t},\n\t\t\t\tedit: {\n\t\t\t\t\tname: \'Edit\',\n\t\t\t\t\ticon: \'fas fa-edit\'\n\t\t\t\t}\n\t\t\t}}">\n                <td>\n                    <img bn-attr="{src: getCoverUrl}" bn-show="$scope.$i.cover">\n                </td>\n                <td bn-text="$scope.$i.title"></td>\n                <td bn-text="$scope.$i.author"></td>\n                <td bn-text="$scope.$i.year"></td>\n                <td>\n                    <ul bn-each="$scope.$i.medium" bn-iter="medium">\n                        <li bn-text="$scope.medium"></li>\n                    </ul>\n                </td>\n                <td bn-text="$scope.$i.series"></td>\n            </tr>\n\n        </tbody>\n    </table>\n</div>',deps:["breizbot.pager","breizbot.http","breizbot.files"],init:function(t,e,n,o){let i={};const a=$$.viewController(t,{data:{books:[],getBooks:async function(t){return s(t)},booksQty:0,getBooksQty:function(){return console.log("getBooksQty",this.booksQty),this.booksQty>0?`${this.booksQty} books`:""},getCoverUrl:t=>t.$i.cover?o.fileAppThumbnailUrl(t.$i.cover,"50x?"):"#"},events:{onBookDetail:function(){const t=$(this).index(),n=a.model.books[t];e.pushPage("showDetails",{title:n.title,props:{data:n}})},onItemContextMenu:function(t,o){const i=$(this).index(),{cmd:s}=o,l=a.model.books[i];console.log("info",l);const r=l._id.toString();"del"==s?$$.ui.showConfirm({title:"Delete Book",content:"Are you sure ?"},async()=>{await n.post(`/deleteBook/${r}`),a.removeArrayItem("books",i,"books"),a.model.booksQty--,a.updateNode("booksQty")}):"edit"==s&&e.pushPage("addBook",{title:"Edit Book",props:{data:l},onReturn:async function(t){console.log("formData",t);const e=await n.post(`/updateBook/${r}`,t);a.updateArrayItem("books",i,e,"books")}})},onAddBook:function(){e.pushPage("addBook",{title:"Add Book",onReturn:async function(t){await n.post("/addBook",t),s()}})},onFilter:function(){console.log("onFilter"),e.pushPage("filter",{title:"Set Filter",props:{filters:i},onReturn:async function(t){Object.keys(t).forEach(e=>{"All"==t[e]&&delete t[e]}),i=t,s()}})}}});async function s(t){t=t||0;const e=await n.post("/",{offset:t,filters:i});if(0!=t)return a.model.books=a.model.books.concat(e),e;{const{booksQty:t}=await n.post("/booksQty",{filters:i});a.setData({books:e,booksQty:t})}}s()}}),$$.control.registerControl("showDetails",{template:'<img bn-attr="{src: getCoverUrl}" bn-show="data.cover">\n<div bn-html="getDescription" class="description"></div>',deps:["breizbot.files"],props:{data:{}},init:function(t,e){const{data:n}=this.props;$$.viewController(t,{data:{data:n,getCoverUrl:function(){return this.data.cover?e.fileAppUrl(this.data.cover):"#"},getDescription:function(){return this.data.description?this.data.description.replace(/\n/g,"<br><br>"):""}},events:{}})}});