$$.control.registerControl("rootPage",{deps:["breizbot.files","breizbot.pager"],template:'<div class="footer">\n\t<button \n\t\ttitle="Take picture" \n\t\tbn-event="click: onTakePicture" \n\t\tbn-show="ready"\n\t\tclass="w3-button w3-circle w3-blue">\n\t\t\t<i class="fa fa-lg fa-camera"></i>\n\t\t</button>\n\t\n</div>\n\n<div \n\tbn-control="brainjs.combobox" \n\tbn-data="{items: videoDevices}"\n\tbn-event="comboboxchange: onDeviceChange"\n\tbn-show="show1"\n\t>\n\t\t\n</div>\n\n<div\n\tbn-control="brainjs.slider",\n\tdata-orientation=\'vertical\',\n\tclass="slider"\n\tbn-show="hasZoom"\n\tbn-event="slidechange: onZoomChange"\n\tbn-iface="slider"\n></div>\n\n<div class="main w3-pale-blue">\n\t<div bn-show="showMessage">Sorry, no video device found !</div>\n\t<div \n\t\tbn-control="brainjs.camera" \n\t\tbn-event="cameraready: onCameraReady"\n\t\tbn-data="{constraints}"\n\t\tbn-iface="camera">\n\t\t\t\n\t\t</div>\t\n\t\n</div>\n',init:function(e,t,n){const a=new Audio("/webapps/camera/assets/camera_shutter.mp3");const o=$$.viewController(e,{data:{ready:!1,videoDevices:[],constraints:{video:!0},showMessage:!1,show1:function(){return this.videoDevices.length>1},hasZoom:!1},events:{onCameraReady:async function(){console.log("onCameraReady");const e=await i.getCapabilities();if(console.log("capabilities",e),e.zoom){const t=i.getSettings(),{min:n,max:a,step:s}=e.zoom;o.scope.slider.setData({min:n,max:a,step:s}),o.scope.slider.setValue(t.zoom),o.setData({hasZoom:!0})}o.setData({ready:!0})},onTakePicture:async function(e){a.play();const o=await i.takePicture(),s=URL.createObjectURL(o);n.pushPage("breizbot.viewer",{title:"Snapshot",props:{url:s,type:"image"},buttons:{save:{title:"Save",icon:"fa fa-save",onClick:function(){!async function(e){const n="SNAP"+Date.now()+".png";await t.saveFile(e,n)}(o)}}},onBack:function(){URL.revokeObjectURL(s)}})},onDeviceChange:function(e,t){console.log("onDeviceChange",$(this).getValue());const n={video:{deviceId:{exact:$(this).getValue()}}};o.setData({constraints:n})},onZoomChange:function(e){const t=$(this).getValue();console.log("onZoomChange",t),i.setZoom(t)}}}),i=o.scope.camera;!async function(){const e=await $$.util.getVideoDevices();o.setData({videoDevices:e.map(e=>({value:e.id,label:e.label}))}),e.length>0?i.start():o.setData({showMessage:!0})}()}});