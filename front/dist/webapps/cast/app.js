$$.control.registerControl("rootPage",{template:'<video bn-attr="{src: url}" bn-bind="video" bn-event="playing: onPlaying, pause: onPaused"></video>',deps:["breizbot.pager"],props:{},init:function(e,n){let o=null;const t=$$.viewController(e,{data:{url:"#"},events:{onPlaying:function(){d({type:"event",name:"playing"})},onPaused:function(){d({type:"event",name:"paused"})}}}),a=t.scope.video.get(0),c=new AudioContext,s=c.createMediaElementSource(a),i=c.createGain();i.gain.value=1;const l=c.createBiquadFilter();l.type="lowpass",l.frequency.value=120;const r=c.createBiquadFilter();r.type="highpass",r.frequency.value=120;const u=c.createGain();function d(e){o.send(JSON.stringify(e))}function p(e){console.log("addConnection",e.state),o=e,d({type:"ready"}),e.addEventListener("message",function(e){const n=JSON.parse(e.data);switch(console.log("Message",n),n.type){case"url":t.setData({url:n.url});break;case"volume":a.volume=n.volume;break;case"play":a.play();break;case"pause":a.pause();break;case"enableKaraoke":o=n.enabled,u.gain.value=o?1:0,i.gain.value=o?0:1}var o}),e.addEventListener("connect",function(e){console.log("connected")}),e.addEventListener("close",function(e){console.log("Connection closed!")})}u.gain.value=0,s.connect(i),i.connect(c.destination),s.connect(l),l.connect(u),s.connect(r),c.audioWorklet.addModule("/webapps/cast/assets/karaoke-processor.js").then(()=>{console.log("audio module loaded");const e=new AudioWorkletNode(c,"karaoke-processor",{numberOfInputs:2,numberOfOutputs:1});r.connect(e),e.connect(u),u.connect(c.destination)}),navigator.presentation.receiver.connectionList.then(e=>{console.log(e.connections),e.connections.map(e=>p(e)),e.addEventListener("connectionavailable",function(e){console.log("connectionavailable"),p(e.connection)})})}});