$$.control.registerControl("rootPage",{template:'<div class="titlebar"><strong bn-text="fileName"></strong></div>\n<div class="toolbar">\n\t<div class="group">\n\t\t<button title="New File" bn-event="click: onNewFile" class="w3-button" bn-icon="fa fa-file"></button>\n\t\t<button title="Save File" bn-event="click: onSaveFile" class="w3-button" bn-icon="fa fa-save"></button>\n\t\t<button title="Open File" bn-event="click: onOpenFile" class="w3-button" bn-icon="fa fa-folder-open"></button>\t\t\n\t\t<span class="separator"></span>\n\t</div>\n\t<div class="group">\n\t\t<button title="Add Anchor" bn-event="click: onAddAnchor" class="w3-button" bn-icon="fas fa-anchor">\n\t\t<button title="Add Anchor Link" bn-event="click: onAddAnchorLink" class="w3-button" bn-icon="fas fa-link">\n\n\t</div>\n\n</div>\n<div bn-control="breizbot.htmleditor" bn-bind="editor" bn-data="{useDataUrlForImg: true}"></div>',deps:["breizbot.files","breizbot.pager","breizbot.params"],init:function(t,n,e,o){console.log("params",o);const i=$$.formDialogController({title:"Add Anchor Link",template:'<div>\n    <label>Links</label>\n    <div bn-control="brainjs.combobox" bn-data="{items}" name="value"></div>\n    <br>\n    <button bn-event="click: onRemoveAnchor" type="button">Remove Selected</button>\n</div>',data:{items:[]},events:{onRemoveAnchor:function(){const{value:t}=i.getFormData();console.log("onRemoveAnchor",t),a.find(`[id=${t}]`).removeAttr("id"),i.setData({items:s()});const n=a.find(`a[href="#${t}"]`),e=n.text();n.replaceWith(`<div>${e}</div>`)}}}),l=$$.viewController(t,{data:{fileName:""},events:{onAddAnchorLink:async function(){console.log("onAddAnchor");const t=s();console.log("anchorList",t),0!=t.length?(i.setData({items:t}),c.addLink(async()=>{const t=await i.show();return console.log("ret",t),null!=t?"#"+t.value:t})):$$.ui.showAlert({content:"No anchor available !"})},onAddAnchor:async function(t){console.log("onAddAnchor");const n=window.getSelection();if(!c.isEditable())return void $$.ui.showAlert({title:"Error",content:"Please select a text before"});const e=n.anchorNode.parentElement;if($(e).hasClass("editor"))return void $$.ui.showAlert({title:"Error",content:"Acnhor text must be a title"});const o=await $$.ui.showPrompt({title:"Add Anchor",label:"Anchor name:"});null!=o&&(console.log("anchorName",o),e.id="tag-"+o)},onNewFile:function(t){c.html(""),l.setData({fileName:""})},onSaveFile:async function(t){let{fileName:n,rootDir:e}=l.model;""==n?null!=(n=await $$.ui.showPrompt({title:"Save File",label:"FileName:"}))&&(n+=".hdoc",await d(n,{checkExists:!0})&&l.setData({fileName:n})):await d(n,{checkExists:!1,destPath:e})},onOpenFile:function(t){e.pushPage("breizbot.files",{title:"Open File",props:{filterExtension:"hdoc"},events:{fileclick:function(t,n){e.popPage(n)}},onReturn:function(t){r(t)}})}}}),a=l.scope.editor,c=a.iface();function s(){const t=[];return a.find("[id^=tag-]").each(function(){const n=$(this).attr("id");t.push({label:n.substr(4),value:n})}),t}function r(t){const{fileName:e,rootDir:o}=t,i=n.fileUrl(o+e);l.setData({fileName:e,rootDir:o}),c.load(i,()=>{console.log("file loaded")})}async function d(t,e){const o=c.html(),i=new Blob([o],{type:"text/html"});return n.saveFile(i,t,e)}o.fileName&&r(o)}});