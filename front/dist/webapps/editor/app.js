$$.control.registerControl("rootPage",{template:'<div class="titlebar"><strong bn-text="fileName"></strong></div>\n<div class="toolbar">\n\t<div bn-control="brainjs.controlgroup">\n\t\t<button title="New File" bn-event="click: onNewFile">\n\t\t\t<i class="fa fa-file"></i></button>\n\t\t<button title="Save File" bn-event="click: onSaveFile">\n\t\t\t<i class="fa fa-save"></i></button>\n\t\t<button title="Open File" bn-event="click: onOpenFile">\n\t\t\t<i class="fa fa-folder-open"></i></button>\n\t</div>\n\t<div bn-control="brainjs.controlgroup">\n\t\t<button title="Insert image" bn-event="click: onInsertImage">\n\t\t\t<i class="fa fa-image"></i></button>\n\t</div>\n</div>\n<div bn-control="brainjs.htmleditor" bn-iface="editor"></div>',deps:["breizbot.files"],props:{$pager:null},init:function(e,t){const{$pager:n}=this.props;const o=$$.viewController(e,{data:{fileName:"",rootDir:""},events:{onNewFile:function(e){console.log("onNewFile"),o.scope.editor.html(""),o.setData({fileName:""})},onSaveFile:function(e){console.log("onSaveFile"),""==o.model.fileName?$$.ui.showPrompt({title:"Save File",content:"FileName:"},function(e){e+=".doc",o.setData({fileName:e,rootDir:"/documents"}),i()}):i()},onOpenFile:function(e){console.log("onOpenFile"),n.pushPage("openFile",{title:"Open File",props:{filterExtension:".doc",cmd:"openFile"}})},onInsertImage:function(e){console.log("onInsertImage"),n.pushPage("openFile",{title:"Insert Image",props:{imageOnly:!0,cmd:"insertImage",showThumbnail:!0}})}}});function i(){const{fileName:e,rootDir:n}=o.model,i=o.scope.editor.html(),l=new Blob([i],{type:"text/html"});t.uploadFile(l,e,n).then(function(e){console.log("resp",e)}).catch(function(e){$$.ui.showAlert({title:"Error",content:e.responseText})})}this.onReturn=function(e){console.log("onReturn",e);const{fileName:n,rootDir:i,cmd:l}=e;"openFile"==l&&(o.setData({fileName:n,rootDir:i}),o.scope.editor.load(t.fileUrl(i+n))),"insertImage"==l&&o.scope.editor.insertImage(t.fileUrl(i+n))}}}),$$.control.registerControl("openFile",{template:'<div bn-control="breizbot.files" \n\tbn-event="fileclick: onFileClick"\n\tdata-show-toolbar="false"\n\tbn-data="{imageOnly, filterExtension, showThumbnail}"\n\t></div>',props:{$pager:null,imageOnly:!1,filterExtension:"",showThumbnail:!1,cmd:""},init:function(e){const{$pager:t,imageOnly:n,filterExtension:o,cmd:i,showThumbnail:l}=this.props;$$.viewController(e,{data:{imageOnly:n,filterExtension:o,showThumbnail:l},events:{onFileClick:function(e,n){n.cmd=i,console.log("onFileClick",n),t.popPage(n)}}})}});