$$.control.registerControl("accountPage",{template:'<div class="main">\n\t<form bn-event="submit: onSubmit">\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Account Name</label>\n\t\t\t<input type="text" name="name" required="" autofocus="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>User</label>\n\t\t\t<input type="text" name="user" required="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Password</label>\n\t\t\t<input type="password" name="pwd" required="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Imap Server</label>\n\t\t\t<input type="text" name="imapHost" required="">\t\t\t\n\t\t</div>\t\t\n\n\t\t<input type="submit" hidden="" bn-bind="submit">\n\t</form>\n\n</div>',deps:["breizbot.mails"],props:{$pager:null},init:function(t,n){const{$pager:e}=this.props,o=$$.viewController(t,{data:{},events:{onSubmit:function(t){t.preventDefault();const o=$(this).getFormData();n.createMailAccount(o).then(()=>{e.popPage("update")})}}});this.onAction=function(t){o.scope.submit.click()}}}),$$.control.registerControl("rootPage",{template:'\t<div class="toolbar">\n\t\t<div class="info">\n\t\t\t<p bn-show="accounts.length == 0">You have no email account</p>\n\t\t\t<p bn-show="accounts.length > 0">Main Account: \n\t\t\t\t<select bn-control="brainjs.selectmenu" bn-each="accounts" bn-val="currentAccount"\n\t\t\t\t\tbn-event="selectmenuchange: onAccountChange">\n\t\t\t\t\t<option bn-text="$i"></option>\n\t\t\t\t</select>\n\t\t\t</p>\n\t\t\t<p class="nbMsg">nbMsg: <strong bn-text="nbMsg"></strong></p>\n\t\t\t\n\t\t</div>\n\t\t<div>\n\t\t\t<button \n\t\t\t\tclass="w3-btn w3-blue" \n\t\t\t\ttitle="Create account"\n\t\t\t\tbn-event="click: onCreateAccount"\n\t\t\t><i class="fa fa-plus"></i></button>\n\t\t\t\n\t\t</div>\n\t\t\n\t</div>\n\n\t<div class="content" bn-show="accounts.length > 0">\n\t\t<div class="scrollPanelTree">\n\t\t\t<div \n\t\t\t\tclass="tree" \n\t\t\t\tbn-control="brainjs.tree"\n\t\t\t\tbn-data="{source: mailboxes}"\n\t\t\t\tbn-event="treeactivate: onTreeActivate"\n\t\t\t\tbn-iface="tree"\n\t\t\t></div>\n\t\t</div>\n\n\t\t<div class="scrollPanelTable">\n\t\t\t<table class="w3-table-all w3-hoverable w3-small">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr class="w3-green">\n\t\t\t\t\t\t<th>From</th>\n\t\t\t\t\t\t<th>Subject</th>\n\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody bn-each="messages" bn-event="click.item: onItemClick">\n\t\t\t\t\t<tr class="item" bn-data="{item: $i}">\n\t\t\t\t\t\t<td bn-text="$i.from.name" bn-attr="{title: $i.from.email}"></td>\n\t\t\t\t\t\t<td bn-text="$i.subject"></td>\n\t\t\t\t\t\t<td bn-text="getDate($i.date)"></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t</div>\n\n',deps:["breizbot.mails"],props:{$pager:null},init:function(t,n){const{$pager:e}=this.props,o=$$.viewController(t,{data:{accounts:[],currentAccount:"",mailboxes:[],messages:[],nbMsg:0,getDate:function(t){return new Date(t).toLocaleDateString("fr-FR")}},events:{onCreateAccount:function(){console.log("onCreateAccount"),e.pushPage("accountPage",{title:"Create Mail Account",buttons:[{name:"create",label:"Create"}]})},onAccountChange:function(){console.log("onAccountChange",$(this).val())},onTreeActivate:function(){console.log("onTreeActivate");const t=a();console.log("mailboxName",t);const{currentAccount:e}=o.model;n.openMailbox(e,t).then(t=>{console.log("data",t);const{messages:n,nbMsg:e}=t;o.setData({nbMsg:e,messages:n.reverse()})})},onItemClick:function(t){const n=a(),s=$(this).data("item");e.pushPage("messagePage",{title:`Message #${s.seqno}`,props:{name:o.model.currentAccount,mailboxName:n,item:s}})}}});function a(){const{tree:t}=o.scope,n=t.getActiveNode();return t.getNodePath(n)}function s(){console.log("loadAccount"),n.getMailAccount().then(t=>{if(console.log("accounts",t),0==t.length)return;const e=t[0];console.log("currentAccount",e),o.setData({accounts:t,currentAccount:e}),function(){console.log("loadMailboxes");const{currentAccount:t}=o.model;n.getMailboxes(t).then(t=>{console.log("mailboxes",t),o.setData({mailboxes:t})})}()})}s(),this.onReturn=function(){console.log("onReturn"),s()}}}),$$.control.registerControl("messagePage",{template:'<div class="header w3-blue">\n\t<div>From: <strong bn-text="item.from.name"></strong></div>\n\t<div>Subject: <strong bn-text="item.subject"></strong></div>\n\t\n</div>\n<div class="main">\n\x3c!-- \t<iframe bn-attr="{srcdoc:text}"></iframe>\n --\x3e\n \t<pre bn-text="text"></pre>\n</div>',deps:["breizbot.mails"],props:{$pager:null,name:"",mailboxName:"",item:null},init:function(t,n){const{$pager:e,name:o,mailboxName:a,item:s}=this.props,c=$$.viewController(t,{data:{text:"",item:s},events:{}});n.openMessage(o,a,s.seqno,s.info).then(t=>{console.log("message",t);let n=t.text;c.setData({text:n})})}});