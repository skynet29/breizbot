$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n\t<div class="info">\n\t\t<div bn-show="show2" class="account">\n\t\t\t<span>Account:&nbsp;</span> \n\t\t\t<div \n\t\t\t\tbn-control="brainjs.combobox" \n\t\t\t\tbn-data="{items: accounts}" \n\t\t\t\tdata-width="150"\n\t\t\t\tbn-val="currentAccount"\n\t\t\t\tbn-event="comboboxchange: onAccountChange">\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t</div>\n\t<div>\n\t\t<div bn-control="brainjs.contextmenu" \n\t\t\tbn-data="{items: getItems}" \n\t\t\tdata-trigger="left" \n\t\t\tclass="w3-button" \n\t\t\tbn-event="contextmenuchange: onMenu"\n\t\t\t>\n\t\t\t\t<i class="fa fa-ellipsis-v"></i>\n    \t\n\t\t</div>\t\t\n\t\t\n\t</div>\n\t\n</div>\n\n<span bn-show="show1" class="message">You have no email account</span>\n\n<div class="content" bn-show="show3">\n\t<div>\n\t\tSelect folder to open:\n\t</div>\n\t\n\t<div class="scrollPanelTree">\n\t\t<div \n\t\t\tclass="tree" \n\t\t\tbn-control="brainjs.tree"\n\t\t\tbn-data="{source: mailboxes}"\n\t\t\tbn-event="treeactivate: onTreeActivate"\n\t\t\tbn-iface="tree"\n\t\t></div>\n\t</div>\n\t\n\t\n\t\n</div>\n',deps:["app.mails","breizbot.pager"],init:function(t,e,n){const o=$$.viewController(t,{data:{accounts:[],currentAccount:"",mailboxes:[],show1:function(){return 0==this.accounts.length},show2:function(){return this.accounts.length>0},show3:function(){return this.mailboxes.length>0},getItems:function(){return 0==this.accounts.length?{add:{name:"Add Account",icon:"fas fa-plus"}}:{add:{name:"Add account",icon:"fas fa-plus"},edit:{name:"Edit selected account",icon:"fas fa-edit"},delete:{name:"Delete selected account",icon:"fas fa-trash"},sep2:"------",newFolder:{name:"New Folder",icon:"fas fa-folder-plus"},sep:"------",new:{name:"New Message",icon:"fas fa-envelope"}}}},events:{onMenu:function(t,i){if(console.log("onMenu",i),"delete"==i.cmd){const{currentAccount:t}=o.model;$$.ui.showConfirm({title:"Delete Account",content:`Do you really want to delete <strong>'${t}'</strong> account`},async()=>{await e.removeMailAccount(t),a()})}"add"==i.cmd&&n.pushPage("accountPage",{title:"Add Mail Account",onReturn:a}),"new"==i.cmd&&n.pushPage("writeMailPage",{title:"New Message",props:{accountName:o.model.currentAccount}}),"edit"==i.cmd&&e.getMailAccount(o.model.currentAccount).then(t=>{n.pushPage("accountPage",{title:"Edit Mail Account",props:{data:t}})}),"newFolder"==i.cmd&&n.pushPage("boxesPage",{title:"Add new folder",props:{currentAccount:o.model.currentAccount,showForm:!0},onReturn:function(t){console.log("onReturn",t),e.addMailbox(o.model.currentAccount,t).then(()=>{s()})}})},onAccountChange:function(){console.log("onAccountChange",$(this).getValue()),o.setData({currentAccount:$(this).getValue()}),s()},onTreeActivate:function(){console.log("onTreeActivate");const t=$(this).iface(),e=t.getActiveNode(),a=t.getNodePath(e,t=>t.data.name);console.log("mailboxName",a);const{currentAccount:i}=o.model;n.pushPage("mailboxPage",{title:e.data.name,props:{currentAccount:i,mailboxName:a},onBack:function(){s();const t=o.scope.tree.getActiveNode();null!=t&&t.setActive(!1)}})}}});async function a(){console.log("loadAccount");try{const t=await e.getMailAccounts();if(console.log("accounts",t),0==t.length)return;const n=t[0];console.log("currentAccount",n),o.setData({accounts:t,currentAccount:n}),s()}catch(t){$$.ui.showAlert({title:"Error",content:t})}}async function s(){console.log("loadMailboxes");const{currentAccount:t}=o.model;try{const n=await e.getMailboxes(t,!0);console.log("mailboxes",n),o.setData({mailboxes:n})}catch(t){o.setData({mailboxes:[]}),$$.ui.showAlert({title:"Error",content:t.responseText})}}a()}}),$$.service.registerService("app.mails",{deps:["breizbot.http"],init:function(t,e){return{getMailAccounts:function(){return e.get("/getMailAccounts")},getMailAccount:function(t){return e.post("/getMailAccount",{name:t})},removeMailAccount:function(t){return e.post("/removeMailAccount",{name:t})},createMailAccount:function(t){return e.post("/createMailAccount",t)},updateMailAccount:function(t){return e.post("/updateMailAccount",t)},getMailboxes:function(t,n=!1){return e.post("/getMailboxes",{name:t,addUnseenNb:n})},addMailbox:function(t,n){return e.post("/addMailbox",{name:t,mailboxName:n})},openMailbox:function(t,n,o){return e.post("/openMailbox",{name:t,mailboxName:n,idx:o})},openMessage:function(t,n,o,a){return e.post("/openMessage",{name:t,mailboxName:n,seqNo:o,partID:a})},openAttachment:function(t,n,o,a){return e.post("/openAttachment",{name:t,mailboxName:n,seqNo:o,partID:a})},deleteMessage:function(t,n,o){return e.post("/deleteMessage",{name:t,mailboxName:n,seqNos:o})},moveMessage:function(t,n,o,a){return e.post("/moveMessage",{name:t,mailboxName:n,targetName:o,seqNos:a})},sendMail:function(t,n){return e.post("/sendMail",{accountName:t,data:n})}}},$iface:"\n\t\tgetMailAccount():Promise;\n\t\tcreateMaiAccount(data):Promise;\n\t\tgetMailboxes(name):Promise;\n\t\topenMailbox(name, mailboxName, pageNo):Promise;\n\t\topenMessage(name, mailboxName, seqNo, partID):Promise;\n\t\topenAttachment(name, mailboxName, seqNo, partID):Promise;\n\t\tdeleteMessage(name, mailboxName, seqNos):Promise;\n\t\tmoveMessage(name, mailboxName, targetName, seqNos):Promise\n\t\t"}),$$.control.registerControl("accountPage",{template:'<div class="main">\n\t<form bn-event="submit: onSubmit" bn-bind="form" bn-form="data">\n\n\t\t<label>Account Name</label>\n\t\t<input type="text" name="name" required="" autofocus="" bn-prop="{disabled: isEdit}">\n\n\t\t<label>Email</label>\n\t\t<input type="email" name="email" required="">\n\n\t\t<fieldset>\n\t\t\t<legend>SMTP</legend>\n\t\t\t<div class="grid">\n\t\t\t\t<label>Host</label>\n\t\t\t\t<input type="text" name="smtpHost" required="">\n\t\n\t\t\t\t<label>User</label>\n\t\t\t\t<input type="text" name="smtpUser" required="">\n\t\t\n\t\t\t\t<label>Password</label>\n\t\t\t\t<input type="text" name="smtpPwd" required="">\t\n\t\t\t</div>\n\t\t</fieldset>\n\n\t\t<fieldset>\n\t\t\t<legend>IMAP</legend>\n\t\t\t<div class="grid">\n\t\t\t\t<label>Host</label>\n\t\t\t\t<input type="text" name="imapHost" required="">\n\t\n\t\t\t\t<label>User</label>\n\t\t\t\t<input type="text" name="user" required="">\n\t\t\n\t\t\t\t<label>Password</label>\n\t\t\t\t<input type="text" name="pwd" required="">\n\t\n\t\t\t</div>\n\t\t</fieldset>\n\n\n\n\n\t\t<label>Make a copy of sent mail in Sent folder</label>\n\t\t<div bn-control="brainjs.flipswitch" name="makeCopy"></div>\n\n\t\t<input type="submit" hidden="" bn-bind="submit">\n\t</form>\n\n</div>',deps:["app.mails","breizbot.pager"],props:{data:null},init:function(t,e,n){const{data:o}=this.props,a=$$.viewController(t,{data:{data:o,isEdit:null!=o},events:{onSubmit:async function(t){t.preventDefault();const a=$(this).getFormData();console.log("formData",a),null==o?await e.createMailAccount(a):await e.updateMailAccount(a),n.popPage()}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fa fa-check",onClick:function(){a.scope.submit.click()}}}}}}),$$.control.registerControl("boxesPage",{template:'<div bn-show="showForm">\n\t<form bn-event="submit: onSubmit">\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Name:</label>\n\t\t\t<input type="text" name="name" required="" autofocus="">\t\t\t\n\t\t</div>\n\t\t<input type="submit" hidden="" bn-bind="submit">\n\t</form>\n\n\t<p>Select target folder:</p>\n</div>\n\n<div class="scrollPanelTree">\n\t<div \n\t\tclass="tree" \n\t\tbn-control="brainjs.tree"\n\t\tbn-data="{source: mailboxes}"\n\t\tbn-iface="tree"\n\t></div>\n</div>\n\n\n',deps:["app.mails","breizbot.pager"],props:{currentAccount:"",showForm:!1},init:function(t,e,n){const{currentAccount:o,showForm:a}=this.props,s=$$.viewController(t,{data:{mailboxes:[],showForm:a},events:{onSubmit:function(t){t.preventDefault();const{name:e}=$(this).getFormData(),{tree:o}=s.scope,a=o.getActiveNode();if(null==a)return void $$.ui.showAlert({title:"Warning",content:"Please select a target mailbox"});let i=o.getNodePath(a)+"/"+e;const c=i.split("/");c.shift(),i=c.join("/"),console.log("targetName",i),n.popPage(i)}}});!async function(){console.log("loadMailboxes");const t=await e.getMailboxes(o);console.log("mailboxes",t),a?s.setData({mailboxes:[{title:"Folders",folder:!0,children:t,expanded:!0}]}):s.setData({mailboxes:t})}(),this.getButtons=function(){return{apply:{title:"Apply",icon:"fa fa-check",onClick:function(){if(a)return void s.scope.submit.click();const{tree:t}=s.scope,e=t.getActiveNode();if(null==e)return void $$.ui.showAlert({title:"Select Target Mailbox",content:"Please select a target mailbox"});const o=t.getNodePath(e);console.log("targetName",o),n.popPage(o)}}}}}}),$$.control.registerControl("mailboxPage",{template:'<div class="toolbar">\n\t<div bn-visible="loading" class="loading">\n\t\t<i class="fa fa-spinner fa-pulse"></i>\n\t\tloading ...\n\t</div>\n\t<div class="nbMsg"><strong bn-text="nbMsg"></strong>&nbsp;Messages</div>\t\t\n</div>\n\n<div class="scrollPanelTable">\n\t<table class="w3-table-all w3-hoverable w3-small">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th><input type="checkbox" bn-event="click: onMainCheckBoxClick" bn-val="check" bn-update="click"></th>\n\t\t\t\t<th bn-show="!isSentBox">From</th>\n\t\t\t\t<th bn-show="isSentBox">To</th>\n\t\t\t\t<th>Subject</th>\n\t\t\t\t<th title="nb Attachments"><i class="fa fa-paperclip"></i></th>\n\t\t\t\t<th>Date</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody bn-each="messages"\n\t\t\tbn-event="click.item: onItemClick, click.check: onCheckClick, click.from: onFromClick" \n\t\t\tbn-bind="messages" bn-lazzy="getMessages">\n\t\t\t<tr bn-class="{unseen: !isSeen}">\n\t\t\t\t<td><input type="checkbox" class="check" bn-val="$scope.$i.checked"></td>\n\t\t\t\t<td bn-text="$scope.$i.from.name" bn-attr="{title: $scope.$i.from.email}" bn-show="!isSentBox" class="from"></td>\n\t\t\t\t<td bn-text="text2" bn-attr="attr1" bn-show="isSentBox" class="from"></td>\n\t\t\t\t<td bn-text="$scope.$i.subject" class="item" ></td>\n\t\t\t\t<td bn-text="$scope.$i.nbAttachments"></td>\n\t\t\t\t<td bn-text="getDate"></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n\n\n',deps:["app.mails","breizbot.pager"],props:{currentAccount:"",mailboxName:""},init:function(t,e,n){const{currentAccount:o,mailboxName:a}=this.props,s=$$.viewController(t,{data:{messages:[],getMessages:async function(t){return c(t+1)},nbMsg:0,check:!1,loading:!1,mailboxName:a,text2:function(t){return t.$i.to[0]&&t.$i.to[0].name},attr1:function(t){return{title:t.$i.to[0]&&t.$i.to[0].email}},getDate:function(t){const e=t.$i.date;return new Date(e).toLocaleDateString("fr-FR")},isSeen:function(t){return t.$i.flags.includes("\\Seen")},isSentBox:function(){return"Sent"==this.mailboxName}},events:{onFromClick:function(){$(this).closest("tr").find(".check").click()},onCheckClick:function(){s.setData({check:!1}),i()},onItemClick:function(t){const e=$(this).closest("tr").index(),i=s.model.messages[e];n.pushPage("messagePage",{title:i.subject,props:{currentAccount:o,mailboxName:a,item:i},onBack:function(){console.log("onBack"),i.flags=["\\Seen"],s.updateArrayItem("messages",e,i)}})},onMainCheckBoxClick:function(e){t.find(".check").prop("checked",$(this).prop("checked")),i()}}});function i(){const e=0!=t.find(".check:checked").length;n.setButtonEnabled({move:e,delete:e,reload:!0,newMail:!0})}async function c(t){if(console.log("load",t),1!=t&&s.model.messages.length==s.model.nbMsg)return console.log("No more data"),null;s.setData({loading:!0}),n.setButtonEnabled(!1);const c=await e.openMailbox(o,a,t);console.log("data",c);let{messages:l,nbMsg:r}=c;if(l.forEach(t=>{t.checked=s.model.check}),1!=t)return s.model.messages=s.model.messages.concat(l),s.setData({loading:!1}),i(),console.log("nbLoadedMessages",s.model.messages.length),l;s.enableNode("messages",!0),s.setData({loading:!1,nbMsg:r,messages:l}),s.enableNode("messages",!1),i()}function l(){const e=t.find(".check:checked"),n=[];return e.each(function(){const t=$(this).closest("tr").index();n.push({seqno:s.model.messages[t].seqno,idx:t})}),n}function r(t){s.removeArrayItem("messages",t.map(t=>t.idx),"messages"),s.model.nbMsg-=t.length,s.update();const{nbMsg:e,messages:n}=s.model;console.log("nbMsg",e,"length",n.length),0==e&&s.setData({check:!1}),0==n.length&&e>0&&c(1)}async function d(){const t=l();0!=t.length?(await e.deleteMessage(o,a,t.map(t=>t.seqno)),console.log("Messages deleted"),r(t)):$$.ui.showAlert({title:"Delete Message",content:"Please select one or severall messages !"})}function u(){const t=l();0!=t.length?n.pushPage("boxesPage",{title:"Select target mailbox",props:{currentAccount:o},onReturn:async function(n){n!=a?(await e.moveMessage(o,a,n,t.map(t=>t.seqno)),r(t)):$$.ui.showAlert({title:"Select Target Mailbox",content:"Target mailbox must be different from current mailbox"})}}):$$.ui.showAlert({title:"Move Message",content:"Please select one or severall messages !"})}function m(){n.pushPage("writeMailPage",{title:"New Message",props:{accountName:o},onReturn:function(){"Sent"==a&&c()}})}c(1),this.getButtons=function(){return{reload:{icon:"fa fa-sync-alt",title:"Update",enabled:!1,onClick:function(){s.enableNode("messages",!0),c(1)}},newMail:{icon:"fa fa-envelope",title:"New Message",enabled:!1,onClick:m},move:{icon:"fa fa-file-export",title:"Move selected messages",enabled:!1,onClick:u},delete:{icon:"fa fa-trash",title:"Delete selected messages",enabled:!1,onClick:d}}}}}),$$.control.registerControl("messagePage",{template:'<div bn-show="loading" class="loading">\n\t<i class="fa fa-spinner fa-pulse"></i>\n\tloading ...\n</div>\n<div class="header w3-blue" bn-show="!loading">\n\t<div><strong>From:&nbsp;</strong><a href="#" bn-text="item.from.name" bn-event="click: onAddContact" bn-data="{addr: item.from}"></a></div>\n\t<div bn-show="show1" class="to">\n\t\t<strong bn-event="click: onToggleDiv"><i class="fa fa-caret-down fa-fw"></i>\n\t\tTo</strong>\n\t\t<div class="scrollPanel">\n\t\t\t<ul bn-each="item.to" bn-event="click.contact: onAddContact">\n\t\t\t\t<li>\n\t\t\t\t\t<a href="#" bn-text="$scope.$i.name" class="contact"></a>\t\t\t\t\n\t\t\t\t</li>\n\t\t\t</ul>\t\n\t\t</div>\n\t</div>\n\t<div class="attachments" bn-show="show2">\n\t\t<strong bn-event="click: onToggleDiv"><i class="fa fa-caret-down fa-fw"></i>\n\t\tAttachments</strong>\n\t\t<div class="scrollPanel">\n\t\t\t<ul  bn-each="attachments" bn-event="click.item: openAttachment">\n\t\t\t\t<li>\n\t\t\t\t\t<a href="#" bn-text="$scope.$i.name" class="item"></a>\n\t\t\t\t\t<span bn-text="getSize"></span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\n\t\t</div>\n\t</div>\n\t\n</div>\n\n<div class="mainHtml" bn-show="show4">\n\t<div bn-show="show3" class="embeddedImages w3-pale-yellow">\n\t\t<a href="#" bn-event="click: onEmbeddedImages">Download embedded images</a>\n\t</div>\n\t<iframe bn-attr="{srcdoc:text}" bn-bind="iframe" bn-event="load: onFrameLoaded"></iframe>\n</div>\n\n<div class="mainText" bn-show="show5">\n \t<pre bn-text="text"></pre>\n</div>',deps:["app.mails","breizbot.scheduler","breizbot.pager","breizbot.files"],props:{currentAccount:"",mailboxName:"",item:null},init:function(t,e,n,o,a){const{currentAccount:s,mailboxName:i,item:c}=this.props,l=$$.ui.waitDialog("Loading ..."),r=$$.viewController(t,{data:{embeddedImages:[],isHtml:!1,loading:!0,text:"",item:c,attachments:[],show1:function(){return this.item.to.length>0},show2:function(){return this.attachments.length>0},show3:function(){return this.embeddedImages.length>0},show4:function(){return!this.loading&&this.isHtml},show5:function(){return!this.loading&&!this.isHtml},getSize:function(t){let e=t.$i.size,n="Ko";return(e/=1024)>1024&&(e/=1024,n="Mo"),` (${e.toFixed(1)} ${n})`}},events:{openAttachment:async function(t){t.preventDefault();const n=$(this).closest("li").index(),d=r.model.attachments[n],{partID:u,type:m,subtype:p}=d;if(console.log("openAttachments",d),d.canOpen){l.show();const t=await e.openAttachment(s,i,c.seqno,u);l.hide();const n=$$.util.buildDataURL(m,p,t.data);o.pushPage("breizbot.viewer",{title:d.name,props:{type:$$.util.getFileType(d.name),url:n},buttons:{save:{title:"Save",icon:"fa fa-save",onClick:async function(){const t=$$.util.dataURLtoBlob(n);await a.saveFile(t,d.name)}}}})}else $$.ui.showConfirm({title:"Open Attachment",okText:"Yes",cancelText:"No",content:"This attachment cannot be open with NetOS<br>\n\t\t\t\t\t\t\t\tDo you want to download it ?"},async function(){console.log("OK"),l.show();const t=await e.openAttachment(s,i,c.seqno,u);l.hide();const n=$$.util.buildDataURL(m,p,t.data);$$.util.downloadUrl(n,d.name)})},onToggleDiv:function(t){const e=$(this).find("i"),n=$(this).siblings(".scrollPanel");e.hasClass("fa-caret-right")?(e.removeClass("fa-caret-right").addClass("fa-caret-down"),n.slideDown()):(e.removeClass("fa-caret-down").addClass("fa-caret-right"),n.slideUp())},onEmbeddedImages:function(t){t.preventDefault();const n=$(r.scope.iframe.get(0).contentWindow.document),{embeddedImages:o}=r.model;r.setData({embeddedImages:[]}),o.forEach(async t=>{const{type:o,subtype:a,partID:l,cid:r}=t,d=await e.openAttachment(s,i,c.seqno,l),u=$$.util.buildDataURL(o,a,d.data);n.find(`img[src="cid:${r}"]`).attr("src",u)})},onFrameLoaded:function(t){$(this.contentWindow.document).find("a").attr("target","_blank").on("click",function(t){const e=$(this).attr("href");e.startsWith("https://youtu.be/")&&(t.preventDefault(),n.openApp("youtube",{url:e}))})},onAddContact:function(t){console.log("onAddContact"),t.preventDefault();const{item:e}=r.model,n=$(this).closest("li").index();let a=n<0?e.from:e.to[n];console.log("from",a),o.pushPage("breizbot.addContactPage",{title:"Add Contact",props:{info:a},onReturn:function(t){this.addContact(t.data)}})}}});let d=c.partID.html,u=!0;function m(t,e){o.pushPage("writeMailPage",{title:"Reply message",props:{accountName:s,data:{to:e,subject:"Re: "+c.subject,html:`<pre>${t}</pre>`}}})}function p(t){o.pushPage("writeMailPage",{title:"Forward message",props:{accountName:s,data:{subject:"Fwd: "+c.subject,html:`<pre>${t}</pre>`}}})}async function b(t){if(console.log("reply"),"reply"==t||"replyAll"==t){const n="\n\n----- Original mail -----\n";let o=c.from.email;if("replyAll"==t&&c.to.length>0&&(o+=","+c.to.map(t=>t.email).join(",")),r.model.isHtml&&0!=c.partID.text){m(n+e.openMessage(s,i,c.seqno,c.partID.text).text,o)}else r.model.isHtml?m("",o):m(n+r.model.text,o)}}0==d&&(d=c.partID.text,u=!1),console.log("isHtml",u),async function(){const t=await e.openMessage(s,i,c.seqno,d);console.log("message",t);const{text:n,attachments:o,embeddedImages:a}=t;o.forEach(t=>{t.canOpen=function(t){const{encoding:e,name:n,subtype:o}=t;return"BASE64"==e.toUpperCase()&&(null!=$$.util.getFileType(n)||"pdf"==o&&(t.name+=".pdf",!0))}(t)}),r.setData({text:n,attachments:o,embeddedImages:a,loading:!1,isHtml:u})}(),this.getButtons=function(){return{reply:{icon:"fa fa-reply",title:"Reply",onClick:function(){b("reply")}},replyAll:{icon:"fa fa-reply-all",title:"Reply All",onClick:function(){b("replyAll")}},forward:{icon:"fa fa-share-square",title:"Forward",onClick:async function(){const t="\n\n----- Forwarded mail -----\n";if(r.model.isHtml&&0!=c.partID.text){p(t+(await e.openMessage(s,i,c.seqno,c.partID.text)).text)}else r.model.isHtml?p(""):p(t+r.model.text)}}}}}}),$$.control.registerControl("writeMailPage",{template:'<form bn-event="submit: onSend" bn-form="data">\n\t<div class="header" bn-event="keypress: onKeyPress">\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<div class="openContactPanel">\n\t\t\t\t<a bn-event="click: openContact" href="#" class="w3-text-indigo">To:</a>\n\t\t\t</div>\n\t\t\t<input type="email" multiple="true" name="to" bn-prop="prop1" required="" bn-bind="to">\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Subject:</label>\n\t\t\t<input type="text" name="subject" required="">\t\t\n\t\t</div>\t\n\n\t\t<div bn-show="show1" class="attachments">\n\t\t\t<label><i class="fa fa-paperclip"></i></label>\t\t\t\n\t\t\t<ul bn-each="attachments" bn-event="click.delete: onRemoveAttachment">\n\t\t\t\t<li>\n\t\t\t\t\t<span bn-text="$scope.$i.fileName"></span>\n\t\t\t\t\t<i class="fa fa-times delete"></i>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<div bn-control="breizbot.htmleditor" class="content" name="html" bn-iface="content"></div>\n\x3c!-- \t<textarea name="text" bn-bind="content"></textarea>\t\n --\x3e\t<input type="submit" hidden="" bn-bind="submit">\n</form>\n',deps:["app.mails","breizbot.pager"],props:{accountName:"",data:{}},init:function(t,e,n){const{accountName:o,data:a}=this.props;console.log("data",a);const s=$$.viewController(t,{data:{data:a,attachments:[],show1:function(){return this.attachments.length>0},prop1:function(){return{autofocus:null==this.data.html}}},events:{onKeyPress:function(t){"13"==t.which&&t.preventDefault()},onSend:async function(t){console.log("onSend"),t.preventDefault();const a=$(this).getFormData();console.log("data",a);const{attachments:i}=s.model;a.attachments=i.map(t=>({path:t.rootDir+t.fileName}));const c=$("<div>").append(a.html);c.find("img").each(function(){const t=$(this).attr("src").split("?")[1],{fileName:e}=$$.util.parseUrlParams(t),n="IMG"+Date.now();a.attachments.push({path:e,cid:n}),$(this).attr("src","cid:"+n)}),a.html=c.html();try{await e.sendMail(o,a),n.popPage()}catch(t){$$.ui.showAlert({title:"Error",content:t.responseText})}},openContact:function(){console.log("openContact"),n.pushPage("breizbot.contacts",{title:"Select a contact",props:{showSelection:!0},buttons:{ok:{title:"Apply",icon:"fa fa-check",onClick:function(){n.popPage(this.getSelection())}}},onReturn:function(t){const e=t.map(t=>t.email);console.log("contacts",e);const n=s.scope.to.val();console.log("to",n),""!=n&&e.unshift(n),s.setData({data:{to:e.join(",")}})}})},onRemoveAttachment:function(t){const e=$(this).closest("li").index();console.log("onRemoveAttachment",e),s.model.attachments.splice(e,1),s.update()}}});null!=a.html&&s.scope.content.focus(),this.getButtons=function(){return{attachment:{icon:"fa fa-paperclip",title:"Add attachment",onClick:function(){n.pushPage("breizbot.files",{title:"Select a file to attach",props:{showThumbnail:!0},events:{fileclick:function(t,e){n.popPage(e)}},onReturn:function(t){const{fileName:e,rootDir:n}=t;s.model.attachments.push({fileName:e,rootDir:n}),s.update()}})}},send:{icon:"fa fa-paper-plane",title:"Send Message",onClick:function(){s.scope.submit.click()}}}}}});