$$.control.registerControl("accountPage",{template:'<div class="main">\n\t<form bn-event="submit: onSubmit" bn-bind="form">\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Provider</label>\n\t\t\t<select bn-control="brainjs.selectmenu" bn-event="selectmenuchange: onProviderChange" bn-val="provider"\n\t\t\tbn-data="{items: providers}">\n\t\t\t</select>\t\t\n\t\t</div>\t\t\t\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Account Name</label>\n\t\t\t<input type="text" name="name" required="" autofocus="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>User</label>\n\t\t\t<input type="text" name="user" required="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Password</label>\n\t\t\t<input type="password" name="pwd" required="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Email</label>\n\t\t\t<input type="email" name="email" required="">\t\t\t\n\t\t</div>\n\n\t\n\n\t\t<div bn-control="brainjs.inputgroup" bn-show="provider == \'Other\'">\n\t\t\t<label>IMAP Server</label>\n\t\t\t<input type="text" name="imapHost" required="">\t\t\t\n\t\t</div>\t\t\n\n\t\t<div bn-control="brainjs.inputgroup"  bn-show="provider == \'Other\'">\n\t\t\t<label>SMTP Server</label>\n\t\t\t<input type="text" name="smtpHost" required="">\t\t\t\n\t\t</div>\t\t\n\n\t\t<input type="submit" hidden="" bn-bind="submit">\n\t</form>\n\n</div>',deps:["breizbot.mails"],props:{$pager:null},buttons:[{name:"create",icon:"fa fa-check"}],init:function(t,e){const{$pager:n}=this.props,o={Gmail:{imapHost:"imap.gmail.com",smtpHost:"smtp.gmail.com"},Outlook:{imapHost:"imap.outlook.com",smtpHost:"smtp.outlook.com"},Free:{imapHost:"imap.free.fr",smtpHost:"smtp.free.fr"},SFR:{imapHost:"imap.sfr.fr",smtpHost:"smtp.sfr.fr"},Orange:{imapHost:"imap.orange.fr",smtpHost:"smtp.orange.fr"},"Bouygues Telecom":{imapHost:"imap.bbox.fr",smtpHost:"smtp.bbox.fr"},Other:{imapHost:"",smtpHost:""}},a=$$.viewController(t,{data:{provider:"Gmail",providers:Object.keys(o)},events:{onSubmit:function(t){t.preventDefault();const o=$(this).getFormData();console.log("data",o),e.createMailAccount(o).then(()=>{n.popPage("update")})},onProviderChange:function(){const t=$(this).val();console.log("onProviderChange",t),a.setData({provider:t}),a.scope.form.setFormData(o[t])}}});this.onAction=function(t){a.scope.submit.click()}}}),$$.control.registerControl("addContactPage",{template:'<form bn-event="submit: onSubmit" bn-form="from">\n\t<div bn-control="brainjs.inputgroup">\n\t\t<label>Name:</label><br>\n\t\t<input type="text" name="name" style="min-width: 300px" required="">\t\n\t</div>\n\t<br>\n\n\t<div bn-control="brainjs.inputgroup">\n\t\t<label>Email:</label><br>\n\t\t<input type="email" name="email" style="min-width: 300px" required="">\t\n\t</div>\t\n\n\t<input type="submit" bn-bind="submit" hidden="">\n</form>\n',deps:["breizbot.users"],props:{$pager:null,from:{}},buttons:[{name:"add",icon:"fa fa-user-plus"}],init:function(t,e){const{$pager:n,from:o}=this.props,a=$$.viewController(t,{data:{from:o},events:{onSubmit:function(t){t.preventDefault();const o=$(this).getFormData();console.log("data",o),e.addContact(o.name,o.email).then(()=>{console.log("contact added !"),n.popPage("addContact")}).catch(t=>{$$.ui.showAlert({title:"Error",content:t.responseText})})}}});this.onAction=function(t){console.log("onAction",t),a.scope.submit.click()}}}),$$.control.registerControl("boxesPage",{template:'<div class="scrollPanelTree">\n\t<div \n\t\tclass="tree" \n\t\tbn-control="brainjs.tree"\n\t\tbn-data="{source: mailboxes}"\n\t\tbn-iface="tree"\n\t></div>\n</div>\n\n\n',deps:["breizbot.mails"],props:{$pager:null,currentAccount:"",mailboxName:"",seqNos:[]},buttons:[{name:"apply",icon:"fa fa-check"}],init:function(t,e){const{$pager:n,currentAccount:o,mailboxName:a,seqNos:i}=this.props,s=$$.viewController(t,{data:{mailboxes:[]},events:{}});console.log("loadMailboxes"),e.getMailboxes(o).then(t=>{console.log("mailboxes",t),s.setData({mailboxes:t})}),this.onAction=function(t){if(console.log("onAction",t),"apply"==t){const{tree:t}=s.scope,l=t.getActiveNode();if(null==l)return void $$.ui.showAlert({title:"Select Target Mailbox",content:"Please select a target mailbox"});const c=t.getNodePath(l);if(c==a)return void $$.ui.showAlert({title:"Select Target Mailbox",content:"Please select a target mailbox different from current mailbox"});e.moveMessage(o,a,c,i).then(()=>{n.popPage()})}}}}),$$.control.registerControl("contactsPage",{template:'<div class="scrollPanel">\n\t<div bn-control="breizbot.contacts" data-show-selection="true" bn-iface="contacts"></div>\n\t\n</div>\n\n\n',props:{$pager:null},buttons:[{name:"ok",icon:"fa fa-check"}],init:function(t){const{$pager:e}=this.props,n=$$.viewController(t);this.onAction=function(t){console.log("onAction",t),"ok"==t&&e.popPage(n.scope.contacts.getSelection())}}}),$$.control.registerControl("imagePage",{template:'<div style="height: 100%; position: relative; text-align: center;">\n\t<span bn-show="wait" class="w3-text-blue" style="position: relative; top: 50%;"><i class="fa fa-redo-alt fa-2x fa-pulse"></i></span>\n\n\t<div bn-show="!wait" bn-control="brainjs.image" bn-data="{src: url}" style="height: 100%" bn-iface="image"></div>\t\n</div>\n',deps:["breizbot.mails","breizbot.files"],props:{$pager:null,info:"",currentAccount:"",mailboxName:"",seqno:""},buttons:[{name:"save",icon:"fa fa-save"},{name:"fit",icon:"fa fa-expand"}],init:function(t,e,n){const{$pager:o,info:a,currentAccount:i,mailboxName:s,seqno:l}=this.props,{partID:c,type:r,subtype:d}=a,p=$$.viewController(t,{data:{url:"",wait:!0},events:{}});e.openAttachment(i,s,l,c).then(t=>{const e=`data:${r}/${d};base64,`+t.data;p.setData({url:e,wait:!1})}),this.onAction=function(t){"save"==t&&function(){const{url:t}=p.model;if(""==t)return void $$.ui.showAlert({title:"Error",content:"Image not loaded, please wait"});const e=$$.util.dataURLtoBlob(t);n.uploadFile(e,a.name,"/images/email").then(function(t){console.log("resp",t),o.popPage()}).catch(function(t){$$.ui.showAlert({title:"Error",content:t.responseText})})}(),"fit"==t&&p.scope.image.fitImage()}}}),$$.control.registerControl("mailboxPage",{template:'<div class="toolbar">\n\t<div>\n\t\t<div bn-show="!loading && nbMsg > 0">\n\t\t\t<span >Page: <span bn-text="`${pageNo} / ${nbPage}`"></span></span>\n\t\t\t<button class="w3-button" title="previous page" bn-event="click: onPrevPage">\n\t\t\t\t<i class="fa fa-angle-left"></i>\n\t\t\t</button>\t\t\t\n\t\t\t<button class="w3-button" title="next page" bn-event="click: onNextPage">\n\t\t\t\t<i class="fa fa-angle-right"></i>\n\t\t\t</button>\t\t\t\n\t\t</div>\n\t\t<div bn-show="loading" class="loading">\n\t\t\t<i class="fa fa-spinner fa-pulse"></i>\n\t\t\tloading ...\n\t\t</div>\n\t</div>\n\t<div class="nbMsg"><strong bn-text="nbMsg"></strong>&nbsp;Messages</div>\t\t\n</div>\n\n<div class="scrollPanelTable">\n\t<table class="w3-table-all w3-hoverable w3-small">\n\t\t<thead>\n\t\t\t<tr class="w3-green">\n\t\t\t\t<th><input type="checkbox" bn-event="click: onMainCheckBoxClick" bn-val="check" bn-update="click"></th>\n\t\t\t\t<th>From</th>\n\t\t\t\t<th>Subject</th>\n\t\t\t\t<th title="nb Attachments"><i class="fa fa-paperclip"></i></th>\n\t\t\t\t<th>Date</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody bn-each="messages" bn-event="click.item: onItemClick">\n\t\t\t<tr bn-data="{item: $i}" bn-class="{unseen: !isSeen($i.flags)}">\n\t\t\t\t<th><input type="checkbox" class="check" ></th>\n\t\t\t\t<td bn-text="$i.from.name" bn-attr="{title: $i.from.email}"></td>\n\t\t\t\t<td bn-text="$i.subject" class="item" ></td>\n\t\t\t\t<td bn-text="$i.nbAttachments"></td>\n\t\t\t\t<td bn-text="getDate($i.date)"></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n\n\n',deps:["breizbot.mails"],props:{$pager:null,currentAccount:"",mailboxName:""},buttons:[{name:"reload",icon:"fa fa-redo"},{name:"newMail",icon:"fa fa-envelope"},{name:"move",icon:"fa fa-file-export"},{name:"delete",icon:"fa fa-trash"}],init:function(t,e){const{$pager:n,currentAccount:o,mailboxName:a}=this.props,i=$$.viewController(t,{data:{messages:[],nbMsg:0,pageNo:0,nbPage:0,check:!1,loading:!1,getDate:function(t){return new Date(t).toLocaleDateString("fr-FR")},isSeen:function(t){return t.includes("\\Seen")}},events:{onItemClick:function(t){const e=$(this).closest("tr").data("item");n.pushPage("messagePage",{title:`Message #${i.model.nbMsg-e.seqno+1}`,props:{currentAccount:o,mailboxName:a,item:e}})},onMainCheckBoxClick:function(e){t.find(".check").prop("checked",$(this).prop("checked"))},onPrevPage:function(t){const{nbPage:e,pageNo:n}=i.model;n>1&&s(n-1)},onNextPage:function(t){const{nbPage:e,pageNo:n}=i.model;n<e&&s(n+1)}}});function s(t){null==t&&(t=i.model.pageNo),i.setData({loading:!0}),e.openMailbox(o,a,t).then(e=>{console.log("data",e);const{messages:n,nbMsg:o}=e;i.setData({loading:!1,check:!1,pageNo:t,nbPage:Math.ceil(o/20),nbMsg:o,messages:n.reverse()})})}s(1),this.onAction=function(i){console.log("onAction",i),"reload"==i&&s(1),"delete"==i&&function(){const n=t.find(".check:checked");if(console.log("deleteMessage",n.length),0==n.length)return void $$.ui.showAlert({title:"Delete Message",content:"Please select one or severall messages !"});const i=[];n.each(function(){const t=$(this).closest("tr").data("item");i.push(t.seqno)}),console.log("seqNos",i),e.deleteMessage(o,a,i).then(()=>{console.log("Messages deleted"),s()})}(),"move"==i&&function(){const e=t.find(".check:checked");if(console.log("deleteMessage",e.length),0==e.length)return void $$.ui.showAlert({title:"Move Message",content:"Please select one or severall messages !"});const i=[];e.each(function(){const t=$(this).closest("tr").data("item");i.push(t.seqno)}),console.log("seqNos",i),n.pushPage("boxesPage",{title:"Select target mailbox",props:{currentAccount:o,mailboxName:a,seqNos:i}})}(),"newMail"==i&&n.pushPage("writeMailPage",{title:"New Message",props:{accountName:o}})},this.onReturn=function(t){console.log("onReturn",t),s()}}}),$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n\t<div class="info">\n\t\t<p bn-show="accounts.length == 0">You have no email account</p>\n\t\t<p bn-show="accounts.length > 0">Account: \n\t\t\t<select \n\t\t\t\tbn-control="brainjs.selectmenu" \n\t\t\t\tbn-data="{items: accounts}" \n\t\t\t\tbn-val="currentAccount"\n\t\t\t\tbn-event="selectmenuchange: onAccountChange">\n\t\t\t</select>\n\t\t</p>\n\t\t\n\t</div>\n\t<div>\n\t\t<button \n\t\t\tclass="w3-btn w3-blue" \n\t\t\ttitle="Create account"\n\t\t\tbn-event="click: onCreateAccount"\n\t\t>\n\t\t\t<i class="fa fa-plus"></i>\n\t\t</button>\n\n\t\t<button \n\t\t\tclass="w3-btn w3-blue" \n\t\t\ttitle="New email"\n\t\t\tbn-event="click: onNewEmail"\n\t\t\tbn-show="accounts.length > 0"\n\t\t>\n\t\t\t<i class="fa fa-envelope"></i>\n\t\t</button>\n\t\t\n\t</div>\n\t\n</div>\n\n<div class="scrollPanelTree">\n\t<div \n\t\tclass="tree" \n\t\tbn-control="brainjs.tree"\n\t\tbn-data="{source: mailboxes}"\n\t\tbn-event="treeactivate: onTreeActivate"\n\t\tbn-iface="tree"\n\t></div>\n</div>\n\n\n',deps:["breizbot.mails"],props:{$pager:null},init:function(t,e){const{$pager:n}=this.props,o=$$.viewController(t,{data:{accounts:[],currentAccount:"",mailboxes:[]},events:{onCreateAccount:function(){console.log("onCreateAccount"),n.pushPage("accountPage",{title:"Create Mail Account"})},onAccountChange:function(){console.log("onAccountChange",$(this).val()),o.setData({currentAccount:$(this).val()}),i()},onTreeActivate:function(){console.log("onTreeActivate");const t=$(this).iface(),e=t.getActiveNode(),a=t.getNodePath(e);console.log("mailboxName",a);const{currentAccount:i}=o.model;n.pushPage("mailboxPage",{title:e.title,props:{currentAccount:i,mailboxName:a}})},onNewEmail:function(t){console.log("onNewEmail"),n.pushPage("writeMailPage",{title:"New Message",props:{accountName:o.model.currentAccount}})}}});function a(){console.log("loadAccount"),e.getMailAccount().then(t=>{if(console.log("accounts",t),0==t.length)return;const e=t[0];console.log("currentAccount",e),o.setData({accounts:t,currentAccount:e}),i()})}function i(){console.log("loadMailboxes");const{currentAccount:t}=o.model;e.getMailboxes(t).then(t=>{console.log("mailboxes",t),o.setData({mailboxes:t})})}a(),this.onReturn=function(t){if(console.log("onReturn",t),"update"==t&&a(),null==t){const t=o.scope.tree.getActiveNode();null!=t&&t.setActive(!1)}}}}),$$.control.registerControl("messagePage",{template:'<div bn-show="loading" class="loading">\n\t<i class="fa fa-spinner fa-pulse"></i>\n\tloading ...\n</div>\n<div class="header w3-blue" bn-show="!loading">\n\t<div class="from"><strong>From:</strong><a href="#" bn-text="item.from.name" bn-event="click: onAddContact" bn-data="{addr: item.from}"></a></div>\n\t<div class="subject"><strong>Subject:</strong><span bn-text="item.subject" ></span></div>\n\t<div bn-show="item.to.length > 0" class="to">\n\t\t<strong bn-event="click: onToggleDiv"><i class="fa fa-caret-down fa-fw"></i>\n\t\tTo</strong>\n\t\t<ul bn-each="item.to">\n\t\t\t<li>\n\t\t\t\t<a href="#" bn-text="$i.name" bn-data="{addr: $i}" bn-event="click: onAddContact"></a>\t\t\t\t\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class="attachments" bn-show="attachments.length > 0">\n\t\t<strong bn-event="click: onToggleDiv"><i class="fa fa-caret-down fa-fw"></i>\n\t\tAttachments</strong>\n\t\t<ul  bn-each="attachments" bn-event="click.item: onItemClick">\n\t\t\t<li bn-show="canOpen($i)">\n\t\t\t\t<a href="#" bn-text="$i.name" class="item" bn-data="{item: $i}"></a>\n\t\t\t\t<span bn-text="getSize($i.size)"></span></li>\n\t\t\t<li bn-show="!canOpen($i)">\n\t\t\t\t<span bn-text="$i.name"></span>\n\t\t\t\t<span bn-text="getSize($i.size)"></span></li>\t\t\t\t\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t\n</div>\n\n<div class="mainHtml" bn-show="!loading && isHtml">\n\t<div bn-show="embeddedImages.length > 0" class="embeddedImages w3-pale-yellow">\n\t\t<a href="#" bn-event="click: onEmbeddedImages">Download embedded images</a>\n\t</div>\n\t<iframe bn-attr="{srcdoc:text}" bn-bind="iframe" bn-event="load: onFrameLoaded"></iframe>\n</div>\n\n<div class="mainText" bn-show="!loading && !isHtml">\n \t<pre bn-text="text"></pre>\n</div>',deps:["breizbot.mails","breizbot.users"],props:{$pager:null,currentAccount:"",mailboxName:"",item:null},buttons:[{name:"reply",icon:"fa fa-reply"},{name:"replyAll",icon:"fa fa-reply-all"}],init:function(t,e,n){const{$pager:o,currentAccount:a,mailboxName:i,item:s}=this.props,l=$$.viewController(t,{data:{embeddedImages:[],isHtml:!1,loading:!0,text:"",item:s,attachments:[],canOpen:function(t){return("image"==t.type||"pdf"==t.subtype||t.name.endsWith(".pdf"))&&"BASE64"==t.encoding.toUpperCase()},getSize:function(t){let e="Ko";return(t/=1024)>1024&&(t/=1024,e="Mo"),` (${t.toFixed(1)} ${e})`}},events:{onItemClick:function(t){t.preventDefault();const e=$(this).data("item");console.log("onItemClick",e);const n={info:e,currentAccount:a,mailboxName:i,seqno:s.seqno};"image"==e.type&&o.pushPage("imagePage",{title:e.name,props:n}),("pdf"==e.subtype||e.name.endsWith(".pdf"))&&o.pushPage("pdfPage",{title:e.name,props:n})},onToggleDiv:function(t){console.log("onAttachClick");const e=$(this).find("i"),n=$(this).siblings("ul");e.hasClass("fa-caret-right")?(e.removeClass("fa-caret-right").addClass("fa-caret-down"),n.slideDown()):(e.removeClass("fa-caret-down").addClass("fa-caret-right"),n.slideUp())},onEmbeddedImages:function(t){t.preventDefault();const n=$(l.scope.iframe.get(0).contentWindow.document),{embeddedImages:o}=l.model;l.setData({embeddedImages:[]}),o.forEach(t=>{const{type:o,subtype:l,partID:c,cid:r}=t;e.openAttachment(a,i,s.seqno,c).then(t=>{const e=`data:${o}/${l};base64,`+t.data;n.find(`img[src="cid:${r}"]`).attr("src",e)})})},onFrameLoaded:function(t){console.log("onFrameLoaded"),$(this.contentWindow.document).find("a").attr("target","_blank")},onAddContact:function(t){console.log("onAddContact"),t.preventDefault();const e=$(this).data("addr");o.pushPage("addContactPage",{title:"Add Contact",props:{from:e}})}}});let c=s.partID.html,r=!0;function d(t,e){o.pushPage("writeMailPage",{title:"Reply message",props:{accountName:a,data:{to:e,subject:"Re: "+s.subject,text:t}}})}0==c&&(c=s.partID.text,r=!1),console.log("isHtml",r),e.openMessage(a,i,s.seqno,c).then(t=>{console.log("message",t);const{text:e,attachments:n,embeddedImages:o}=t;l.setData({text:e,attachments:n,embeddedImages:o,loading:!1,isHtml:r})}),this.onAction=function(t){console.log("onAction",t,s);const n="\n\n----- Original mail -----\n";if("reply"==t||"replyAll"==t){let o=s.from.email;"replyAll"==t&&s.to.length>0&&(o+=","+s.to.map(t=>t.email).join(",")),l.model.isHtml&&0!=s.partID.text?e.openMessage(a,i,s.seqno,s.partID.text).then(t=>{d(n+t.text,o)}):l.model.isHtml?d("",o):d(n+l.model.text,o)}}}}),$$.control.registerControl("pdfPage",{template:'<div style="height: 100%; position: relative; text-align: center;">\n\t<span bn-show="wait" class="w3-text-blue" style="position: relative; top: 50%;"><i class="fa fa-redo-alt fa-2x fa-pulse"></i></span>\n\n\t<div bn-show="!wait" bn-control="breizbot.pdf" bn-data="{url}" style="height: 100%"></div>\n</div>\n\n\n',deps:["breizbot.mails","breizbot.files"],props:{$pager:null,info:"",currentAccount:"",mailboxName:"",seqno:""},buttons:[{name:"save",icon:"fa fa-save"}],init:function(t,e,n){const{$pager:o,info:a,currentAccount:i,mailboxName:s,seqno:l}=this.props,{partID:c,type:r,subtype:d}=a,p=$$.viewController(t,{data:{url:"",wait:!0},events:{}});e.openAttachment(i,s,l,c).then(t=>{const e=`data:${r}/${d};base64,`+t.data;p.setData({wait:!1,url:e})}),this.onAction=function(t){console.log("onAction",t),"save"==t&&function(){const{url:t}=p.model;if(""==t)return void $$.ui.showAlert({title:"Error",content:"File not loaded, please wait"});const e=$$.util.dataURLtoBlob(t);n.uploadFile(e,a.name,"/documents/email").then(function(t){console.log("resp",t),o.popPage()}).catch(function(t){$$.ui.showAlert({title:"Error",content:t.responseText})})}()}}}),$$.control.registerControl("writeMailPage",{template:'<form bn-event="submit: onSend" bn-form="data">\n\t<div class="header">\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<div class="openContactPanel">\n\t\t\t\t<button class="w3-button w3-blue" type="button" bn-event="click: openContact">To:</button>\n\t\t\t</div>\n\t\t\t<input type="email" multiple="true" name="to" bn-prop="{autofocus: data.text == undefined}" required="" bn-bind="to">\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Subject:</label>\n\t\t\t<input type="text" name="subject" required="">\t\t\n\t\t</div>\t\n\n\t\t<div bn-show="attachments.length > 0" class="attachments">\n\t\t\t<label><i class="fa fa-paperclip"></i></label>\t\t\t\n\t\t\t<ul bn-each="attachments" bn-event="click.delete: onRemoveAttachment">\n\t\t\t\t<li>\n\t\t\t\t\t<span bn-text="$i.fileName"></span>\n\t\t\t\t\t<i class="fa fa-times delete"></i>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<textarea name="text" bn-bind="content"></textarea>\t\n\t<input type="submit" hidden="" bn-bind="submit">\n</form>\n',deps:["breizbot.mails"],props:{$pager:null,accountName:"",data:{}},buttons:[{name:"attachment",icon:"fa fa-paperclip"},{name:"send",icon:"fa fa-paper-plane"}],init:function(t,e){const{$pager:n,accountName:o,data:a}=this.props,i=$$.viewController(t,{data:{data:a,attachments:[]},events:{onSend:function(t){console.log("onSend"),t.preventDefault();const a=$(this).getFormData(),{attachments:s}=i.model;s.length>0&&(a.attachments=s.map(t=>t.rootDir+t.fileName)),e.sendMail(o,a).then(()=>{n.popPage()}).catch(t=>{$$.ui.showAlert({title:"Error",content:t.responseText})})},openContact:function(){console.log("openContact"),n.pushPage("contactsPage",{title:"Select a contact"})},onRemoveAttachment:function(t){const e=$(this).closest("li").index();console.log("onRemoveAttachment",e),i.model.attachments.splice(e,1),i.update()}}});if(null!=a.text){const t=i.scope.content.get(0);t.focus(),t.setSelectionRange(0,0)}this.onAction=function(t){console.log("onAction",t),"send"==t&&i.scope.submit.click(),"attachment"==t&&n.pushPage("breizbot.files",{title:"Select a file to attach",props:{cmd:"attachFile",showThumbnail:!0}})},this.onReturn=function(t){if(console.log("onReturn",t),null!=t)if("attachFile"==t.cmd){const{fileName:e,rootDir:n}=t;i.model.attachments.push({fileName:e,rootDir:n}),i.update()}else{const e=t.map(t=>t.contactEmail);console.log("contacts",e);const n=i.scope.to.val();console.log("to",n),""!=n&&e.unshift(n),i.setData({data:{to:e.join(",")}})}}}});