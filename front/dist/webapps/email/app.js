$$.control.registerControl("accountPage",{template:'<div class="main">\n\t<form bn-event="submit: onSubmit">\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Account Name</label>\n\t\t\t<input type="text" name="name" required="" autofocus="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>User</label>\n\t\t\t<input type="text" name="user" required="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Password</label>\n\t\t\t<input type="password" name="pwd" required="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Imap Server</label>\n\t\t\t<input type="text" name="imapHost" required="">\t\t\t\n\t\t</div>\t\t\n\n\t\t<input type="submit" hidden="" bn-bind="submit">\n\t</form>\n\n</div>',deps:["breizbot.mails"],props:{$pager:null},init:function(t,n){const{$pager:e}=this.props,o=$$.viewController(t,{data:{},events:{onSubmit:function(t){t.preventDefault();const o=$(this).getFormData();n.createMailAccount(o).then(()=>{e.popPage("update")})}}});this.onAction=function(t){o.scope.submit.click()}}}),$$.control.registerControl("imagePage",{template:'<div style="height: 100%; position: relative; text-align: center;">\n\t<span bn-show="wait" class="w3-text-blue" style="position: relative; top: 50%;"><i class="fa fa-redo-alt fa-2x fa-pulse"></i></span>\n\n\t<div bn-show="!wait" bn-control="brainjs.image" bn-data="{src: url}" style="height: 100%" bn-iface="image"></div>\t\n</div>\n',deps:["breizbot.mails","breizbot.files"],props:{$pager:null,info:"",currentAccount:"",mailboxName:"",seqno:"",fileName:""},init:function(t,n,e){const{$pager:o,info:a,currentAccount:i,mailboxName:s,seqno:c,fileName:l}=this.props,{partID:r,type:u,subtype:b}=a,p=$$.viewController(t,{data:{url:"",wait:!0},events:{}});n.openAttachment(i,s,c,r).then(t=>{const n=`data:${u}/${b};base64,`+t.data;p.setData({url:n,wait:!1})}),this.onAction=function(t){"save"==t&&function(){const{url:t}=p.model;if(""==t)return void $$.ui.showAlert({title:"Error",content:"Image not loaded, please wait"});const n=$$.util.dataURLtoBlob(t);e.uploadFile(n,l,"/images/email").then(function(t){console.log("resp",t),o.popPage()}).catch(function(t){$$.ui.showAlert({title:"Error",content:t.responseText})})}(),"fit"==t&&p.scope.image.fitImage()}}}),$$.control.registerControl("mailboxPage",{template:'<div class="toolbar">\n\t<div>\n\t\t<div bn-show="nbMsg > 0">\n\t\t\t<span >Page: <span bn-text="`${pageNo} / ${nbPage}`"></span></span>\n\t\t\t<button class="w3-button" title="previous page" bn-event="click: onPrevPage">\n\t\t\t\t<i class="fa fa-angle-left"></i>\n\t\t\t</button>\t\t\t\n\t\t\t<button class="w3-button" title="next page" bn-event="click: onNextPage">\n\t\t\t\t<i class="fa fa-angle-right"></i>\n\t\t\t</button>\t\t\t\n\t\t</div>\n\t</div>\n\t<div class="nbMsg"><strong bn-text="nbMsg"></strong>&nbsp;Messages</div>\t\t\n</div>\n\n<div class="scrollPanelTable">\n\t<table class="w3-table-all w3-hoverable w3-small">\n\t\t<thead>\n\t\t\t<tr class="w3-green">\n\t\t\t\t<th><input type="checkbox" bn-event="click: onMainCheckBoxClick"></th>\n\t\t\t\t<th>From</th>\n\t\t\t\t<th>Subject</th>\n\t\t\t\t<th title="nb Attachments"><i class="fa fa-paperclip"></i></th>\n\t\t\t\t<th>Date</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody bn-each="messages" bn-event="click.item: onItemClick">\n\t\t\t<tr bn-data="{item: $i}" bn-class="{unseen: !isSeen($i.flags)}">\n\t\t\t\t<th><input type="checkbox" class="check" ></th>\n\t\t\t\t<td bn-text="$i.from.name" bn-attr="{title: $i.from.email}"></td>\n\t\t\t\t<td bn-text="$i.subject" class="item" ></td>\n\t\t\t\t<td bn-text="$i.nbAttachments"></td>\n\t\t\t\t<td bn-text="getDate($i.date)"></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n\n\n',deps:["breizbot.mails"],props:{$pager:null,currentAccount:"",mailboxName:""},init:function(t,n){const{$pager:e,currentAccount:o,mailboxName:a}=this.props,i=$$.viewController(t,{data:{messages:[],nbMsg:0,pageNo:0,nbPage:0,getDate:function(t){return new Date(t).toLocaleDateString("fr-FR")},isSeen:function(t){return t.includes("\\Seen")}},events:{onItemClick:function(t){const n=$(this).closest("tr").data("item");e.pushPage("messagePage",{title:`Message #${n.seqno}`,props:{currentAccount:o,mailboxName:a,item:n}})},onMainCheckBoxClick:function(n){t.find(".check").prop("checked",$(this).prop("checked"))},onPrevPage:function(t){const{nbPage:n,pageNo:e}=i.model;e>1&&s(e-1)},onNextPage:function(t){const{nbPage:n,pageNo:e}=i.model;e<n&&s(e+1)}}});function s(t){null==t&&(t=i.model.pageNo),n.openMailbox(o,a,t).then(n=>{console.log("data",n);const{messages:e,nbMsg:o}=n;i.setData({pageNo:t,nbPage:Math.ceil(o/20),nbMsg:o,messages:e.reverse()})})}s(1),this.onAction=function(e){console.log("onAction",e),"delete"==e&&function(){const e=t.find(".check:checked");console.log("deleteMessage",e.length);const i=[];e.each(function(){const t=$(this).closest("tr").data("item");i.push(t.seqno)}),console.log("seqNos",i),n.deleteMessage(o,a,i).then(()=>{console.log("Messages deleted"),s()})}()},this.onReturn=function(){console.log("onReturn"),s()}}}),$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n\t<div class="info">\n\t\t<p bn-show="accounts.length == 0">You have no email account</p>\n\t\t<p bn-show="accounts.length > 0">Main Account: \n\t\t\t<select bn-control="brainjs.selectmenu" bn-each="accounts" bn-val="currentAccount"\n\t\t\t\tbn-event="selectmenuchange: onAccountChange">\n\t\t\t\t<option bn-text="$i"></option>\n\t\t\t</select>\n\t\t</p>\n\t\t\n\t</div>\n\t<div>\n\t\t<button \n\t\t\tclass="w3-btn w3-blue" \n\t\t\ttitle="Create account"\n\t\t\tbn-event="click: onCreateAccount"\n\t\t><i class="fa fa-plus"></i></button>\n\t\t\n\t</div>\n\t\n</div>\n\n<div class="scrollPanelTree">\n\t<div \n\t\tclass="tree" \n\t\tbn-control="brainjs.tree"\n\t\tbn-data="{source: mailboxes}"\n\t\tbn-event="treeactivate: onTreeActivate"\n\t\tbn-iface="tree"\n\t></div>\n</div>\n\n\n',deps:["breizbot.mails"],props:{$pager:null},init:function(t,n){const{$pager:e}=this.props,o=$$.viewController(t,{data:{accounts:[],currentAccount:"",mailboxes:[]},events:{onCreateAccount:function(){console.log("onCreateAccount"),e.pushPage("accountPage",{title:"Create Mail Account",buttons:[{name:"create",label:"Create"}]})},onAccountChange:function(){console.log("onAccountChange",$(this).val())},onTreeActivate:function(){console.log("onTreeActivate");const t=$(this).iface(),n=t.getActiveNode(),a=t.getNodePath(n);console.log("mailboxName",a);const{currentAccount:i}=o.model;e.pushPage("mailboxPage",{title:n.title,props:{currentAccount:i,mailboxName:a},buttons:[{name:"delete",icon:"fa fa-trash"}]})}}});function a(){console.log("loadAccount"),n.getMailAccount().then(t=>{if(console.log("accounts",t),0==t.length)return;const e=t[0];console.log("currentAccount",e),o.setData({accounts:t,currentAccount:e}),function(){console.log("loadMailboxes");const{currentAccount:t}=o.model;n.getMailboxes(t).then(t=>{console.log("mailboxes",t),o.setData({mailboxes:t})})}()})}a(),this.onReturn=function(t){if(console.log("onReturn",t),"update"==t&&a(),null==t){const t=o.scope.tree.getActiveNode();null!=t&&t.setActive(!1)}}}}),$$.control.registerControl("messagePage",{template:'<div class="header w3-blue">\n\t<div><strong>From: </strong><span bn-text="item.from.name"></span></div>\n\t<div><strong>Subject: </strong><span bn-text="item.subject"></span></div>\n\t<div class="attachments" bn-show="attachments.length > 0">\n\t\t<strong bn-event="click: onAttachClick"><i class="fa fa-caret-down"></i>\n\t\tAttachments</strong>\n\t\t<ul  bn-each="attachments" bn-event="click.item: onItemClick">\n\t\t\t<li bn-show="canOpen($i)">\n\t\t\t\t<a href="#" bn-text="$i.name" class="item" bn-data="{item: $i}"></a>\n\t\t\t\t<span bn-text="getSize($i.size)"></span></li>\n\t\t\t<li bn-show="!canOpen($i)">\n\t\t\t\t<span bn-text="$i.name"></span>\n\t\t\t\t<span bn-text="getSize($i.size)"></span></li>\t\t\t\t\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t\n</div>\n<div class="main">\n\x3c!-- \t<iframe bn-attr="{srcdoc:text}"></iframe>\n --\x3e\n \t<pre bn-text="text"></pre>\n</div>',deps:["breizbot.mails"],props:{$pager:null,currentAccount:"",mailboxName:"",item:null},init:function(t,n){const{$pager:e,currentAccount:o,mailboxName:a,partID:i,item:s}=this.props,c=$$.viewController(t,{data:{text:"",item:s,attachments:[],canOpen:function(t){return"image"==t.type&&"BASE64"==t.encoding.toUpperCase()},getSize:function(t){let n="Ko";return(t/=1024)>1024&&(t/=1024,n="Mo"),` (${t.toFixed(1)} ${n})`}},events:{onItemClick:function(t){t.preventDefault();const n=$(this).data("item");console.log("onItemClick",n),e.pushPage("imagePage",{title:n.name,props:{fileName:n.name,info:n,currentAccount:o,mailboxName:a,seqno:s.seqno},buttons:[{name:"save",icon:"fa fa-save"},{name:"fit",icon:"fa fa-expand"}]})},onAttachClick:function(t){console.log("onAttachClick");const n=$(this).find("i"),e=$(this).siblings("ul");n.hasClass("fa-caret-right")?(n.removeClass("fa-caret-right").addClass("fa-caret-down"),e.slideDown()):(n.removeClass("fa-caret-down").addClass("fa-caret-right"),e.slideUp())}}});n.openMessage(o,a,s.seqno,s.partID).then(t=>{console.log("message",t),c.setData(t)})}});