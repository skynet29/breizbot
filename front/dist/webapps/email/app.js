$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n\t<div class="info">\n\t\t<span bn-show="show1">You have no email account</span>\n\t\t<div bn-show="show2" class="account">\n\t\t\t<span>Account:&nbsp;</span> \n\t\t\t<div \n\t\t\t\tbn-control="brainjs.selectmenu" \n\t\t\t\tbn-data="{items: accounts}" \n\t\t\t\tbn-val="currentAccount"\n\t\t\t\tbn-event="selectmenuchange: onAccountChange">\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t</div>\n\t<div>\n\t\t<div bn-control="brainjs.contextmenu" \n\t\t\tbn-data="{items: getItems}" \n\t\t\tdata-trigger="left" \n\t\t\tclass="w3-button w3-blue" \n\t\t\tbn-event="contextmenuchange: onMenu"\n\t\t\t>\n\t\t\t\t<i class="fa fa-ellipsis-v"></i>\n    \t\n\t\t</div>\t\t\n\t\t\n\t</div>\n\t\n</div>\n\n<div>\n\tSelect folder to open:\n</div>\n\n<div class="scrollPanelTree">\n\t<div \n\t\tclass="tree" \n\t\tbn-control="brainjs.tree"\n\t\tbn-data="{source: mailboxes}"\n\t\tbn-event="treeactivate: onTreeActivate"\n\t\tbn-iface="tree"\n\t></div>\n</div>\n\n\n',deps:["app.mails","breizbot.pager"],init:function(t,e,n){const o=$$.viewController(t,{data:{accounts:[],currentAccount:"",mailboxes:[],show1:function(){return 0==this.accounts.length},show2:function(){return this.accounts.length>0},getItems:function(){return 0==this.accounts.length?{add:{name:"Add Account",icon:"fas fa-plus"}}:{add:{name:"Add Account",icon:"fas fa-plus"},edit:{name:"Edit Selected Account",icon:"fas fa-edit"},sep2:"------",newFolder:{name:"New Folder",icon:"fas fa-folder-plus"},sep:"------",new:{name:"New Message",icon:"fas fa-envelope"}}}},events:{onMenu:function(t,s){console.log("onMenu",s),"add"==s.cmd&&n.pushPage("accountPage",{title:"Add Mail Account",onReturn:a}),"new"==s.cmd&&n.pushPage("writeMailPage",{title:"New Message",props:{accountName:o.model.currentAccount}}),"edit"==s.cmd&&e.getMailAccount(o.model.currentAccount).then(t=>{n.pushPage("accountPage",{title:"Edit Mail Account",props:{data:t}})}),"newFolder"==s.cmd&&n.pushPage("boxesPage",{title:"Add new folder",props:{currentAccount:o.model.currentAccount,showForm:!0},onReturn:function(t){console.log("onReturn",t),e.addMailbox(o.model.currentAccount,t).then(()=>{i()})}})},onAccountChange:function(){console.log("onAccountChange",$(this).getValue()),o.setData({currentAccount:$(this).getValue()}),i()},onTreeActivate:function(){console.log("onTreeActivate");const t=$(this).iface(),e=t.getActiveNode(),a=t.getNodePath(e);console.log("mailboxName",a);const{currentAccount:i}=o.model;n.pushPage("mailboxPage",{title:e.title,props:{currentAccount:i,mailboxName:a},onBack:function(){const t=o.scope.tree.getActiveNode();null!=t&&t.setActive(!1)}})}}});function a(){console.log("loadAccount"),e.getMailAccounts().then(t=>{if(console.log("accounts",t),0==t.length)return;const e=t[0];console.log("currentAccount",e),o.setData({accounts:t,currentAccount:e}),i()})}function i(){console.log("loadMailboxes");const{currentAccount:t}=o.model;e.getMailboxes(t).then(t=>{console.log("mailboxes",t),o.setData({mailboxes:t})})}a()}}),$$.service.registerService("app.mails",{deps:["breizbot.http"],init:function(t,e){return{getMailAccounts:function(){return e.get("/getMailAccounts")},getMailAccount:function(t){return e.post("/getMailAccount",{name:t})},createMailAccount:function(t){return e.post("/createMailAccount",t)},updateMailAccount:function(t){return e.post("/updateMailAccount",t)},getMailboxes:function(t){return e.post("/getMailboxes",{name:t})},addMailbox:function(t,n){return e.post("/addMailbox",{name:t,mailboxName:n})},openMailbox:function(t,n,o){return e.post("/openMailbox",{name:t,mailboxName:n,pageNo:o})},openMessage:function(t,n,o,a){return e.post("/openMessage",{name:t,mailboxName:n,seqNo:o,partID:a})},openAttachment:function(t,n,o,a){return e.post("/openAttachment",{name:t,mailboxName:n,seqNo:o,partID:a})},deleteMessage:function(t,n,o){return e.post("/deleteMessage",{name:t,mailboxName:n,seqNos:o})},moveMessage:function(t,n,o,a){return e.post("/moveMessage",{name:t,mailboxName:n,targetName:o,seqNos:a})},sendMail:function(t,n){return e.post("/sendMail",{accountName:t,data:n})}}},$iface:"\n\t\tgetMailAccount():Promise;\n\t\tcreateMaiAccount(data):Promise;\n\t\tgetMailboxes(name):Promise;\n\t\topenMailbox(name, mailboxName, pageNo):Promise;\n\t\topenMessage(name, mailboxName, seqNo, partID):Promise;\n\t\topenAttachment(name, mailboxName, seqNo, partID):Promise;\n\t\tdeleteMessage(name, mailboxName, seqNos):Promise;\n\t\tmoveMessage(name, mailboxName, targetName, seqNos):Promise\n\t\t"}),$$.control.registerControl("accountPage",{template:'<div class="main">\n\t<form bn-event="submit: onSubmit" bn-bind="form" bn-form="data">\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Provider</label>\n\t\t\t<span bn-control="brainjs.selectmenu" \n\t\t\t\tbn-event="selectmenuchange: onProviderChange" bn-val="provider"\n\t\t\t\tbn-data="{items: providers}"\n\t\t\t\tbn-prop="{disabled: isEdit}"\n\t\t\t>\n\t\t\t</span>\t\t\n\t\t</div>\t\t\t\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Account Name</label>\n\t\t\t<input type="text" name="name" required="" autofocus="" bn-prop="{disabled: isEdit}">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>User</label>\n\t\t\t<input type="text" name="user" required="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Password</label>\n\t\t\t<input type="password" name="pwd" required="">\t\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Email</label>\n\t\t\t<input type="email" name="email" required="">\t\t\t\n\t\t</div>\n\n\t\n\n\t\t<div bn-control="brainjs.inputgroup" bn-show="show1">\n\t\t\t<label>IMAP Server</label>\n\t\t\t<input type="text" name="imapHost" required="">\t\t\t\n\t\t</div>\t\t\n\n\t\t<div bn-control="brainjs.inputgroup"  bn-show="show1">\n\t\t\t<label>SMTP Server</label>\n\t\t\t<input type="text" name="smtpHost" required="">\t\t\t\n\t\t</div>\t\t\n\n\t\t<div class="copySent">\n\t\t\t<label>Make a copy of sent mail in Sent folder</label>\n\t\t\t<div bn-control="brainjs.flipswitch" bn-data="data1" name="makeCopy"></div>\n\t\t</div>\n\n\t\t<input type="submit" hidden="" bn-bind="submit">\n\t</form>\n\n</div>',deps:["app.mails","breizbot.pager"],props:{data:null},buttons:[{name:"create",icon:"fa fa-check"}],init:function(t,e,n){const{data:o}=this.props,a={Gmail:{imapHost:"imap.gmail.com",smtpHost:"smtp.gmail.com"},Outlook:{imapHost:"imap.outlook.com",smtpHost:"smtp.outlook.com"},Free:{imapHost:"imap.free.fr",smtpHost:"smtp.free.fr"},SFR:{imapHost:"imap.sfr.fr",smtpHost:"smtp.sfr.fr"},Orange:{imapHost:"imap.orange.fr",smtpHost:"smtp.orange.fr"},"Bouygues Telecom":{imapHost:"imap.bbox.fr",smtpHost:"smtp.bbox.fr"},Other:{imapHost:"",smtpHost:""}};const i=$$.viewController(t,{data:{provider:null!=o?function(t){for(let e in a)if(a[e].imapHost==t.imapHost)return e;return"Other"}(o):"Gmail",providers:Object.keys(a),data:o,isEdit:null!=o,show1:function(){return"Other"==this.provider},data1:function(){return{height:25,width:100,texts:{left:"YES",right:"NO"}}}},events:{onSubmit:function(t){t.preventDefault();const a=$(this).getFormData();console.log("formData",a),null==o?e.createMailAccount(a).then(()=>{n.popPage()}):e.updateMailAccount(a).then(()=>{n.popPage()})},onProviderChange:function(){const t=$(this).getValue();console.log("onProviderChange",t),i.setData({provider:t}),i.scope.form.setFormData(a[t])}}});i.scope.form.setFormData(a[i.model.provider]),this.onAction=function(t){i.scope.submit.click()}}}),$$.control.registerControl("addContactPage",{template:'<form bn-event="submit: onSubmit" bn-form="from">\n\t<div bn-control="brainjs.inputgroup">\n\t\t<label>Name:</label><br>\n\t\t<input type="text" name="name" style="min-width: 300px" required="">\t\n\t</div>\n\t<br>\n\n\t<div bn-control="brainjs.inputgroup">\n\t\t<label>Email:</label><br>\n\t\t<input type="email" name="email" style="min-width: 300px" required="">\t\n\t</div>\t\n\n\t<input type="submit" bn-bind="submit" hidden="">\n</form>\n',deps:["breizbot.users","breizbot.pager"],props:{from:{}},buttons:[{name:"add",icon:"fa fa-user-plus"}],init:function(t,e,n){const{from:o}=this.props,a=$$.viewController(t,{data:{from:o},events:{onSubmit:function(t){t.preventDefault();const o=$(this).getFormData();console.log("data",o),e.addContact(o.name,o.email).then(()=>{console.log("contact added !"),n.popPage("addContact")}).catch(t=>{$$.ui.showAlert({title:"Error",content:t.responseText})})}}});this.onAction=function(t){console.log("onAction",t),a.scope.submit.click()}}}),$$.control.registerControl("boxesPage",{template:'<div bn-show="showForm">\n\t<form bn-event="submit: onSubmit">\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Name:</label>\n\t\t\t<input type="text" name="name" required="" autofocus="">\t\t\t\n\t\t</div>\n\t\t<input type="submit" hidden="" bn-bind="submit">\n\t</form>\n\n\t<p>Select target folder:</p>\n</div>\n\n<div class="scrollPanelTree">\n\t<div \n\t\tclass="tree" \n\t\tbn-control="brainjs.tree"\n\t\tbn-data="{source: mailboxes}"\n\t\tbn-iface="tree"\n\t></div>\n</div>\n\n\n',deps:["app.mails","breizbot.pager"],props:{currentAccount:"",showForm:!1},buttons:[{name:"apply",icon:"fa fa-check"}],init:function(t,e,n){const{currentAccount:o,showForm:a}=this.props,i=$$.viewController(t,{data:{mailboxes:[],showForm:a},events:{onSubmit:function(t){t.preventDefault();const{name:e}=$(this).getFormData(),{tree:o}=i.scope,a=o.getActiveNode();if(null==a)return void $$.ui.showAlert({title:"Warning",content:"Please select a target mailbox"});let s=o.getNodePath(a)+"/"+e;const c=s.split("/");c.shift(),s=c.join("/"),n.popPage(s)}}});console.log("loadMailboxes"),e.getMailboxes(o).then(t=>{console.log("mailboxes",t),a?i.setData({mailboxes:[{title:"Folders",folder:!0,children:t,expanded:!0}]}):i.setData({mailboxes:t})}),this.onAction=function(t){if(console.log("onAction",t),"apply"==t){if(a)return void i.scope.submit.click();const{tree:t}=i.scope,e=t.getActiveNode();if(null==e)return void $$.ui.showAlert({title:"Select Target Mailbox",content:"Please select a target mailbox"});const o=t.getNodePath(e);n.popPage(o)}}}}),$$.control.registerControl("contactsPage",{template:'<div class="scrollPanel">\n\t<div bn-control="breizbot.contacts" data-show-selection="true" bn-iface="contacts"></div>\n\t\n</div>\n\n\n',deps:["breizbot.pager"],buttons:[{name:"ok",icon:"fa fa-check"}],init:function(t,e){const n=$$.viewController(t);this.onAction=function(t){console.log("onAction",t),"ok"==t&&e.popPage(n.scope.contacts.getSelection())}}}),$$.control.registerControl("mailboxPage",{template:'<div class="toolbar">\n\t<div>\n\t\t<div bn-show="show1">\n\t\t\t<span >Page: <span bn-text="text1"></span></span>\n\t\t\t<button class="w3-button" title="previous page" bn-event="click: onPrevPage">\n\t\t\t\t<i class="fa fa-angle-left"></i>\n\t\t\t</button>\t\t\t\n\t\t\t<button class="w3-button" title="next page" bn-event="click: onNextPage">\n\t\t\t\t<i class="fa fa-angle-right"></i>\n\t\t\t</button>\t\t\t\n\t\t</div>\n\t\t<div bn-show="loading" class="loading">\n\t\t\t<i class="fa fa-spinner fa-pulse"></i>\n\t\t\tloading ...\n\t\t</div>\n\t</div>\n\t<div class="nbMsg"><strong bn-text="nbMsg"></strong>&nbsp;Messages</div>\t\t\n</div>\n\n<div class="scrollPanelTable">\n\t<table class="w3-table-all w3-hoverable w3-small">\n\t\t<thead>\n\t\t\t<tr class="w3-green">\n\t\t\t\t<th><input type="checkbox" bn-event="click: onMainCheckBoxClick" bn-val="check" bn-update="click"></th>\n\t\t\t\t<th bn-show="!isSentBox">From</th>\n\t\t\t\t<th bn-show="isSentBox">To</th>\n\t\t\t\t<th>Subject</th>\n\t\t\t\t<th title="nb Attachments"><i class="fa fa-paperclip"></i></th>\n\t\t\t\t<th>Date</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody bn-each="messages" bn-event="click.item: onItemClick">\n\t\t\t<tr bn-data="{item: $i}" bn-class="{unseen: !isSeen}">\n\t\t\t\t<th><input type="checkbox" class="check" ></th>\n\t\t\t\t<td bn-text="$i.from.name" bn-attr="{title: $i.from.email}" bn-show="!isSentBox"></td>\n\t\t\t\t<td bn-text="text2" bn-attr="attr1" bn-show="isSentBox"></td>\n\t\t\t\t<td bn-text="$i.subject" class="item" ></td>\n\t\t\t\t<td bn-text="$i.nbAttachments"></td>\n\t\t\t\t<td bn-text="getDate"></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n\n\n',deps:["app.mails","breizbot.pager"],props:{currentAccount:"",mailboxName:""},buttons:[{name:"reload",icon:"fa fa-sync-alt"},{name:"newMail",icon:"fa fa-envelope"},{name:"move",icon:"fa fa-file-export"},{name:"delete",icon:"fa fa-trash"}],init:function(t,e,n){const{currentAccount:o,mailboxName:a}=this.props,i=$$.viewController(t,{data:{messages:[],nbMsg:0,pageNo:0,nbPage:0,check:!1,loading:!1,mailboxName:a,show1:function(){return!this.loading&&this.nbMsg>0},text1:function(){return`${this.pageNo} / ${this.nbPage}`},text2:function(){return this.$i.to[0]&&this.$i.to[0].name},attr1:function(){return{title:this.$i.to[0]&&this.$i.to[0].email}},getDate:function(){const t=this.$i.date;return new Date(t).toLocaleDateString("fr-FR")},isSeen:function(){return this.$i.flags.includes("\\Seen")},isSentBox:function(){return"Sent"==this.mailboxName}},events:{onItemClick:function(t){const e=$(this).closest("tr").data("item");n.pushPage("messagePage",{title:`Message #${i.model.nbMsg-e.seqno+1}`,props:{currentAccount:o,mailboxName:a,item:e},onBack:s})},onMainCheckBoxClick:function(e){t.find(".check").prop("checked",$(this).prop("checked"))},onPrevPage:function(t){const{nbPage:e,pageNo:n}=i.model;n>1&&s(n-1)},onNextPage:function(t){const{nbPage:e,pageNo:n}=i.model;n<e&&s(n+1)}}});function s(t){null==t&&(t=i.model.pageNo),i.setData({loading:!0}),e.openMailbox(o,a,t).then(e=>{console.log("data",e);const{messages:n,nbMsg:o}=e;i.setData({loading:!1,check:!1,pageNo:t,nbPage:Math.ceil(o/20),nbMsg:o,messages:n.reverse()})})}s(1),this.onAction=function(i){console.log("onAction",i),"reload"==i&&s(1),"delete"==i&&function(){const n=t.find(".check:checked");if(console.log("deleteMessage",n.length),0==n.length)return void $$.ui.showAlert({title:"Delete Message",content:"Please select one or severall messages !"});const i=[];n.each(function(){const t=$(this).closest("tr").data("item");i.push(t.seqno)}),console.log("seqNos",i),e.deleteMessage(o,a,i).then(()=>{console.log("Messages deleted"),s()})}(),"move"==i&&function(){const i=t.find(".check:checked");if(console.log("deleteMessage",i.length),0==i.length)return void $$.ui.showAlert({title:"Move Message",content:"Please select one or severall messages !"});const c=[];i.each(function(){const t=$(this).closest("tr").data("item");c.push(t.seqno)}),console.log("seqNos",c),n.pushPage("boxesPage",{title:"Select target mailbox",props:{currentAccount:o},onReturn:function(t){t!=a?e.moveMessage(o,a,t,c).then(()=>{s()}):$$.ui.showAlert({title:"Select Target Mailbox",content:"Target mailbox must be different from current mailbox"})}})}(),"newMail"==i&&n.pushPage("writeMailPage",{title:"New Message",props:{accountName:o},onReturn:function(){"Sent"==a&&s()}})}}}),$$.control.registerControl("messagePage",{template:'<div bn-show="loading" class="loading">\n\t<i class="fa fa-spinner fa-pulse"></i>\n\tloading ...\n</div>\n<div class="header w3-blue" bn-show="!loading">\n\t<div class="from"><strong>From:</strong><a href="#" bn-text="item.from.name" bn-event="click: onAddContact" bn-data="{addr: item.from}"></a></div>\n\t<div class="subject"><strong>Subject:</strong><span bn-text="item.subject" ></span></div>\n\t<div bn-show="show1" class="to">\n\t\t<strong bn-event="click: onToggleDiv"><i class="fa fa-caret-down fa-fw"></i>\n\t\tTo</strong>\n\t\t<ul bn-each="item.to">\n\t\t\t<li>\n\t\t\t\t<a href="#" bn-text="$i.name" bn-data="{addr: $i}" bn-event="click: onAddContact"></a>\t\t\t\t\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class="attachments" bn-show="show2">\n\t\t<strong bn-event="click: onToggleDiv"><i class="fa fa-caret-down fa-fw"></i>\n\t\tAttachments</strong>\n\t\t<ul  bn-each="attachments" bn-event="click.item: openAttachment">\n\t\t\t<li>\n\t\t\t\t<a href="#" bn-text="$i.name" class="item" bn-data="{item: $i}"></a>\n\t\t\t\t<span bn-text="getSize"></span>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t\n</div>\n\n<div class="mainHtml" bn-show="show4">\n\t<div bn-show="show3" class="embeddedImages w3-pale-yellow">\n\t\t<a href="#" bn-event="click: onEmbeddedImages">Download embedded images</a>\n\t</div>\n\t<iframe bn-attr="{srcdoc:text}" bn-bind="iframe" bn-event="load: onFrameLoaded"></iframe>\n</div>\n\n<div class="mainText" bn-show="show5">\n \t<pre bn-text="text"></pre>\n</div>',deps:["app.mails","breizbot.users","breizbot.scheduler","breizbot.pager"],props:{currentAccount:"",mailboxName:"",item:null},buttons:[{name:"reply",icon:"fa fa-reply"},{name:"replyAll",icon:"fa fa-reply-all"}],init:function(t,e,n,o,a){const{currentAccount:i,mailboxName:s,item:c}=this.props,l=$$.dialogController({title:"Loading ...",template:'<div class="w3-center w3-padding-16"><i class="fa fa-redo-alt fa-2x fa-pulse w3-text-blue"></i></div>',width:100,canClose:!1}),r=$$.viewController(t,{data:{embeddedImages:[],isHtml:!1,loading:!0,text:"",item:c,attachments:[],show1:function(){return this.item.to.length>0},show2:function(){return this.attachments.length>0},show3:function(){return this.embeddedImages.length>0},show4:function(){return!this.loading&&this.isHtml},show5:function(){return!this.loading&&!this.isHtml},getSize:function(){let t=this.$i.size,e="Ko";return(t/=1024)>1024&&(t/=1024,e="Mo"),` (${t.toFixed(1)} ${e})`}},events:{openAttachment:function(t){t.preventDefault();const n=$(this).closest("li").index(),o=r.model.attachments[n];if(console.log("openAttachments",o),o.canOpen){const t={info:o,currentAccount:i,mailboxName:s,seqno:c.seqno};a.pushPage("viewerPage",{title:o.name,props:t})}else $$.ui.showConfirm({title:"Open Attachment",okText:"YES",cancelText:"NO",content:"This attachment cannot be open with NetOS<br>\n\t\t\t\t\t\t\t\tDo you want to download it ?"},function(){console.log("OK");const{partID:t,type:n,subtype:a}=o;l.show(),e.openAttachment(i,s,c.seqno,t).then(t=>{l.hide();const e=`data:${n}/${a};base64,`+t.data;$$.util.downloadUrl(e,o.name)})})},onToggleDiv:function(t){console.log("onAttachClick");const e=$(this).find("i"),n=$(this).siblings("ul");e.hasClass("fa-caret-right")?(e.removeClass("fa-caret-right").addClass("fa-caret-down"),n.slideDown()):(e.removeClass("fa-caret-down").addClass("fa-caret-right"),n.slideUp())},onEmbeddedImages:function(t){t.preventDefault();const n=$(r.scope.iframe.get(0).contentWindow.document),{embeddedImages:o}=r.model;r.setData({embeddedImages:[]}),o.forEach(t=>{const{type:o,subtype:a,partID:l,cid:r}=t;e.openAttachment(i,s,c.seqno,l).then(t=>{const e=`data:${o}/${a};base64,`+t.data;n.find(`img[src="cid:${r}"]`).attr("src",e)})})},onFrameLoaded:function(t){console.log("onFrameLoaded"),$(this.contentWindow.document).find("a").attr("target","_blank").on("click",function(t){const e=$(this).attr("href");e.startsWith("https://youtu.be/")&&(t.preventDefault(),o.openApp("youtube",{url:e}))})},onAddContact:function(t){console.log("onAddContact"),t.preventDefault();const e=$(this).data("addr");a.pushPage("addContactPage",{title:"Add Contact",props:{from:e}})}}});let d=c.partID.html,u=!0;function m(t,e){a.pushPage("writeMailPage",{title:"Reply message",props:{accountName:i,data:{to:e,subject:"Re: "+c.subject,text:t}}})}0==d&&(d=c.partID.text,u=!1),console.log("isHtml",u),e.openMessage(i,s,c.seqno,d).then(t=>{console.log("message",t);const{text:e,attachments:n,embeddedImages:o}=t;n.forEach(t=>{t.canOpen=null!=$$.util.getFileType(t.name)&&"BASE64"==t.encoding.toUpperCase()}),r.setData({text:e,attachments:n,embeddedImages:o,loading:!1,isHtml:u})}),this.onAction=function(t){console.log("onAction",t,c);const n="\n\n----- Original mail -----\n";if("reply"==t||"replyAll"==t){let o=c.from.email;"replyAll"==t&&c.to.length>0&&(o+=","+c.to.map(t=>t.email).join(",")),r.model.isHtml&&0!=c.partID.text?e.openMessage(i,s,c.seqno,c.partID.text).then(t=>{m(n+t.text,o)}):r.model.isHtml?m("",o):m(n+r.model.text,o)}}}}),$$.control.registerControl("viewerPage",{template:'<div style="height: 100%; position: relative; text-align: center;">\n\t<span bn-show="wait" class="w3-text-blue" style="position: relative; top: 50%;"><i class="fa fa-redo-alt fa-2x fa-pulse"></i></span>\n\n\t<div \n\t\tbn-show="!wait"\n\t\tbn-control="breizbot.viewer" \n\t\tbn-data="{type, url}" \n\t\tstyle="height: 100%" \n\t\tbn-iface="viewer">\n\t\t\t\n\t\t</div>\t\n\n</div>\t',deps:["app.mails","breizbot.pager"],props:{info:"",currentAccount:"",mailboxName:"",seqno:""},buttons:[{name:"save",icon:"fa fa-save"}],init:function(t,e,n){const{info:o,currentAccount:a,mailboxName:i,seqno:s}=this.props,{partID:c,type:l,subtype:r}=o,d=$$.viewController(t,{data:{url:"",wait:!0,type:$$.util.getFileType(o.name)},events:{}});e.openAttachment(a,i,s,c).then(t=>{const e=`data:${l}/${r};base64,`+t.data;d.setData({wait:!1,url:e})}),this.onAction=function(t){console.log("onAction",t),"save"==t&&d.scope.viewer.save("/apps/email",o.name,()=>{n.popPage()})}}}),$$.control.registerControl("writeMailPage",{template:'<form bn-event="submit: onSend" bn-form="data">\n\t<div class="header">\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<div class="openContactPanel">\n\t\t\t\t<button class="w3-button w3-blue" type="button" bn-event="click: openContact">To:</button>\n\t\t\t</div>\n\t\t\t<input type="email" multiple="true" name="to" bn-prop="prop1" required="" bn-bind="to">\t\t\n\t\t</div>\n\n\t\t<div bn-control="brainjs.inputgroup">\n\t\t\t<label>Subject:</label>\n\t\t\t<input type="text" name="subject" required="">\t\t\n\t\t</div>\t\n\n\t\t<div bn-show="show1" class="attachments">\n\t\t\t<label><i class="fa fa-paperclip"></i></label>\t\t\t\n\t\t\t<ul bn-each="attachments" bn-event="click.delete: onRemoveAttachment">\n\t\t\t\t<li>\n\t\t\t\t\t<span bn-text="$i.fileName"></span>\n\t\t\t\t\t<i class="fa fa-times delete"></i>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<textarea name="text" bn-bind="content"></textarea>\t\n\t<input type="submit" hidden="" bn-bind="submit">\n</form>\n',deps:["app.mails","breizbot.pager"],props:{accountName:"",data:{}},buttons:[{name:"attachment",icon:"fa fa-paperclip"},{name:"send",icon:"fa fa-paper-plane"}],init:function(t,e,n){const{accountName:o,data:a}=this.props,i=$$.viewController(t,{data:{data:a,attachments:[],show1:function(){return this.attachments.length>0},prop1:function(){return{autofocus:null==this.data.text}}},events:{onSend:function(t){console.log("onSend"),t.preventDefault();const a=$(this).getFormData(),{attachments:s}=i.model;s.length>0&&(a.attachments=s.map(t=>t.rootDir+t.fileName)),e.sendMail(o,a).then(()=>{n.popPage()}).catch(t=>{$$.ui.showAlert({title:"Error",content:t.responseText})})},openContact:function(){console.log("openContact"),n.pushPage("contactsPage",{title:"Select a contact",onReturn:function(t){const e=t.map(t=>t.contactEmail);console.log("contacts",e);const n=i.scope.to.val();console.log("to",n),""!=n&&e.unshift(n),i.setData({data:{to:e.join(",")}})}})},onRemoveAttachment:function(t){const e=$(this).closest("li").index();console.log("onRemoveAttachment",e),i.model.attachments.splice(e,1),i.update()}}});if(null!=a.text){const t=i.scope.content.get(0);t.focus(),t.setSelectionRange(0,0)}this.onAction=function(t){console.log("onAction",t),"send"==t&&i.scope.submit.click(),"attachment"==t&&n.pushPage("breizbot.files",{title:"Select a file to attach",props:{showThumbnail:!0},onReturn:function(t){const{fileName:e,rootDir:n}=t;i.model.attachments.push({fileName:e,rootDir:n}),i.update()}})}}});