$$.control.registerControl("editDlg",{template:'<form bn-event="submit: onSubmit">\n    <label>Title</label>\n    <input type="text" bn-val="title" bn-update="input" required>\n    <label>Artist</label>\n    <input type="text" bn-val="artist" bn-update="input" required>\n\n\n    <input type="submit" hidden bn-bind="submit">\n</form>\n\n<div class="toolbar">\n    <button type="button" title="Find Info" bn-event="click: onFindInfo" class="w3-btn w3-blue w3-circle">\n        <i class="fa fa-search"></i>\n    </button>\n    \n</div>\n',deps:["breizbot.http","breizbot.pager"],props:{data:{},fileName:""},init:function(t,n,e){const{data:i,fileName:l}=this.props,o=$$.viewController(t,{data:{title:i.title,artist:i.artist},events:{onFindInfo:async function(){const t=await n.post("/search",{query:l.replace(".mp3","")});console.log(t),t&&t.title?o.setData({title:t.title,artist:t.artist}):$$.ui.showAlert({title:"MP3 Information",content:"No information found !"})},onSubmit:function(t){t.preventDefault();const{title:n,artist:i}=o.model;e.popPage({title:n,artist:i})}}});this.getButtons=function(){return{ok:{title:"Apply",icon:"fa fa-check",onClick:function(){o.scope.submit.click()}}}}}}),$$.control.registerControl("filterDlg",{template:'<form bn-event="submit: onSubmit">\n\n    <label>Genre</label>\n    <div bn-control="brainjs.combobox" bn-data="{items: genres}" bn-val="selectedGenre" bn-event="comboboxchange: onGenreChange" name="genre"></div>    \n\n    <label>Artist</label>\n    <div bn-control="brainjs.combobox" bn-data="{items: artists}" bn-val="selectedArtist" bn-update="comboboxchange" name="artist"></div>    \n\n\n    <input type="submit" hidden bn-bind="submit">\n</form>\n',deps:["breizbot.pager"],props:{files:[],mp3Filters:null},init:function(t,n){let{files:e,mp3Filters:i}=this.props;const l=(i=i||{}).genre||"All",o=i.artist||"All";function s(t){let n={};return e.forEach(e=>{if(e.mp3&&("All"==t||e.mp3.genre==t)){const{artist:t}=e.mp3;t&&(n[t]?n[t]++:n[t]=1)}}),(n=Object.keys(n).sort().map(t=>{const e=n[t];return 1==e?{value:t,label:t}:{value:t,label:`${t} (${e})`}})).unshift({value:"All",label:"All",style:"font-weight: bold;"}),n}console.log("selectedArtist",o),console.log("selectedGenre",l);const a=$$.viewController(t,{data:{artists:s(l),genres:function(){let t={};return e.forEach(n=>{if(n.mp3){const{genre:e}=n.mp3;e&&!e.startsWith("(")&&(t[e]?t[e]++:t[e]=1)}}),(t=Object.keys(t).sort().map(n=>{const e=t[n];return 1==e?{value:n,label:n}:{value:n,label:`${n} (${e})`}})).unshift({value:"All",label:"All",style:"font-weight: bold;"}),t}(),selectedArtist:o,selectedGenre:l},events:{onGenreChange:function(t){const n=$(this).getValue();a.setData({artists:s(n)})},onSubmit:function(t){t.preventDefault(),n.popPage($(this).getFormData())}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fa fa-check",onClick:function(){a.scope.submit.click()}}}}}}),$$.control.registerControl("rootPage",{template:'<p>Select a file system</p>\n\n<ul class="w3-ul w3-border w3-white">\n\t<li class="w3-bar" bn-event="click: onHome">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-home fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your home files</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onShare">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-share-alt fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Files shared by your friends</span>\n\t\t</div>\n\t</li>\n</ul>\t',deps:["breizbot.pager"],init:function(t,n){function e(t,e){n.pushPage("breizbot.files",{title:t,props:{filterExtension:".mp3",getMP3Info:!0,friendUser:e},buttons:{search:{title:"Filter",icon:"fa fa-search",onClick:function(){!function(t){const e=t.getMP3Filters(),i=t.getFiles();n.pushPage("filterDlg",{title:"Filter",props:{files:i,mp3Filters:e},onReturn:function(n){t.setMP3Filters(n)}})}(this)}}},events:{fileclick:function(t,i){console.log("info",i);const{rootDir:l,fileName:o}=i,s=$(this).iface(),a=s.getFilteredFiles();console.log("files",a);const r=a.findIndex(t=>t.name==o);console.log("firstIdx",r),n.pushPage("player",{title:"Player",props:{firstIdx:r,files:a,rootDir:l,friendUser:e,fileCtrl:s}})}}})}$$.viewController(t,{data:{},events:{onHome:function(){e("Home files","")},onShare:function(){n.pushPage("breizbot.friends",{title:"Shared files",props:{showConnectionState:!1},events:{friendclick:function(t,n){const{userName:i}=n;e(i,i)}}})}}})}}),function(){function t(t){const n=new Date(1e3*t);return(n.getMinutes()+n.getSeconds()/100).toFixed(2).replace(".",":")}$$.control.registerControl("player",{template:'<div class="title" bn-show="!title">\n\t<strong>FileName:&nbsp;</strong>\n\t<span bn-text="name"></span>\n</div>\n<div class="title" bn-show="title">\n\t<strong>Title:&nbsp;</strong>\n\t<span bn-text="title"></span>\n</div>\n<div class="title" bn-show="artist">\n\t<strong>Artist:&nbsp;</strong>\n\t<span bn-text="artist"></span>\n</div>\n<div class="toolbar">\n\t\t<button bn-prop="{disabled: isFirst}" bn-event="click: onPrev" class="w3-btn w3-blue" title="Previous">\n\t\t\t<i class="fa fa-lg fa-step-backward"></i>\n\t\t</button>\n\t\t\n\t\t<button bn-show="!playing" bn-event="click: onPlay" class="w3-btn w3-blue" title="Play">\n\t\t\t<i class="fa fa-lg fa-play"></i>\n\t\t</button>\n\t\t\n\t\t<button bn-show="playing" bn-event="click: onPause" class="w3-btn w3-blue" title="Pause">\n\t\t\t<i class="fa fa-lg fa-pause"></i>\n\t\t</button>\n\t\t\n\t\t<button bn-prop="{disabled: isLast}" bn-event="click: onNext" class="w3-btn w3-blue" title="Next">\n\t\t\t<i class="fa fa-lg fa-step-forward"></i>\n\t\t</button>\t\n\n</div>\n\n<div class="shuffle">\n\t<span>Shuffle</span>\n\t<div \n\t\tbn-control="brainjs.flipswitch"\n\t\tbn-event="flipswitchchange: onShuffleChange"\n\t\t>\n\t\t\n\t</div>\t\t\t\n</div>\n\n\n<div class="slider">\n\t<span bn-text="getTimeInfo"></span>\n\t<div bn-control="brainjs.slider" \n\t\tbn-data="{max: duration}"\n\t\tbn-event="input: onSliderChange" \t\t \n\t\tbn-val="curTime">\t\t\n\t</div>\n\t\n</div>\n\n<audio \n\tbn-attr="{src}" \n\tbn-bind="audio"\n\tautoplay="" \n\tbn-event="canplay: onLoad, timeupdate: onTimeUpdate, playing: onPlaying, pause: onPaused, ended: onEnded">\t\t\n</audio>\n',deps:["breizbot.files","breizbot.http","breizbot.pager"],props:{rootDir:"",files:[],firstIdx:0,friendUser:"",fileCtrl:null},init:function(n,e,i,l){const{rootDir:o,files:s,firstIdx:a,friendUser:r,fileCtrl:c}=this.props;let u=null;const f=$$.viewController(n,{data:{idx:a,nbFiles:s.length,src:v(a),name:m(a),title:g(a),artist:h(a),duration:0,curTime:0,playing:!1,isFirst:function(){return 0==this.idx},isLast:function(){return this.idx==this.nbFiles-1},getTimeInfo:function(){return`${t(this.curTime)} / ${t(this.duration)}`}},events:{onLoad:function(){f.setData({duration:Math.floor(this.duration)})},onTimeUpdate:function(){f.setData({curTime:this.currentTime})},onPlaying:function(){f.setData({playing:!0})},onPaused:function(){f.setData({playing:!1})},onPlay:function(){d.play()},onPause:function(){d.pause()},onSliderChange:function(t,n){d.currentTime=n},onShuffleChange:function(t,n){u=n?$$.util.knuthShuffle(f.model.nbFiles):null},onEnded:b,onPrev:function(){let{idx:t}=f.model;t>0&&p(t-1)},onNext:b}});function b(){if(null!=u)return void(u.length>0&&p(u.pop()));let{idx:t,nbFiles:n}=f.model;t<n-1&&p(t+1)}function p(t){f.setData({src:v(t),title:g(t),name:m(t),artist:h(t),idx:t})}const d=f.scope.audio.get(0);function m(t){return s[t].name}function g(t){return s[t].mp3.title||""}function h(t){return s[t].mp3.artist||""}function v(t){return e.fileUrl(o+s[t].name,r)}this.getButtons=function(){return{editInfo:{title:"Edit Info",icon:"fa fa-edit",onClick:function(){const{idx:t,name:n}=f.model;l.pushPage("editDlg",{title:"Edit MP3 Info",props:{data:s[t].mp3,fileName:n},onReturn:async function(e){s[t].mp3=e,f.setData(e),await i.post("/saveInfo",{filePath:o+n,friendUser:r,tags:e}),await c.updateFile(n,{getMP3Info:!0})}})}}}}}})}();