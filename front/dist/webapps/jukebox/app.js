$$.control.registerControl("rootPage",{template:'<div \n\tbn-control="breizbot.files" \n\tbn-data="{filterExtension: \'.mp3\'}"\n\tbn-event="fileclick: onFileClick"\n\tbn-iface="files"\n\t></div>',props:{$pager:null},init:function(n){const{$pager:t}=this.props,e=$$.viewController(n,{data:{},events:{onFileClick:function(n,i){const{rootDir:o,fileName:a}=i,l=e.scope.files.getFiles(),s=l.findIndex(n=>n.name==a);t.pushPage("player",{title:"Playlist",props:{firstIdx:s,files:l,rootDir:o}})}}})}}),$$.control.registerControl("player",{template:'<div class="title">\n\t<strong>Title:</strong>\n\t<span bn-text="title"></span>\n</div>\n<div class="toolbar">\n\t<button bn-show="!playing" bn-event="click: onPlay">\n\t\t<i class="fa fa-play"></i>\n\t</button>\n\t\n\t<button bn-show="playing" bn-event="click: onPause">\n\t\t<i class="fa fa-pause"></i>\n\t</button>\n\t\n\t<button bn-prop="{disabled: !(idx > 0)}" bn-event="click: onPrev">\n\t\t<i class="fa fa-step-backward"></i>\n\t</button>\n\t\n\t<button bn-prop="{disabled: !(idx < nbFiles - 1)}" bn-event="click: onNext">\n\t\t<i class="fa fa-step-forward"></i>\n\t</button>\n</div>\n\n<div class="slider">\n\t<span bn-text="getTimeInfo()"></span>\n\t<div bn-control="brainjs.slider" \n\t\tbn-data="{max: duration}"\n\t\tbn-event="input: onSliderChange" \t\t \n\t\tbn-val="curTime">\t\t\n\t</div>\n\t\n</div>\n\n<audio \n\tbn-attr="{src}" \n\tbn-bind="audio"\n\tautoplay="" \n\tbn-event="canplay: onLoad, timeupdate: onTimeUpdate, playing: onPlaying, pause: onPaused, ended: onEnded">\t\t\n</audio>\n',deps:["breizbot.files"],props:{rootDir:"",files:[],firstIdx:0,$pager:null},init:function(n,t){const{rootDir:e,files:i,firstIdx:o,$pager:a}=this.props,l=$$.viewController(n,{data:{idx:o,nbFiles:i.length,src:u(o),title:c(o),duration:0,curTime:0,playing:!1,getTime:function(n){const t=new Date(1e3*n);return(t.getMinutes()+t.getSeconds()/100).toFixed(2).replace(".",":")},getTimeInfo:function(){return`${getTime(curTime)} / ${getTime(duration)}`}},events:{onLoad:function(){console.log("duration",this.duration),l.setData({duration:Math.floor(this.duration)})},onTimeUpdate:function(){l.setData({curTime:this.currentTime})},onPlaying:function(){console.log("onPlaying"),l.setData({playing:!0})},onPaused:function(){console.log("onPaused"),l.setData({playing:!1})},onPlay:function(){d.play()},onPause:function(){d.pause()},onSliderChange:function(n,t){console.log("onSliderChange",t),d.currentTime=t},onEnded:s,onPrev:function(){let{idx:n}=l.model;n>0&&r(n-1)},onNext:s}});function s(){let{idx:n,nbFiles:t}=l.model;n<t-1&&r(n+1)}function r(n){l.setData({src:u(n),title:c(n),idx:n})}const d=l.scope.audio.get(0);function c(n){return i[n].name}function u(n){return t.fileUrl(e+i[n].name)}}});