$$.control.registerControl("editDlg",{template:'<form bn-event="submit: onSubmit" bn-form="mp3">\n    <label>Title</label>\n    <input type="text" name="title" required>\n    <label>Artist</label>\n    <input type="text" name="artist" required>\n    <label>Genre</label>\n    <input type="text" name="genre">\n    <label>Year</label>\n    <input type="number" name="year">\n\n\n    <input type="submit" hidden bn-bind="submit">\n</form>\n\n<div class="toolbar">\n    <button type="button" title="Find Info" bn-event="click: onFindInfo" class="w3-btn w3-blue w3-circle">\n        <i class="fa fa-search"></i>\n    </button>\n    \n</div>\n',deps:["breizbot.http","breizbot.pager"],props:{mp3:{},fileName:""},init:function(t,n,e){const{mp3:i,fileName:s}=this.props,o=$$.viewController(t,{data:{mp3:i},events:{onFindInfo:async function(){const t=await n.post("/search",{query:s.replace(".mp3","")});console.log(t),t&&t.title?($.extend(o.model.mp3,t),o.update()):$$.ui.showAlert({title:"MP3 Information",content:"No information found !"},()=>{const[t,n]=s.replace(".mp3","").split("__");t&&(o.model.mp3.artist=t.replaceAll("_"," ").trim()),n&&(o.model.mp3.title=n.replaceAll("_"," ").trim()),o.update()})},onSubmit:function(t){t.preventDefault();const n=$(this).getFormData();e.popPage(n)}}});this.getButtons=function(){return{ok:{title:"Apply",icon:"fa fa-check",onClick:function(){o.scope.submit.click()}}}}}}),$$.control.registerControl("filterDlg",{template:'<form bn-event="submit: onSubmit">\n\n    <label>Genre</label>\n    <div bn-control="brainjs.combobox" bn-data="{items: genres}" bn-val="selectedGenre" bn-event="comboboxchange: onGenreChange" name="genre"></div>    \n\n    <label>Artist</label>\n    <div bn-control="brainjs.combobox" bn-data="{items: artists}" bn-val="selectedArtist" bn-update="comboboxchange" name="artist"></div>    \n\n\n    <input type="submit" hidden bn-bind="submit">\n</form>\n',deps:["breizbot.pager"],props:{files:[],mp3Filters:null},init:function(t,n){let{files:e,mp3Filters:i}=this.props;const s=(i=i||{}).genre||"All",o=i.artist||"All";function l(t){let n={};return e.forEach(e=>{if(e.mp3&&("All"==t||e.mp3.genre==t)){const{artist:t}=e.mp3;t&&(n[t]?n[t]++:n[t]=1)}}),(n=Object.keys(n).sort().map(t=>{const e=n[t];return 1==e?{value:t,label:t}:{value:t,label:`${t} (${e})`}})).unshift({value:"All",label:"All",style:"font-weight: bold;"}),n}console.log("selectedArtist",o),console.log("selectedGenre",s);const a=$$.viewController(t,{data:{artists:l(s),genres:function(){let t={};return e.forEach(n=>{if(n.mp3){const{genre:e}=n.mp3;e&&!e.startsWith("(")&&(t[e]?t[e]++:t[e]=1)}}),(t=Object.keys(t).sort().map(n=>{const e=t[n];return 1==e?{value:n,label:n}:{value:n,label:`${n} (${e})`}})).unshift({value:"All",label:"All",style:"font-weight: bold;"}),t}(),selectedArtist:o,selectedGenre:s},events:{onGenreChange:function(t){const n=$(this).getValue();a.setData({artists:l(n)})},onSubmit:function(t){t.preventDefault(),n.popPage($(this).getFormData())}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fa fa-check",onClick:function(){a.scope.submit.click()}}}}}}),$$.control.registerControl("rootPage",{template:'<p>Select a file system</p>\n\n<ul class="w3-ul w3-border w3-white">\n\t<li class="w3-bar" bn-event="click: onHome">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-home fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your home files</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onShare">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-share-alt fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Files shared by your friends</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onPlaylist">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-music fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your Playlists</span>\n\t\t</div>\n\t</li>\n\n</ul>\t',deps:["breizbot.pager"],init:function(t,n){function e(t,e){const i=n.pushPage("breizbot.files",{title:t,props:{filterExtension:"mp3",getMP3Info:!0,friendUser:e},buttons:{search:{title:"Filter",icon:"fas fa-filter",onClick:function(){!function(t){const e=t.getMP3Filters(),i=t.getFiles();n.pushPage("filterDlg",{title:"Filter",props:{files:i,mp3Filters:e},onReturn:function(n){t.setMP3Filters(n)}})}(i)}}},events:{fileclick:function(t,s){const{rootDir:o,fileName:l}=s,a=i.getFilteredFiles(),r=a.findIndex(t=>t.name==l);n.pushPage("player",{title:"Player",props:{firstIdx:r,files:a,rootDir:o,friendUser:e,fileCtrl:i}})}}})}$$.viewController(t,{data:{},events:{onHome:function(){e("Home files","")},onShare:function(){n.pushPage("breizbot.friends",{title:"Shared files",props:{showConnectionState:!1},events:{friendclick:function(t,n){const{userName:i}=n;e(i,i)}}})},onPlaylist:function(){n.pushPage("playlist",{title:"Playlist"})}}})}}),function(){function t(t){const n=new Date(1e3*t);return n.getUTCHours()>0?n.getUTCHours().toString()+":"+n.getMinutes().toString().padStart(2,"0")+":"+n.getSeconds().toString().padStart(2,"0"):n.getMinutes().toString()+":"+n.getSeconds().toString().padStart(2,"0")}$$.control.registerControl("player",{template:'<div class="info">\n\t<div class="title" bn-show="!title">\n\t\t<strong>FileName:</strong>\n\t\t<span bn-text="name"></span>\n\t</div>\n\t<div class="title" bn-show="title">\n\t\t<strong>Title:</strong>\n\t\t<span bn-text="title"></span>\n\t</div>\n\t<div class="title" bn-show="artist">\n\t\t<strong>Artist:</strong>\n\t\t<span bn-text="artist"></span>\n\t</div>\n\t<div class="title" bn-show="genre">\n\t\t<strong>Genre:</strong>\n\t\t<span bn-text="genre"></span>\n\t</div>\n\t<div class="title" bn-show="year">\n\t\t<strong>Year:</strong>\n\t\t<span bn-text="year"></span>\n\t</div>\n</div>\n<div class="toolbar">\n\t<button bn-prop="{disabled: isFirst}" bn-event="click: onPrev" class="w3-btn w3-blue" title="Previous" bn-icon="fa fa-lg fa-step-backward">\n\t</button>\n\n\t<button bn-show="!playing" bn-event="click: onPlay" class="w3-btn w3-blue" title="Play" bn-icon="fa fa-lg fa-play">\n\t</button>\n\n\t<button bn-show="playing" bn-event="click: onPause" class="w3-btn w3-blue" title="Pause" bn-icon="fa fa-lg fa-pause">\n\t</button>\n\n\t<button bn-prop="{disabled: isLast}" bn-event="click: onNext" class="w3-btn w3-blue" title="Next" bn-icon="fa fa-lg fa-step-forward">\n\t</button>\n\n</div>\n\n<div class="toolbar2">\n\t<i class="fas fa-random fa-lg w3-text-blue shuffle"></i>\n\t<div bn-control="brainjs.flipswitch" bn-event="flipswitchchange: onShuffleChange">\n\n\t</div>\n\t<i class="fas fa-lg fa-volume-down w3-text-blue volume"></i>\n\t<div bn-control="brainjs.slider" bn-data="{min: 0, max:1, step: 0.1}" bn-event="input: onVolumeChange"\n\t\tbn-val="volume" class="volulmeSlider"></div>\n</div>\n\n\n<div class="slider">\n\t<span bn-text="getTimeInfo"></span>\n\t<div bn-control="brainjs.slider" bn-data="{max: duration}" bn-event="input: onSliderChange" bn-val="curTime">\n\t</div>\n\n</div>\n\n<audio bn-attr="{src}" bn-bind="audio" autoplay=""\n\tbn-event="canplay: onLoad, timeupdate: onTimeUpdate, playing: onPlaying, pause: onPaused, ended: onEnded">\n</audio>',deps:["breizbot.files","app.jukebox","breizbot.pager"],props:{rootDir:"",files:[],firstIdx:0,friendUser:"",fileCtrl:null,isPlaylist:!1},init:function(n,e,i,s){const{rootDir:o,files:l,firstIdx:a,friendUser:r,fileCtrl:c,isPlaylist:u}=this.props;let d=null,f=[];s.setButtonVisible({playlist:!u});const p=$$.viewController(n,{data:{idx:a,nbFiles:l.length,src:"#",name:"",title:"",artist:"",genre:"",year:0,volume:0,duration:0,curTime:0,playing:!1,isFirst:function(){return null!=d||0==this.idx},isLast:function(){return null!=d?0==d.length:this.idx==this.nbFiles-1},getTimeInfo:function(){return`${t(this.curTime)} / ${t(this.duration)}`}},events:{onVolumeChange:function(t,n){v.volume=n},onLoad:function(){p.setData({duration:Math.floor(v.duration),volume:v.volume})},onTimeUpdate:function(){p.setData({curTime:this.currentTime})},onPlaying:function(){p.setData({playing:!0})},onPaused:function(){p.setData({playing:!1})},onPlay:function(){v.play()},onPause:function(){v.pause()},onSliderChange:function(t,n){v.currentTime=n},onShuffleChange:function(t,n){d=n?$$.util.knuthShuffle(p.model.nbFiles):null,p.update()},onEnded:m,onPrev:b,onNext:m}});function b(){let{idx:t}=p.model;t>0&&g(t-1)}function m(){if(null!=d)return void(d.length>0&&g(d.pop()));let{idx:t,nbFiles:n}=p.model;t<n-1&&g(t+1)}function g(t){p.setData({src:S(t),title:y(t),name:h(t),artist:w(t),genre:x(t),year:P(t),idx:t}),navigator.mediaSession&&(navigator.mediaSession.metadata=new MediaMetadata({title:y(t),artist:w(t)}),navigator.mediaSession.setActionHandler("previoustrack",null!=d||0==p.model.idx?null:b),navigator.mediaSession.setActionHandler("nexttrack",(null!=d?0==d.length:p.model.idx==p.model.nbFiles-1)?null:m))}g(a);const v=p.scope.audio.get(0);function h(t){return u?l[t].fileInfo.fileName:l[t].name}function y(t){return l[t].mp3.title||""}function w(t){return l[t].mp3.artist||""}function x(t){return l[t].mp3.genre||""}function P(t){return l[t].mp3.year||""}function S(t){if(u){const{rootDir:n,fileName:i,friendUser:s}=l[t].fileInfo;return e.fileUrl(n+i,s)}return e.fileUrl(o+l[t].name,r)}async function $(){f=await i.getPlaylist()}$(),this.getButtons=function(){const t={playlist:{visible:!u,title:"Add to playlist",icon:"fas fa-star",items:function(){const t={new:{name:"Add to new playlist"}};return 0!=f.length&&(t.sep="------"),f.forEach(n=>{t[n]={name:n}}),t},onClick:async function(t){console.log("onClick",t);const n={rootDir:o,friendUser:r,fileName:p.model.name};if("new"==t){const t=await $$.ui.showPrompt({title:"Add Playlist",label:"Name:"});if(null!=t){await i.addSong(t,n,!0)?await $():$$.ui.showAlert({title:"Error",content:"Playlist already exists"})}}else await i.addSong(t,n,!1)}}};return""===r&&(t.editInfo={visible:!u,title:"Edit Info",icon:"fa fa-edit",onClick:function(){const{idx:t,name:n}=p.model;s.pushPage("editDlg",{title:"Edit MP3 Info",props:{mp3:l[t].mp3,fileName:n},onReturn:async function(e){l[t].mp3=e,p.setData(e),await i.saveInfo(o+n,r,e),await c.updateFileInfo(n,{getMP3Info:!0})}})}}),t}}})}(),$$.control.registerControl("playlist",{deps:["app.jukebox","breizbot.pager"],template:'<div class="toolbar" bn-show="hasPlaylist">\n    <div class="left">\n        <span>Playlist</span>\n        <div \n            bn-bind="playlist"\n            bn-control="brainjs.combobox"\n            bn-data="{items: playlist}"\n            bn-event="comboboxchange: onPlaylistChange"\n        ></div>\n    \n    </div>\n    <div class="right">\n        <span bn-text="nbSongs" bn-bind="nbSongs"></span>&nbsp;Songs\n    </div>\n</div>\n<div bn-show="!hasPlaylist" class="message">\n    You have no playlist\n</div>\n\n<div class="scrollPanel" bn-show="hasPlaylist">\n    <div bn-each="songs" \n        bn-lazzy="20"\n        bn-iter="f" \n        bn-bind="songs"\n        class="items"\n        bn-event="click.item: onItemClick, contextmenuchange.item:onItemContextMenu">\n        <div class="w3-card-2 item" \n            bn-control="brainjs.contextmenu"\n            bn-data="{\n                items: {\n                    remove: {name: \'Remove\', icon: \'fas fa-trash-alt\'}\n                }\n            }"\n        >\n            <div bn-show="!hasTitle">\n                <span class="w3-text-red" bn-show="!isOk">\n                    <i class="fa fa-exclamation-triangle"></i>\n                </span>\n                Filename:&nbsp;\n                <strong bn-text="$scope.f.fileInfo.fileName"></strong>\n            </div>\n            <div bn-show="hasTitle">Title:&nbsp;<strong bn-text="$scope.f.mp3.title"></strong></div>\n\n            <div bn-show="hasArtist">Artist:&nbsp;<strong bn-text="$scope.f.mp3.artist"></strong></div>\n            <div bn-show="hasGenre">Genre:&nbsp;<strong bn-text="$scope.f.mp3.genre"></strong></div>\n            <div bn-show="hasYear"> Year:&nbsp;<strong bn-text="getYear"></strong></div>\n        </div>\n    </div>\n</div>',init:function(t,n,e){let i=-1;const s=$$.viewController(t,{data:{playlist:[],songs:[],nbSongs:function(){return this.songs.length},hasPlaylist:function(){return 0!=this.playlist.length},hasGenre:function(t){let{genre:n}=t.f.mp3||{};return null!=n&&""!=n&&!n.startsWith("(")},hasTitle:function(t){let{title:n}=t.f.mp3||{};return null!=n&&""!=n},hasArtist:function(t){let{artist:n}=t.f.mp3||{};return null!=n&&""!=n},hasYear:function(t){let{year:n}=t.f.mp3||{};return null!=n&&""!=n},getYear:function(t){return parseInt(t.f.mp3&&t.f.mp3.year)},isOk:function(t){return"ok"===t.f.status}},events:{onItemContextMenu:async function(t,i){const o=$(this).closest(".item").index(),l=s.model.songs[o].id;await n.removeSong(l),s.removeArrayItem("songs",o,"songs"),s.updateNode("nbSongs"),e.setButtonVisible({play:0!=s.model.songs.length})},onItemClick:function(t){const n=$(this);i=n.index(),n.hasClass("w3-blue")?(n.removeClass("w3-blue"),i=-1):(n.closest(".items").find(".w3-blue").removeClass("w3-blue"),n.addClass("w3-blue")),o()},onPlaylistChange:async function(t){const n=$(this).getValue();await a(n)}}});function o(){e.setButtonEnabled({moveUp:i>0,moveDown:i>=0&&i<s.model.nbSongs()-1})}async function l(){const t=await n.getPlaylist();s.setData({playlist:t}),0!=t.length?await a(t[0]):e.setButtonVisible({play:!1,delete:!1})}async function a(t){const l=await n.getPlaylistSongs(t);s.setData({songs:l}),e.setButtonVisible({play:0!=l.length}),i=-1,o()}l(),this.getButtons=function(){return{moveUp:{title:"Move up",icon:"fas fa-level-up-alt",enabled:!1,onClick:async function(){const t=s.model.songs[i].id,e=s.model.songs[i-1].id,l=s.removeArrayItem("songs",i,"songs");s.insertArrayItemAfter("songs",i-2,l[0],"songs"),i--,s.scope.songs.find(".item").eq(i).addClass("w3-blue"),o(),await n.swapSongIndex(t,e)}},moveDown:{title:"Move down",icon:"fas fa-level-down-alt",enabled:!1,onClick:async function(){const t=s.model.songs[i].id,e=s.model.songs[i+1].id,l=s.removeArrayItem("songs",i,"songs");s.insertArrayItemAfter("songs",i,l[0],"songs"),i++,s.scope.songs.find(".item").eq(i).addClass("w3-blue"),o(),await n.swapSongIndex(t,e)}},delete:{title:"Delete selected playlist",icon:"fa fa-trash",onClick:function(){const t=s.scope.playlist.getValue();$$.ui.showConfirm({title:"Delete Playlist",content:`Do you really want to delete <strong>'${t}'</strong> playlist ?`},async()=>{console.log("OK"),await n.removePlaylist(t),l()})}},play:{visible:!1,title:"Play",icon:"fa fa-play",onClick:function(){e.pushPage("player",{title:"Player",props:{isPlaylist:!0,files:s.model.songs,firstIdx:Math.max(0,i)}})}}}}}}),$$.service.registerService("app.jukebox",{deps:["breizbot.http"],init:(t,n)=>({getPlaylist:function(){return n.post("/getPlaylist")},getPlaylistSongs:function(t){return n.post("/getPlaylistSongs",{name:t})},swapSongIndex:function(t,e){return n.post("/swapSongIndex",{id1:t,id2:e})},removePlaylist:function(t){return n.post("/removePlaylist",{name:t})},removeSong:function(t){return n.delete("/removeSong/"+t)},addSong:function(t,e,i){return n.post("/addSong",{name:t,fileInfo:e,checkExists:i})},saveInfo:(t,e,i)=>n.post("/saveInfo",{filePath:t,friendUser:e,tags:i})})});