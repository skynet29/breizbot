$$.control.registerControl("editDlg",{template:'<form bn-event="submit: onSubmit" bn-form="mp3">\n    <div class="group">\n        <label>Title</label>\n        <input type="text" name="title" required>    \n    </div>\n    <div class="group">\n        <label>Artist</label>\n        <input type="text" name="artist" required>\n        </div>\n    <div class="group">\n        <label>Title</label>\n        <input type="text" name="title" required>    \n    </div>\n    <div class="group">\n        <label>Genre</label>\n        <input type="text" name="genre">\n        </div>\n    <div class="group">\n        <label>Year</label>\n        <input type="number" name="year">\n        </div>\n    <div class="group">\n        <label>Duration</label>\n        <input type="number" name="length">\n        </div>\n    <div class="group">\n        <label>BPM</label>\n        <input type="number" name="bpm" step="0.1">\n        </div>\n\n    <input type="submit" hidden bn-bind="submit">\n</form>\n\n<div class="toolbar">\n    <button type="button" title="Find Info" bn-event="click: onFindInfo" class="w3-btn w3-blue" bn-icon="fa fa-search"></button>\n    <button type="button" title="Compute Beat Detection" bn-event="click: onComputeBeatDetection" class="w3-btn w3-blue">Compute Beat Detection</button>\n    \n</div>\n',deps:["breizbot.http","breizbot.pager"],props:{mp3:{},fileName:"",url:"",worker:null},init:function(n,t,e){const{mp3:i,fileName:s,url:o,worker:l}=this.props,a=$$.ui.waitDialog("Computing...");const r=$$.viewController(n,{data:{mp3:i},events:{onComputeBeatDetection:async function(){a.show();const n=await new Promise(async n=>{const t=await $$.media.getAudioBuffer(o),e=t.sampleRate,i=new OfflineAudioContext(1,t.length,e),s=i.createBufferSource();s.buffer=t;const a=i.createBiquadFilter();a.type="lowpass",a.frequency.value=240,s.connect(a),a.connect(i.destination),s.start(0),i.startRendering(),i.oncomplete=function(t){const i=t.renderedBuffer.getChannelData(0);l.postMessage({channelData:i,sampleRate:e}),l.onmessage=function(t){n(t.data)}}});console.log("tempo",n),r.model.mp3.bpm=n.tempo,r.update(),a.hide()},onFindInfo:async function(){const n=await t.post("/search",{query:s.replace(".mp3","")});console.log(n),n&&n.title?($.extend(r.model.mp3,n),r.update()):$$.ui.showAlert({title:"MP3 Information",content:"No information found !"},()=>{const[n,t]=s.replace(".mp3","").split("__");n&&(r.model.mp3.artist=n.replaceAll("_"," ").trim()),t&&(r.model.mp3.title=t.replaceAll("_"," ").trim()),r.update()})},onSubmit:function(n){n.preventDefault();const t=$(this).getFormData();e.popPage(t)}}});this.getButtons=function(){return{ok:{title:"Apply",icon:"fa fa-check",onClick:function(){r.scope.submit.click()}}}}}}),$$.control.registerControl("filterDlg",{template:'<form bn-event="submit: onSubmit">\n\n    <label>Genre</label>\n    <div bn-control="brainjs.combobox" bn-data="{items: genres}" bn-val="selectedGenre" bn-event="comboboxchange: onGenreChange" name="genre"></div>    \n\n    <label>Artist</label>\n    <div bn-control="brainjs.combobox" bn-data="{items: artists}" bn-val="selectedArtist" bn-update="comboboxchange" name="artist"></div>    \n\n\n    <input type="submit" hidden bn-bind="submit">\n</form>\n',deps:["breizbot.pager"],props:{files:[],mp3Filters:null},init:function(n,t){let{files:e,mp3Filters:i}=this.props;const s=(i=i||{}).genre||"All",o=i.artist||"All";function l(n){let t={};return e.forEach(e=>{if(e.mp3&&("All"==n||e.mp3.genre==n)){const{artist:n}=e.mp3;n&&(t[n]?t[n]++:t[n]=1)}}),(t=Object.keys(t).sort().map(n=>{const e=t[n];return 1==e?{value:n,label:n}:{value:n,label:`${n} (${e})`}})).unshift({value:"All",label:"All",style:"font-weight: bold;"}),t}console.log("selectedArtist",o),console.log("selectedGenre",s);const a=$$.viewController(n,{data:{artists:l(s),genres:function(){let n={};return e.forEach(t=>{if(t.mp3){const{genre:e}=t.mp3;e&&!e.startsWith("(")&&(n[e]?n[e]++:n[e]=1)}}),(n=Object.keys(n).sort().map(t=>{const e=n[t];return 1==e?{value:t,label:t}:{value:t,label:`${t} (${e})`}})).unshift({value:"All",label:"All",style:"font-weight: bold;"}),n}(),selectedArtist:o,selectedGenre:s},events:{onGenreChange:function(n){const t=$(this).getValue();a.setData({artists:l(t)})},onSubmit:function(n){n.preventDefault(),t.popPage($(this).getFormData())}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fa fa-check",onClick:function(){a.scope.submit.click()}}}}}}),$$.control.registerControl("rootPage",{template:'<p>Select a file system</p>\n\n<ul class="w3-ul w3-border w3-white">\n\t<li class="w3-bar" bn-event="click: onHome">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-home fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your home files</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onShare">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-share-alt fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Files shared by your friends</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onPlaylist">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-music fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your Playlists</span>\n\t\t</div>\n\t</li>\n\n</ul>\t',deps:["breizbot.pager","breizbot.files"],init:function(n,t,e){const i=new Worker(e.assetsUrl("worker.js"));function s(n,e){const s=t.pushPage("breizbot.files",{title:n,props:{filterExtension:"mp3",getMP3Info:!0,friendUser:e},buttons:{search:{title:"Filter",icon:"fas fa-filter",onClick:function(){!function(n){const e=n.getMP3Filters(),i=n.getFiles();t.pushPage("filterDlg",{title:"Filter",props:{files:i,mp3Filters:e},onReturn:function(t){n.setMP3Filters(t)}})}(s)}}},events:{fileclick:function(n,o){const{rootDir:l,fileName:a}=o,r=s.getFilteredFiles(),c=r.findIndex(n=>n.name==a);t.pushPage("player",{title:"Player",props:{firstIdx:c,files:r,rootDir:l,friendUser:e,fileCtrl:s,worker:i}})}}})}$$.viewController(n,{data:{},events:{onHome:function(){s("Home files","")},onShare:function(){t.pushPage("breizbot.friends",{title:"Shared files",props:{showConnectionState:!1},events:{friendclick:function(n,t){const{userName:e}=t;s(e,e)}}})},onPlaylist:function(){t.pushPage("playlist",{title:"Playlist"})}}})}}),$$.control.registerControl("player",{template:'<div class="info">\n\t<div class="title" bn-show="!title">\n\t\t<strong>FileName:</strong>\n\t\t<span bn-text="name"></span>\n\t</div>\n\t<div class="title" bn-show="title">\n\t\t<strong>Title:</strong>\n\t\t<span bn-text="title"></span>\n\t</div>\n\t<div class="title" bn-show="artist">\n\t\t<strong>Artist:</strong>\n\t\t<span bn-text="artist"></span>\n\t</div>\n\t<div class="title" bn-show="genre">\n\t\t<strong>Genre:</strong>\n\t\t<span bn-text="genre"></span>\n\t</div>\n\t<div class="title" bn-show="year">\n\t\t<strong>Year:</strong>\n\t\t<span bn-text="year"></span>\n\t</div>\n</div>\n<div class="toolbar">\n\t<button bn-prop="{disabled: isFirst}" bn-event="click: onPrev" class="w3-btn w3-blue" title="Previous" bn-icon="fa fa-lg fa-step-backward">\n\t</button>\n\n\t<button bn-show="!playing" bn-event="click: onPlay" class="w3-btn w3-blue" title="Play" bn-icon="fa fa-lg fa-play">\n\t</button>\n\n\t<button bn-show="playing" bn-event="click: onPause" class="w3-btn w3-blue" title="Pause" bn-icon="fa fa-lg fa-pause">\n\t</button>\n\n\t<button bn-prop="{disabled: isLast}" bn-event="click: onNext" class="w3-btn w3-blue" title="Next" bn-icon="fa fa-lg fa-step-forward">\n\t</button>\n\n</div>\n\n<div class="toolbar2">\n\t<i class="fas fa-random fa-lg w3-text-blue shuffle"></i>\n\t<div bn-control="brainjs.flipswitch" bn-event="flipswitchchange: onShuffleChange">\n\n\t</div>\n\t<i class="fas fa-lg fa-volume-down w3-text-blue volume"></i>\n\t<div bn-control="brainjs.slider" bn-data="{min: 0, max:1, step: 0.1}" bn-event="input: onVolumeChange"\n\t\tbn-val="volume" class="volulmeSlider"></div>\n</div>\n\n\n<div class="slider">\n\t<span bn-text="getTimeInfo"></span>\n\t<div bn-control="brainjs.slider" bn-data="{max: duration}" bn-event="input: onSliderChange" bn-val="curTime">\n\t</div>\n\n</div>\n\n<audio bn-attr="{src}" bn-bind="audio" autoplay=""\n\tbn-event="canplay: onLoad, timeupdate: onTimeUpdate, playing: onPlaying, pause: onPaused, ended: onEnded">\n</audio>',deps:["breizbot.files","app.jukebox","breizbot.pager"],props:{rootDir:"",files:[],firstIdx:0,friendUser:"",fileCtrl:null,isPlaylist:!1,worker:null},init:function(n,t,e,i){const{rootDir:s,files:o,firstIdx:l,friendUser:a,fileCtrl:r,isPlaylist:c,worker:u}=this.props,d=$$.media.getFormatedTime;let p=null,f=[];i.setButtonVisible({playlist:!c});const b=$$.viewController(n,{data:{idx:l,nbFiles:o.length,src:"#",name:"",title:"",artist:"",genre:"",year:0,volume:0,duration:0,curTime:0,playing:!1,isFirst:function(){return null!=p||0==this.idx},isLast:function(){return null!=p?0==p.length:this.idx==this.nbFiles-1},getTimeInfo:function(){return`${d(this.curTime)} / ${d(this.duration)}`}},events:{onVolumeChange:function(n,t){h.volume=t},onLoad:function(){b.setData({duration:Math.floor(h.duration),volume:h.volume})},onTimeUpdate:function(){b.setData({curTime:this.currentTime})},onPlaying:function(){b.setData({playing:!0})},onPaused:function(){b.setData({playing:!1})},onPlay:function(){h.play()},onPause:function(){h.pause()},onSliderChange:function(n,t){h.currentTime=t},onShuffleChange:function(n,t){p=t?$$.util.knuthShuffle(b.model.nbFiles):null,b.update()},onEnded:g,onPrev:m,onNext:g}});function m(){let{idx:n}=b.model;n>0&&v(n-1)}function g(){if(null!=p)return void(p.length>0&&v(p.pop()));let{idx:n,nbFiles:t}=b.model;n<t-1&&v(n+1)}function v(n){b.setData({src:C(n),title:w(n),name:y(n),artist:x(n),genre:P(n),year:$(n),idx:n}),navigator.mediaSession&&(navigator.mediaSession.metadata=new MediaMetadata({title:w(n),artist:x(n)}),navigator.mediaSession.setActionHandler("previoustrack",null!=p||0==b.model.idx?null:m),navigator.mediaSession.setActionHandler("nexttrack",(null!=p?0==p.length:b.model.idx==b.model.nbFiles-1)?null:g))}v(l);const h=b.scope.audio.get(0);function y(n){return c?o[n].fileInfo.fileName:o[n].name}function w(n){return o[n].mp3.title||""}function x(n){return o[n].mp3.artist||""}function P(n){return o[n].mp3.genre||""}function $(n){return o[n].mp3.year||""}function C(n){if(c){const{rootDir:e,fileName:i,friendUser:s}=o[n].fileInfo;return t.fileUrl(e+i,s)}return t.fileUrl(s+o[n].name,a)}async function k(){f=await e.getPlaylist()}k(),this.getButtons=function(){const n={playlist:{visible:!c,title:"Add to playlist",icon:"fas fa-star",items:function(){const n={new:{name:"Add to new playlist"}};return 0!=f.length&&(n.sep="------"),f.forEach(t=>{n[t]={name:t}}),n},onClick:async function(n){console.log("onClick",n);const t={rootDir:s,friendUser:a,fileName:b.model.name};if("new"==n){const n=await $$.ui.showPrompt({title:"Add Playlist",label:"Name:"});if(null!=n){await e.addSong(n,t,!0)?await k():$$.ui.showAlert({title:"Error",content:"Playlist already exists"})}}else await e.addSong(n,t,!1)}}};return""===a&&(n.editInfo={visible:!c,title:"Edit Info",icon:"fa fa-edit",onClick:function(){const{idx:n,name:t}=b.model;o[n].mp3.length=b.model.duration,i.pushPage("editDlg",{title:"Edit MP3 Info",props:{mp3:o[n].mp3,fileName:t,worker:u,url:b.model.src},onReturn:async function(i){o[n].mp3=i,b.setData(i),await e.saveInfo(s+t,a,i),await r.updateFileInfo(t,{getMP3Info:!0})}})}}),n}}}),$$.control.registerControl("playlist",{deps:["app.jukebox","breizbot.pager"],template:'<div class="toolbar" bn-show="hasPlaylist">\n    <div class="left">\n        <span>Playlist</span>\n        <div \n            bn-bind="playlist"\n            bn-control="brainjs.combobox"\n            bn-data="{items: playlist}"\n            bn-event="comboboxchange: onPlaylistChange"\n        ></div>\n    \n    </div>\n    <div class="right">\n        <span bn-text="nbSongs" bn-bind="nbSongs"></span>&nbsp;Songs\n    </div>\n</div>\n<div bn-show="!hasPlaylist" class="message">\n    You have no playlist\n</div>\n\n<div class="scrollPanel" bn-show="hasPlaylist">\n    <div bn-each="songs" \n        bn-lazzy="20"\n        bn-iter="f" \n        bn-bind="songs"\n        class="items"\n        bn-event="click.item: onItemClick, contextmenuchange.item:onItemContextMenu">\n        <div class="w3-card-2 item" \n            bn-control="brainjs.contextmenu"\n            bn-data="{\n                items: {\n                    remove: {name: \'Remove\', icon: \'fas fa-trash-alt\'}\n                }\n            }"\n        >\n            <div bn-show="!hasTitle">\n                <span class="w3-text-red" bn-show="!isOk">\n                    <i class="fa fa-exclamation-triangle"></i>\n                </span>\n                Filename:&nbsp;\n                <strong bn-text="$scope.f.fileInfo.fileName"></strong>\n            </div>\n            <div bn-show="hasTitle">Title:&nbsp;<strong bn-text="$scope.f.mp3.title"></strong></div>\n\n            <div bn-show="hasArtist">Artist:&nbsp;<strong bn-text="$scope.f.mp3.artist"></strong></div>\n            <div bn-show="hasGenre">Genre:&nbsp;<strong bn-text="$scope.f.mp3.genre"></strong></div>\n            <div bn-show="hasYear"> Year:&nbsp;<strong bn-text="getYear"></strong></div>\n        </div>\n    </div>\n</div>',init:function(n,t,e){let i=-1;const s=$$.viewController(n,{data:{playlist:[],songs:[],nbSongs:function(){return this.songs.length},hasPlaylist:function(){return 0!=this.playlist.length},hasGenre:function(n){let{genre:t}=n.f.mp3||{};return null!=t&&""!=t&&!t.startsWith("(")},hasTitle:function(n){let{title:t}=n.f.mp3||{};return null!=t&&""!=t},hasArtist:function(n){let{artist:t}=n.f.mp3||{};return null!=t&&""!=t},hasYear:function(n){let{year:t}=n.f.mp3||{};return null!=t&&""!=t},getYear:function(n){return parseInt(n.f.mp3&&n.f.mp3.year)},isOk:function(n){return"ok"===n.f.status}},events:{onItemContextMenu:async function(n,i){const o=$(this).closest(".item").index(),l=s.model.songs[o].id;await t.removeSong(l),s.removeArrayItem("songs",o,"songs"),s.updateNode("nbSongs"),e.setButtonVisible({play:0!=s.model.songs.length})},onItemClick:function(n){const t=$(this);i=t.index(),t.hasClass("w3-blue")?(t.removeClass("w3-blue"),i=-1):(t.closest(".items").find(".w3-blue").removeClass("w3-blue"),t.addClass("w3-blue")),o()},onPlaylistChange:async function(n){const t=$(this).getValue();await a(t)}}});function o(){e.setButtonEnabled({moveUp:i>0,moveDown:i>=0&&i<s.model.nbSongs()-1})}async function l(){const n=await t.getPlaylist();s.setData({playlist:n}),0!=n.length?await a(n[0]):e.setButtonVisible({play:!1,delete:!1})}async function a(n){const l=await t.getPlaylistSongs(n);s.setData({songs:l}),e.setButtonVisible({play:0!=l.length}),i=-1,o()}l(),this.getButtons=function(){return{moveUp:{title:"Move up",icon:"fas fa-level-up-alt",enabled:!1,onClick:async function(){const n=s.model.songs[i].id,e=s.model.songs[i-1].id,l=s.removeArrayItem("songs",i,"songs");s.insertArrayItemAfter("songs",i-2,l[0],"songs"),i--,s.scope.songs.find(".item").eq(i).addClass("w3-blue"),o(),await t.swapSongIndex(n,e)}},moveDown:{title:"Move down",icon:"fas fa-level-down-alt",enabled:!1,onClick:async function(){const n=s.model.songs[i].id,e=s.model.songs[i+1].id,l=s.removeArrayItem("songs",i,"songs");s.insertArrayItemAfter("songs",i,l[0],"songs"),i++,s.scope.songs.find(".item").eq(i).addClass("w3-blue"),o(),await t.swapSongIndex(n,e)}},delete:{title:"Delete selected playlist",icon:"fa fa-trash",onClick:function(){const n=s.scope.playlist.getValue();$$.ui.showConfirm({title:"Delete Playlist",content:`Do you really want to delete <strong>'${n}'</strong> playlist ?`},async()=>{console.log("OK"),await t.removePlaylist(n),l()})}},play:{visible:!1,title:"Play",icon:"fa fa-play",onClick:function(){e.pushPage("player",{title:"Player",props:{isPlaylist:!0,files:s.model.songs,firstIdx:Math.max(0,i)}})}}}}}}),$$.service.registerService("app.jukebox",{deps:["breizbot.http"],init:(n,t)=>({getPlaylist:function(){return t.post("/getPlaylist")},getPlaylistSongs:function(n){return t.post("/getPlaylistSongs",{name:n})},swapSongIndex:function(n,e){return t.post("/swapSongIndex",{id1:n,id2:e})},removePlaylist:function(n){return t.post("/removePlaylist",{name:n})},removeSong:function(n){return t.delete("/removeSong/"+n)},addSong:function(n,e,i){return t.post("/addSong",{name:n,fileInfo:e,checkExists:i})},saveInfo:(n,e,i)=>t.post("/saveInfo",{filePath:n,friendUser:e,tags:i})})});