$$.control.registerControl("rootPage",{template:'<p>Select a file system</p>\n\n<ul class="w3-ul w3-border w3-white">\n\t<li class="w3-bar" bn-event="click: onHome">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-home fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your home files</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onShare">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-share-alt fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Files shared by your friends</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onPlaylist">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-music fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your Playlists</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onDatabase">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fas fa-database fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Database</span>\n\t\t</div>\n\t</li>\t\n</ul>\t',deps:["breizbot.pager","breizbot.files"],init:function(t,n,e){function i(t,i){const o={filterExtension:"mp3",getMP3Info:!0,friendUser:i};""==i&&(o.menuItems=function(t){const n={};return t.folder||(n.move={name:"Move",icon:"fas fa-file-export"}),n});const s=n.pushPage("breizbot.files",{title:t,props:o,buttons:{search:{title:"Filter",icon:"fas fa-filter",onClick:function(){!function(t){const e=t.getMP3Filters(),i=t.getFiles();n.pushPage("filterDlg",{title:"Filter",props:{files:i,mp3Filters:e},onReturn:function(n){t.setMP3Filters(n)}})}(s)}}},events:{contextmenuItem:function(t,i){const{cmd:o,name:l,rootDir:a}=i;"move"==o&&n.pushPage("fileTree",{title:"Select Target folder",onReturn:async function(t){console.log("onReturn",t),await e.move(a+l,t.path),s.reload()}})},fileclick:function(t,e){const{rootDir:o,fileName:l}=e,a=s.getFilteredFiles(),r=a.findIndex(t=>t.name==l);n.pushPage("player",{title:"Player",props:{firstIdx:r,files:a,rootDir:o,friendUser:i,fileCtrl:s}})}}})}$$.viewController(t,{data:{},events:{onDatabase:function(){n.pushPage("database",{title:"Database"})},onHome:function(){i("Home files","")},onShare:function(){n.pushPage("breizbot.friends",{title:"Shared files",props:{showConnectionState:!1},events:{friendclick:function(t,n){const{userName:e}=n;i(e,e)}}})},onPlaylist:function(){n.pushPage("playlist",{title:"Playlist"})}}})}}),$$.service.registerService("app.jukebox",{deps:["breizbot.http","breizbot.playlists"],init:(t,n,e)=>({getPlaylist:function(){return e.getPlaylist()},getPlaylistSongs:function(t){return e.getPlaylistSongs(t)},swapSongIndex:function(t,e){return n.post("/swapSongIndex",{id1:t,id2:e})},removePlaylist:function(t){return n.post("/removePlaylist",{name:t})},removeSong:function(t){return n.delete("/removeSong/"+t)},addSong:function(t,e,i){return n.post("/addSong",{name:t,fileInfo:e,checkExists:i})},saveInfo:(t,e,i)=>n.post("/saveInfo",{filePath:t,friendUser:e,tags:i})})}),$$.control.registerControl("database",{template:'<div>\n    <form bn-event="submit: onSubmit">\n        <label>Query</label>\n        <input type="text" required name="query">\n        \n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>\n',deps:["breizbot.pager","breizbot.songs"],init:function(t,n,e){const i=$$.viewController(t,{data:{},events:{onSubmit:async function(t){t.preventDefault();const{query:i}=$(this).getFormData(),o=await e.querySongs(i);o.length>0?n.pushPage("databaseSongs",{title:"Query results",props:{songs:o}}):$$.ui.showAlert({content:"No results found"})}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){i.scope.submit.click()}}}}}}),$$.control.registerControl("databaseSongs",{template:'<div class="content">\n    <div class="scrollPanel">\n        <div bn-each="songs" \n            bn-lazzy="20"\n            bn-iter="f" \n            bn-bind="songs"\n            class="items"\n            bn-event="click.item: onItemClick">\n            <div class="w3-card-2 item">\n\n                <div>Title:&nbsp;<strong bn-text="$scope.f.title"></strong></div>    \n                <div>Artist:&nbsp;<strong bn-text="$scope.f.artist"></strong></div>\n\n            </div>\n        </div>\n    </div>\n</div>',deps:["breizbot.pager"],props:{songs:[]},init:function(t,n){const{songs:e}=this.props,i=$$.viewController(t,{data:{songs:e},events:{onItemClick:function(){const t=$(this).index();console.log({firstIdx:t}),n.pushPage("player",{title:"Player",props:{files:i.model.songs,isDatabaseSongs:!0,firstIdx:t}})}}});this.getButtons=function(){return{play:{title:"Play",icon:"fa fa-play",onClick:function(){n.pushPage("player",{title:"Player",props:{files:i.model.songs,isDatabaseSongs:!0}})}}}}}}),$$.control.registerControl("editDlg",{template:'<form bn-event="submit: onSubmit" bn-form="mp3">\n    <div class="group">\n        <label>Title</label>\n        <input type="text" name="title" required>    \n    </div>\n    <div class="group">\n        <label>Artist</label>\n        <input type="text" name="artist" required>\n        </div>\n    <div class="group">\n        <label>Genre</label>\n        <input type="text" name="genre">\n        </div>\n    <div class="group">\n        <label>Year</label>\n        <input type="number" name="year">\n        </div>\n    <div class="group">\n        <label>Duration</label>\n        <input type="number" name="length">\n        </div>\n    <div class="group">\n        <label>BPM</label>\n        <input type="number" name="bpm" step="0.01">\n        </div>\n\n    <input type="submit" hidden bn-bind="submit">\n</form>\n\n<div class="toolbar">\n    <button type="button" title="Deduce info from filename" bn-event="click: onFindInfo" class="w3-btn w3-green" bn-icon="fas fa-info"></button>\n    <button type="button" title="Search Info on Spotify" bn-event="click: onFindInfoSpotify" class="w3-btn w3-green" bn-icon="fab fa-spotify"></button>\n    <button type="button" title="Compute BPM" bn-event="click: onComputeBeatDetection" class="w3-btn w3-blue">Compute BPM</button>\n    \n</div>\n',deps:["breizbot.http","breizbot.pager","breizbot.beatdetector","breizbot.spotify"],props:{mp3:{},fileName:"",url:"",worker:null},init:function(t,n,e,i,o){const{mp3:s,fileName:l,url:a}=this.props,r=$$.ui.waitDialog("Computing..."),c=$$.viewController(t,{data:{mp3:s},events:{onComputeBeatDetection:async function(){r.show();const t=await $$.media.getAudioBuffer(a),n=await i.computeBeatDetection(t);console.log("tempo",n),c.model.mp3.bpm=parseFloat(n.tempo.toFixed(2)),c.update(),r.hide()},onFindInfo:function(){const[t,n]=l.replace(".mp3","").split("__");t&&(c.model.mp3.artist=t.replaceAll("_"," ").trim()),n&&(c.model.mp3.title=n.replaceAll("_"," ").trim()),c.update()},onFindInfoSpotify:async function(){let t=l.replace(".mp3","");t=t.replaceAll("_"," ").trim();const{mp3:n}=c.model;n.title&&n.artist&&(t=n.artist+" - "+n.title);const e=await o.searchTracks(t);if(console.log(e),e){const t={title:e.name,artist:e.artists[0].name},n=await o.getAudioFeaturesForTrack(e.id);t.bpm=parseFloat(n.tempo.toFixed(2)),$.extend(c.model.mp3,t),c.update()}else $$.ui.showAlert({title:"MP3 Information",content:"No information found !"},()=>{const[t,n]=l.replace(".mp3","").split("__");t&&(c.model.mp3.artist=t.replaceAll("_"," ").trim()),n&&(c.model.mp3.title=n.replaceAll("_"," ").trim()),c.update()})},onSubmit:function(t){t.preventDefault();const n=$(this).getFormData();e.popPage(n)}}});this.getButtons=function(){return{ok:{title:"Apply",icon:"fa fa-check",onClick:function(){c.scope.submit.click()}}}}}}),$$.control.registerControl("fileInfo",{template:'<div>\n    <div>\n        <label>FileName:</label>\n        <span bn-text="info.fileInfo.fileName"></span>\n    </div>\n    <div>\n        <label>Folder:</label>\n        <span bn-text="info.fileInfo.rootDir"></span>\n    </div>\n    <div bn-show="info.fileInfo.friendUser">\n        <label>Friend:</label>\n        <span bn-text="info.fileInfo.friendUser"></span>\n    </div>\n</div>',deps:["breizbot.pager"],props:{info:null},init:function(t,n){console.log("props",this.props);const{info:e}=this.props;$$.viewController(t,{data:{info:e},events:{}})}}),$$.control.registerControl("fileTree",{template:'<div>\n    <div bn-control="breizbot.foldertree" bn-iface="tree"></div>\n</div>\n',deps:["breizbot.pager"],props:{},init:function(t,n){const e=$$.viewController(t,{data:{},events:{}}).scope.tree;this.getButtons=function(){return{apply:{title:"Apply",icon:"fa fa-check",onClick:function(){n.popPage({path:e.getSelPath()})}}}}}}),$$.control.registerControl("filterDlg",{template:'<form bn-event="submit: onSubmit">\n\n    <label>Genre</label>\n    <div bn-control="brainjs.combobox" bn-data="{items: genres}" bn-val="selectedGenre" bn-event="comboboxchange: onGenreChange" name="genre"></div>    \n\n    <label>Artist</label>\n    <div bn-control="brainjs.combobox" bn-data="{items: artists}" bn-val="selectedArtist" bn-update="comboboxchange" name="artist"></div>    \n\n\n    <input type="submit" hidden bn-bind="submit">\n</form>\n',deps:["breizbot.pager"],props:{files:[],mp3Filters:null},init:function(t,n){let{files:e,mp3Filters:i}=this.props;const o=(i=i||{}).genre||"All",s=i.artist||"All";function l(t){let n={};return e.forEach(e=>{if(e.mp3&&("All"==t||e.mp3.genre==t)){const{artist:t}=e.mp3;t&&(n[t]?n[t]++:n[t]=1)}}),(n=Object.keys(n).sort().map(t=>{const e=n[t];return 1==e?{value:t,label:t}:{value:t,label:`${t} (${e})`}})).unshift({value:"All",label:"All",style:"font-weight: bold;"}),n}console.log("selectedArtist",s),console.log("selectedGenre",o);const a=$$.viewController(t,{data:{artists:l(o),genres:function(){let t={};return e.forEach(n=>{if(n.mp3){const{genre:e}=n.mp3;e&&!e.startsWith("(")&&(t[e]?t[e]++:t[e]=1)}}),(t=Object.keys(t).sort().map(n=>{const e=t[n];return 1==e?{value:n,label:n}:{value:n,label:`${n} (${e})`}})).unshift({value:"All",label:"All",style:"font-weight: bold;"}),t}(),selectedArtist:s,selectedGenre:o},events:{onGenreChange:function(t){const n=$(this).getValue();a.setData({artists:l(n)})},onSubmit:function(t){t.preventDefault(),n.popPage($(this).getFormData())}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fa fa-check",onClick:function(){a.scope.submit.click()}}}}}}),$$.control.registerControl("player",{template:'<div class="info">\n\t<div class="title" bn-show="!title">\n\t\t<strong>FileName:</strong>\n\t\t<span bn-text="name"></span>\n\t</div>\n\t<div class="title" bn-show="title">\n\t\t<strong>Title:</strong>\n\t\t<span bn-text="title"></span>\n\t</div>\n\t<div class="title" bn-show="artist">\n\t\t<strong>Artist:</strong>\n\t\t<span bn-text="artist"></span>\n\t</div>\n\t<div class="title" bn-show="genre">\n\t\t<strong>Genre:</strong>\n\t\t<span bn-text="genre"></span>\n\t</div>\n\t<div class="title" bn-show="year">\n\t\t<strong>Year:</strong>\n\t\t<span bn-text="year"></span>\n\t</div>\n</div>\n<div class="toolbar">\n\t<button bn-prop="{disabled: isFirst}" bn-event="click: onPrev" class="w3-btn w3-blue" title="Previous" bn-icon="fa fa-lg fa-step-backward">\n\t</button>\n\n\t<button bn-show="!playing" bn-event="click: onPlay" class="w3-btn w3-blue" title="Play" bn-icon="fa fa-lg fa-play">\n\t</button>\n\n\t<button bn-show="playing" bn-event="click: onPause" class="w3-btn w3-blue" title="Pause" bn-icon="fa fa-lg fa-pause">\n\t</button>\n\n\t<button bn-prop="{disabled: isLast}" bn-event="click: onNext" class="w3-btn w3-blue" title="Next" bn-icon="fa fa-lg fa-step-forward">\n\t</button>\n\n</div>\n\n<div class="toolbar2">\n\t<i class="fas fa-random fa-lg w3-text-blue shuffle"></i>\n\t<div bn-control="brainjs.flipswitch" bn-event="flipswitchchange: onShuffleChange">\n\n\t</div>\n\t<i class="fas fa-lg fa-volume-down w3-text-blue volume"></i>\n\t<div bn-control="brainjs.slider" bn-data="{min: 0, max:1, step: 0.1}" bn-event="input: onVolumeChange"\n\t\tbn-val="volume" class="volulmeSlider"></div>\n</div>\n\n\n<div class="slider">\n\t<span bn-text="getTimeInfo"></span>\n\t<div bn-control="brainjs.slider" bn-data="{max: duration}" bn-event="input: onSliderChange" bn-val="curTime">\n\t</div>\n\n</div>\n\n<audio bn-attr="{src}" bn-bind="audio" autoplay=""\n\tbn-event="canplay: onLoad, timeupdate: onTimeUpdate, playing: onPlaying, pause: onPaused, ended: onEnded">\n</audio>',deps:["breizbot.files","app.jukebox","breizbot.pager"],props:{rootDir:"",files:[],firstIdx:0,friendUser:"",fileCtrl:null,isPlaylist:!1,isDatabaseSongs:!1,worker:null},init:function(t,n,e,i){const{rootDir:o,files:s,firstIdx:l,friendUser:a,fileCtrl:r,isPlaylist:c,isDatabaseSongs:u}=this.props,p=$$.media.getFormatedTime;let d=null,f=[];i.setButtonVisible({playlist:!c});const b=$$.viewController(t,{data:{idx:l,nbFiles:s.length,src:"#",name:"",title:"",artist:"",genre:"",year:0,volume:0,duration:0,curTime:0,playing:!1,isFirst:function(){return null!=d||0==this.idx},isLast:function(){return null!=d?0==d.length:this.idx==this.nbFiles-1},getTimeInfo:function(){return`${p(this.curTime)} / ${p(this.duration)}`}},events:{onVolumeChange:function(t,n){h.volume=n},onLoad:function(){b.setData({duration:Math.floor(h.duration),volume:h.volume})},onTimeUpdate:function(){b.setData({curTime:this.currentTime})},onPlaying:function(){b.setData({playing:!0})},onPaused:function(){b.setData({playing:!1})},onPlay:function(){h.play()},onPause:function(){h.pause()},onSliderChange:function(t,n){h.currentTime=n},onShuffleChange:function(t,n){d=n?$$.util.knuthShuffle(b.model.nbFiles):null,b.update()},onEnded:g,onPrev:m,onNext:g}});function m(){let{idx:t}=b.model;t>0&&v(t-1)}function g(){if(null!=d)return void(d.length>0&&v(d.pop()));let{idx:t,nbFiles:n}=b.model;t<n-1&&v(t+1)}function v(t){b.setData({src:C(t),title:w(t),name:y(t),artist:$(t),genre:x(t),year:P(t),idx:t}),navigator.mediaSession&&(navigator.mediaSession.metadata=new MediaMetadata({title:w(t),artist:$(t)}),navigator.mediaSession.setActionHandler("previoustrack",null!=d||0==b.model.idx?null:m),navigator.mediaSession.setActionHandler("nexttrack",(null!=d?0==d.length:b.model.idx==b.model.nbFiles-1)?null:g))}v(l);const h=b.scope.audio.get(0);function y(t){return c?s[t].fileInfo.fileName:s[t].name}function w(t){return s[t].title||s[t].mp3.title||""}function $(t){return s[t].artist||s[t].mp3.artist||""}function x(t){return(s[t].mp3||{}).genre||""}function P(t){return(s[t].mp3||{}).year||""}function C(t){if(c){const{rootDir:e,fileName:i,friendUser:o}=s[t].fileInfo;return n.fileUrl(e+i,o)}return u?n.fileUrl(s[t].fileName):n.fileUrl(o+s[t].name,a)}async function k(){f=await e.getPlaylist()}k(),this.getButtons=function(){const t={playlist:{visible:!c,title:"Add to playlist",icon:"fas fa-star",items:function(){const t={new:{name:"Add to new playlist"}};return 0!=f.length&&(t.sep="------"),f.forEach(n=>{t[n]={name:n}}),t},onClick:async function(t){const n={rootDir:o,friendUser:a,fileName:b.model.name};if("new"==t){const t=await $$.ui.showPrompt({title:"Add Playlist",label:"Name:"});if(null!=t){await e.addSong(t,n,!0)?await k():$$.ui.showAlert({title:"Error",content:"Playlist already exists"})}}else await e.addSong(t,n,!1)}}};return""===a&&(t.editInfo={visible:!c,title:"Edit Info",icon:"fa fa-edit",onClick:function(){const{idx:t,name:n}=b.model;s[t].mp3.length=b.model.duration,i.pushPage("editDlg",{title:"Edit MP3 Info",props:{mp3:s[t].mp3,fileName:n,url:b.model.src},onReturn:async function(i){s[t].mp3=i,b.setData(i),await e.saveInfo(o+n,a,i),await r.updateFileInfo(n,{getMP3Info:!0})}})}}),t}}}),$$.control.registerControl("playlistSongs",{deps:["app.jukebox","breizbot.pager"],template:'<div class="toolbar">\n    <div class="right">\n        <span bn-text="getInfo" bn-bind="nbSongs"></span>\n    </div>\n</div>\n\n<div class="content">\n    <div class="scrollPanel">\n        <div bn-each="songs" \n            bn-lazzy="20"\n            bn-iter="f" \n            bn-bind="songs"\n            class="items"\n            bn-event="click.item: onItemClick, contextmenuchange.item:onItemContextMenu">\n            <div class="w3-card-2 item" \n                bn-control="brainjs.contextmenu"\n                bn-data="{\n                    items: {\n                        remove: {name: \'Remove\', icon: \'fas fa-trash-alt\'}\n                    }\n                }"\n            >\n                <div bn-show="!hasTitle">\n                    <span class="w3-text-red" bn-show="!isOk">\n                        <i class="fa fa-exclamation-triangle"></i>\n                    </span>\n                    Filename:&nbsp;\n                    <strong bn-text="$scope.f.fileInfo.fileName"></strong>\n                </div>\n                <div bn-show="hasTitle">Title:&nbsp;<strong bn-text="$scope.f.mp3.title"></strong></div>\n    \n                <div bn-show="hasArtist">Artist:&nbsp;<strong bn-text="$scope.f.mp3.artist"></strong></div>\n                <div bn-show="hasGenre">Genre:&nbsp;<strong bn-text="$scope.f.mp3.genre"></strong></div>\n                <div bn-show="hasYear"> Year:&nbsp;<strong bn-text="getYear"></strong></div>\n                <div bn-show="hasDuration"> Duration:&nbsp;<strong bn-text="getDuration"></strong></div>\n            </div>\n        </div>\n    </div>\n</div>\n',props:{playlistName:""},init:function(t,n,e){const{playlistName:i}=this.props;let o=-1;const s=$$.viewController(t,{data:{songs:[],totalDuration:0,getInfo:function(){let t=`${this.songs.length} Songs`;return 0!=this.totalDuration&&(t+=` (${$$.media.getFormatedTime(this.totalDuration)})`),t},hasGenre:function(t){let{genre:n}=t.f.mp3||{};return null!=n&&""!=n&&!n.startsWith("(")},hasTitle:function(t){let{title:n}=t.f.mp3||{};return null!=n&&""!=n},hasArtist:function(t){let{artist:n}=t.f.mp3||{};return null!=n&&""!=n},hasYear:function(t){let{year:n}=t.f.mp3||{};return null!=n&&""!=n},hasDuration:function(t){let{length:n}=t.f.mp3||{};return null!=n&&""!=n},getDuration:function(t){return this.hasDuration(t)?$$.media.getFormatedTime(t.f.mp3.length):""},getYear:function(t){return parseInt(t.f.mp3&&t.f.mp3.year)},isOk:function(t){return"ok"===t.f.status}},events:{onItemContextMenu:async function(t,i){const o=$(this).closest(".item").index(),l=s.model.songs[o],a=l.id,r=l.mp3&&l.mp3.length;await n.removeSong(a),s.removeArrayItem("songs",o,"songs"),r&&(s.model.totalDuration-=r),s.updateNode("nbSongs"),e.setButtonVisible({play:0!=s.model.songs.length})},onItemClick:function(t){const n=$(this);o=n.index(),n.hasClass("w3-blue")?(n.removeClass("w3-blue"),o=-1):(n.closest(".items").find(".w3-blue").removeClass("w3-blue"),n.addClass("w3-blue")),l()}}});function l(){e.setButtonEnabled({info:o>=0,moveUp:o>0,moveDown:o>=0&&o<s.model.songs.length-1})}!async function(){const t=await n.getPlaylistSongs(i);let e=0;for(const n of t){const t=n.mp3&&n.mp3.length;if(!t){e=0;break}e+=parseInt(t)}s.setData({songs:t,totalDuration:e}),o=-1,l()}(),this.getButtons=function(){return{info:{title:"Show File Info",icon:"fas fa-info",enabled:!1,onClick:function(){const t=s.model.songs[o];let n=t.fileInfo.fileName;t.mp3&&t.mp3.title&&(n=`${t.mp3.artist} - ${t.mp3.title}`),e.pushPage("fileInfo",{title:n,props:{info:t}})}},moveUp:{title:"Move up",icon:"fas fa-level-up-alt",enabled:!1,onClick:async function(){const t=s.model.songs[o].id,e=s.model.songs[o-1].id,i=s.removeArrayItem("songs",o,"songs");s.insertArrayItemAfter("songs",o-2,i[0],"songs"),o--,s.scope.songs.find(".item").eq(o).addClass("w3-blue"),l(),await n.swapSongIndex(t,e)}},moveDown:{title:"Move down",icon:"fas fa-level-down-alt",enabled:!1,onClick:async function(){const t=s.model.songs[o].id,e=s.model.songs[o+1].id,i=s.removeArrayItem("songs",o,"songs");s.insertArrayItemAfter("songs",o,i[0],"songs"),o++,s.scope.songs.find(".item").eq(o).addClass("w3-blue"),l(),await n.swapSongIndex(t,e)}},play:{title:"Play",icon:"fa fa-play",onClick:function(){e.pushPage("player",{title:"Player",props:{isPlaylist:!0,files:s.model.songs,firstIdx:Math.max(0,o)}})}}}}}}),$$.control.registerControl("playlist",{deps:["app.jukebox","breizbot.pager"],template:'<div bn-show="!hasPlaylist" class="message">\n    You have no playlist\n</div>\n\n<div class="scrollPanel" bn-show="hasPlaylist">\n    <div bn-each="playlist" class="items" bn-event="click.item: onItemClick, contextmenuchange.item:onItemContextMenu">\n        <div class="w3-card-2 item" bn-control="brainjs.contextmenu" bn-data="{\n                    items: {\n                        delete: {name: \'Remove\', icon: \'fas fa-trash-alt\'}\n                    }\n                }">\n            <div>\n                <strong bn-text="$scope.$i"></strong>\n            </div>\n        </div>\n    </div>\n</div>',init:function(t,n,e){const i=$$.viewController(t,{data:{playlist:[],hasPlaylist:function(){return 0!=this.playlist.length}},events:{onItemContextMenu:async function(t,e){const s=$(this).closest(".item").index(),l=i.model.playlist[s];$$.ui.showConfirm({title:"Delete Playlist",content:`Do you really want to delete <strong>'${l}'</strong> playlist ?`},async()=>{await n.removePlaylist(l),o()})},onItemClick:function(t){const n=$(this).closest(".item").index(),o=i.model.playlist[n];e.pushPage("playlistSongs",{title:o,props:{playlistName:o}})}}});async function o(){const t=await n.getPlaylist();i.setData({playlist:t})}o()}});