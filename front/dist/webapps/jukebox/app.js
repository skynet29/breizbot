$$.control.registerControl("rootPage",{template:'<div \n\tbn-control="breizbot.files" \n\tbn-data="{filterExtension: \'.mp3\'}"\n\tbn-event="fileclick: onFileClick"\n\tbn-iface="files"\n\t></div>',props:{$pager:null},init:function(t){const{$pager:n}=this.props,e=$$.viewController(t,{data:{},events:{onFileClick:function(t,i){const{rootDir:o,fileName:a}=i,l=e.scope.files.getFiles(),s=l.findIndex(t=>t.name==a);n.pushPage("player",{title:"Playlist",props:{firstIdx:s,files:l,rootDir:o}})}}})}}),$$.control.registerControl("player",{template:'<div class="title">\n\t<strong>Title:</strong>\n\t<span bn-text="title"></span>\n</div>\n<div class="toolbar">\n\t<div>\n\t\t<button bn-show="!playing" bn-event="click: onPlay">\n\t\t\t<i class="fa fa-play"></i>\n\t\t</button>\n\t\t\n\t\t<button bn-show="playing" bn-event="click: onPause">\n\t\t\t<i class="fa fa-pause"></i>\n\t\t</button>\n\t\t\n\t\t<button bn-prop="{disabled: !(idx > 0)}" bn-event="click: onPrev">\n\t\t\t<i class="fa fa-step-backward"></i>\n\t\t</button>\n\t\t\n\t\t<button bn-prop="{disabled: !(idx < nbFiles - 1)}" bn-event="click: onNext">\n\t\t\t<i class="fa fa-step-forward"></i>\n\t\t</button>\t\t\n\t</div>\n\n\n\t<div class="shuffle">\n\t\t<span>Shuffle</span>\n\t\t<div \n\t\t\tbn-control="brainjs.flipswitch"\n\t\t\tbn-event="flipswitchchange: onShuffleChange"\n\t\t\tdata-width="100"\n\t\t\tdata-height="25"\n\t\t\t>\n\t\t\t\n\t\t</div>\t\t\t\n\t</div>\n\n\n</div>\n\n<div class="slider">\n\t<span bn-text="getTimeInfo()"></span>\n\t<div bn-control="brainjs.slider" \n\t\tbn-data="{max: duration}"\n\t\tbn-event="input: onSliderChange" \t\t \n\t\tbn-val="curTime">\t\t\n\t</div>\n\t\n</div>\n\n<audio \n\tbn-attr="{src}" \n\tbn-bind="audio"\n\tautoplay="" \n\tbn-event="canplay: onLoad, timeupdate: onTimeUpdate, playing: onPlaying, pause: onPaused, ended: onEnded">\t\t\n</audio>\n',deps:["breizbot.files"],props:{rootDir:"",files:[],firstIdx:0,$pager:null},init:function(t,n){const{rootDir:e,files:i,firstIdx:o,$pager:a}=this.props;let l=null;const s=$$.viewController(t,{data:{idx:o,nbFiles:i.length,src:f(o),title:c(o),duration:0,curTime:0,playing:!1,getTime:function(t){const n=new Date(1e3*t);return(n.getMinutes()+n.getSeconds()/100).toFixed(2).replace(".",":")},getTimeInfo:function(){return`${getTime(curTime)} / ${getTime(duration)}`}},events:{onLoad:function(){s.setData({duration:Math.floor(this.duration)})},onTimeUpdate:function(){s.setData({curTime:this.currentTime})},onPlaying:function(){s.setData({playing:!0})},onPaused:function(){s.setData({playing:!1})},onPlay:function(){u.play()},onPause:function(){u.pause()},onSliderChange:function(t,n){u.currentTime=n},onShuffleChange:function(t,n){l="ON"==n?function(t){let n=[];for(let e=0;e<t;e++)n.push(e);var e,i,o;for(o=n.length-1;o>0;o-=1)e=Math.floor((o+1)*Math.random()),i=n[e],n[e]=n[o],n[o]=i;return n}(s.model.nbFiles):null},onEnded:r,onPrev:function(){let{idx:t}=s.model;t>0&&d(t-1)},onNext:r}});function r(){if(null!=l)return void(l.length>0&&d(l.pop()));let{idx:t,nbFiles:n}=s.model;t<n-1&&d(t+1)}function d(t){s.setData({src:f(t),title:c(t),idx:t})}const u=s.scope.audio.get(0);function c(t){return i[t].name}function f(t){return n.fileUrl(e+i[t].name)}}});