$$.control.registerControl("FileChoice",{template:'<p>Select a file system</p>\n<ul class="w3-ul w3-border w3-white">\n\t<li class="w3-bar" bn-event="click: onHome">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-home fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your home files</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onShare">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-share-alt fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Files shared by your friends</span>\n\t\t</div>\n\t</li>\n</ul>\t',deps:["breizbot.pager","breizbot.files"],init:function(n,t,e){function i(n,i){t.pushPage("breizbot.files",{title:n,props:{filterExtension:"mp4",friendUser:i},events:{fileclick:function(n,o){console.log("fileclick",o);const{rootDir:a,fileName:s}=o,l=e.fileUrl(a+s,i);t.popPage(l)}},onReturn:function(n){t.popPage(n)}})}$$.viewController(n,{data:{},events:{onHome:function(){i("Home files","")},onShare:function(){t.pushPage("breizbot.friends",{title:"Shared files",props:{showConnectionState:!1},events:{friendclick:function(n,t){const{userName:e}=t;i(e,e)}},onReturn:function(n){t.popPage(n)}})}}})}}),$$.control.registerControl("rootPage",{template:'<div class="header">\n\t<div class="item">\n\t\t<label>Audio Input</label>\n\t\t<div \n\t\tbn-control="brainjs.combobox" \n\t\tbn-data="{items: audioDevices}"\n\t\tbn-event="comboboxchange: onAudioDeviceChange"\n\t\t></div>\t\n\t</div>\n\t<div class="item">\n\t\t<label>Analyser</label>\n\t\t<div bn-control="brainjs.flipswitch" bn-event="flipswitchchange: onAnalyserChange" bn-val="showAnalyser"></div>\n\t</div>\n\t<div class="item">\n\t\t<label>Status:</label>\n\t\t<span bn-text="status"></span>\n\t</div>\n\t<div class="item">\n\t\t<button class="w3-btn w3-blue" bn-icon="fa fa-folder-open" bn-event="click: onChooseFile" title="Choose video file"></button>\n\t</div>\n\t\t\n</div>\n<div class="top">\n\t<div class="video">\n\t\t<video bn-attr="{src: url}" controls="" controlsList=nodownload bn-bind="video"></video>\n\t</div>\n\t<div class="gain">\n\t\t<div class="gainItem">\n\t\t\t<label>Micro</label>\n\t\t\t<div bn-control="brainjs.slider" bn-data="{min: 0, max: 1, step:0.1, orientation: \'vertical\'}" bn-val="micGain" bn-event="input: onMicGainChange"></div>\n\t\t</div>\n\t\t<div class="gainItem">\n\t\t\t<label>Video</label>\n\t\t\t<div bn-control="brainjs.slider" bn-data="{min: 0, max: 1, step:0.1, orientation: \'vertical\'}" bn-val="videoGain" bn-event="input: onVideoGainChange"></div>\n\t\t</div>\n\t</div>\n\t\n\t</div>\n</div>\n\n\n<canvas class="visualizer" bn-bind="canvas" bn-show="showAnalyser"></canvas>\n\n\n\n',deps:["breizbot.files","breizbot.pager"],init:function(n,t,e){let i=null,o=null,a=null,s=null,l=0;const c=$$.viewController(n,{data:{micGain:.5,videoGain:.5,url:"#",audioDevices:[],showAnalyser:!1,status:"KO"},events:{onMicGainChange:function(n,t){b.gain.value=t},onVideoGainChange:function(n,t){f.volume=t},onAudioDeviceChange:async function(){const n=$(this).getValue();await g(r(n))},onAnalyserChange:function(n,t){console.log("onAnalyserChange",t),c.setData({showAnalyser:t}),0==t?cancelAnimationFrame(o):"OK"==c.model.status&&m()},onChooseFile:function(){e.pushPage("FileChoice",{title:"Choose File",onReturn:function(n){console.log("url",n),c.setData({url:n})}})}}});function r(n){return{audio:{deviceId:{exact:n}}}}const d=c.scope.canvas.get(0),u=d.getContext("2d"),v=new AudioContext,b=v.createGain();b.gain.value=c.model.micGain;const f=c.scope.video.get(0);c.setData({videoGain:f.volume});const h=v.createMediaElementSource(f);function m(){const n=d.width,t=d.height;o=requestAnimationFrame(m),a.getByteTimeDomainData(s),u.fillStyle="rgb(200, 200, 200)",u.fillRect(0,0,n,t),u.lineWidth=2,u.strokeStyle="rgb(0, 0, 0)",u.beginPath();const e=n/l;let i=0;for(let n=0;n<l;n++){const o=s[n]/128*t/2;0==n?u.moveTo(i,o):u.lineTo(i,o),i+=e}u.lineTo(n,t/2),u.stroke()}async function g(n){console.log("initNodes",n);try{i=await navigator.mediaDevices.getUserMedia(n);const t=v.createMediaStreamSource(i);(a=v.createAnalyser()).fftSize=2048,l=a.frequencyBinCount,s=new Uint8Array(l),t.connect(a),t.connect(b);const e=v.createChannelSplitter();h.connect(e);const o=v.createChannelMerger();b.connect(o,0,0),b.connect(o,0,1),e.connect(o,0,0),e.connect(o,1,1),o.connect(v.destination),c.setData({status:"OK"}),c.model.showAnalyser&&m()}catch(n){c.setData({status:"KO"}),console.error(n)}}this.dispose=function(){console.log("dispose"),i&&(i.getTracks().forEach(function(n){n.stop()}),i=null)},async function(){await async function(){const n=await $$.media.getAudioInputDevices();c.setData({audioDevices:n.map(n=>({value:n.id,label:n.label}))})}(),await g(r(c.model.audioDevices[0].value))}()}});