$$.control.registerControl("rootPage",{template:'<div class="header">\n\t<div class="item">\n\t\t<label>Audio Input</label>\n\t\t<div bn-control="brainjs.combobox" bn-data="{items: audioDevices}"\n\t\t\tbn-event="comboboxchange: onAudioDeviceChange"></div>\n\t</div>\n\t<div class="item">\n\t\t<label>Status:</label>\n\t\t<span bn-text="status"></span>\n\t</div>\n\t<div class="item">\n\t\t<button class="w3-btn w3-blue" bn-icon="fa fa-folder-open" bn-event="click: onChooseFile"\n\t\t\ttitle="Choose video file"></button>\n\t</div>\n\t<div class="item" bn-show="isDisplayAvailable">\n\t\t<button class="w3-btn w3-blue" bn-event="click: onCast" bn-icon="fab fa-chromecast"\n\t\t\ttitle="Open display"></button>\n\t</div>\n\t<div class="item" bn-show="isDisplayStarted">\n\t\t<button class="w3-btn w3-blue" bn-event="click: onSend" bn-icon="fa fa-paper-plane" title="Cast"></button>\n\t</div>\n\t<div class="item" bn-show="isDisplayStarted">\n\t\t<button class="w3-btn w3-blue" bn-event="click: onPlay" bn-icon="fa fa-play" title="Play"\n\t\t\tbn-show="!isPlaying"></button>\n\t\t<button class="w3-btn w3-blue" bn-event="click: onPause" bn-icon="fa fa-pause" title="Play"\n\t\t\tbn-show="isPlaying"></button>\n\t</div>\n\t<div class="item" bn-show="isDisplayStarted">\n\t\t<button class="w3-btn w3-blue" bn-event="click: onSyncMainWithDisplay" bn-icon="fas fa-level-down-alt"\n\t\t\ttitle="Sync main with display"></button>\n\t</div>\n\t<div class="item" bn-show="isDisplayStarted">\n\t\t<button class="w3-btn w3-blue" bn-event="click: onSyncDisplayWithMain" bn-icon="fas fa-level-up-alt"\n\t\t\ttitle="Sync display with main"></button>\n\t</div>\n\t<div class="item" bn-show="isDisplayStarted">\n\t\t<label>Karaoke</label>\n\t\t<div bn-control="brainjs.flipswitch" bn-val="karaokeEnabled" bn-event="flipswitchchange: onKaraokeChange"></div>\n\t</div>\n</div>\n\n<div class="slider" bn-show="isDisplayStarted">\n\t<label bn-text="getDuration"></label>\n\t\t<div bn-control="brainjs.slider" bn-data="{max: duration}" bn-event="input: onSliderChange" bn-val="curTime">\n\t\t</div>\n</div>\n\n<div class="top">\n\t<div class="video">\n\t\t<video bn-attr="{src: url}" controls="" controlsList=nodownload bn-bind="video"></video>\n\t</div>\n\t<div class="gain">\n\t\t<div class="gainItem">\n\t\t\t<label>Micro</label>\n\t\t\t<div bn-control="brainjs.slider" bn-data="{min: 0, max: 1, step:0.1, orientation: \'vertical\'}"\n\t\t\t\tbn-val="micGain" bn-event="input: onMicGainChange"></div>\n\t\t</div>\n\t\t<div class="gainItem">\n\t\t\t<label>Video</label>\n\t\t\t<div bn-control="brainjs.slider" bn-data="{min: 0, max: 1, step:0.1, orientation: \'vertical\'}"\n\t\t\t\tbn-val="videoGain" bn-event="input: onVideoGainChange"></div>\n\t\t</div>\n\t</div>\n\n</div>',deps:["breizbot.files","breizbot.pager","breizbot.display"],init:function(t,n,i,e){let a=null;function o(t){return(t/100).toFixed(2).split(".")[1]}function s(t){const n=new Date(0).getHours(),i=new Date(1e3*t),e=i.getHours()-n;return 0!=e?e.toString()+":"+o(i.getMinutes())+":"+o(i.getSeconds()):i.getMinutes().toString()+":"+o(i.getSeconds())}const l=$$.viewController(t,{data:{micGain:.5,videoGain:.5,url:"#",audioDevices:[],showAnalyser:!1,status:"KO",recording:!1,showStartRecord:function(){return"OK"==this.status&&!this.recording},isDisplayAvailable:!1,isDisplayStarted:!1,isPlaying:!1,karaokeEnabled:!1,duration:0,curTime:0,getDuration:function(){return s(this.curTime)+" / "+s(this.duration)}},events:{onSyncMainWithDisplay:function(){d.currentTime=l.model.curTime},onSyncDisplayWithMain:function(){e.setCurrentTime(d.currentTime)},onKaraokeChange:function(t,n){console.log("onKaraokeChange",n),e.enableKaraoke(n)},onPlay:function(){e.play()},onPause:function(){e.pause()},onCast:async function(){e.isStarted()?e.close():await e.start()},onSend:function(){e.setUrl(l.model.url),l.setData({duration:d.duration,isPlaying:!1})},onMicGainChange:function(t,n){u.gain.value=n},onVideoGainChange:function(t,n){e.isStarted()?e.setVolume(n):d.volume=n},onAudioDeviceChange:async function(){const t=$(this).getValue();await b(c(t))},onChooseFile:function(){i.pushPage("breizbot.filechooser",{title:"Choose File",props:{filterExtension:"mp4"},onReturn:function(t){l.setData({url:t.url}),d.volume=l.model.videoGain}})}}});function c(t){return{audio:{deviceId:{exact:t}}}}e.on("availability",t=>{l.setData({isDisplayAvailable:t})}),e.on("ready",()=>{l.setData({isDisplayStarted:!0})}),e.on("close",()=>{l.setData({isDisplayStarted:!1})}),e.on("playing",()=>{l.setData({isPlaying:!0})}),e.on("paused",()=>{l.setData({isPlaying:!1})}),e.on("timeUpdate",t=>{l.setData({curTime:t})});const d=l.scope.video.get(0),r=new AudioContext,u=r.createGain();async function b(t){console.log("initNodes",t);try{a=await navigator.mediaDevices.getUserMedia(t);const n=r.createMediaStreamSource(a);r.createMediaStreamDestination();n.connect(u),u.connect(r.destination),l.setData({status:"OK"})}catch(t){l.setData({status:"KO"}),console.error(t)}}u.gain.value=l.model.micGain,this.dispose=function(){console.log("dispose"),a&&(a.getTracks().forEach(function(t){t.stop()}),a=null)},async function(){await async function(){const t=await $$.media.getAudioInputDevices();l.setData({audioDevices:t.map(t=>({value:t.id,label:t.label}))})}(),l.model.audioDevices.length>0&&await b(c(l.model.audioDevices[0].value))}()}});