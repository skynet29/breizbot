$$.control.registerControl("rootPage",{template:'<p>Select a file system</p>\n<ul class="w3-ul w3-border w3-white">\n\t<li class="w3-bar" bn-event="click: onHome">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-home fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Your home files</span>\n\t\t</div>\n\t</li>\n\n\t<li class="w3-bar" bn-event="click: onShare">\n\t\t<div class="w3-bar-item">\n\t\t\t<i class="fa fa-share-alt fa-2x fa-fw w3-text-blue"></i>\n\t\t\t<span>Files shared by your friends</span>\n\t\t</div>\n\t</li>\n</ul>\t',deps:["breizbot.pager","breizbot.files"],init:function(n,t,e){function i(n,i){t.pushPage("breizbot.files",{title:n,props:{filterExtension:"mp4",friendUser:i},events:{fileclick:function(n,o){console.log("fileclick",o);const{rootDir:a,fileName:l}=o,s=e.fileUrl(a+l,i);t.pushPage("VidoCtrl",{title:"Video",props:{url:s}})}}})}$$.viewController(n,{data:{},events:{onHome:function(){i("Home files","")},onShare:function(){t.pushPage("breizbot.friends",{title:"Shared files",props:{showConnectionState:!1},events:{friendclick:function(n,t){const{userName:e}=t;i(e,e)}}})}}})}}),$$.control.registerControl("VidoCtrl",{template:'<div class="top">\n\t<div class="video">\n\t\t<video bn-attr="{src: url}" controls="" controlsList=nodownload bn-bind="video"></video>\n\t</div>\n\t<div class="gain">\n\t\t<div class="gainItem">\n\t\t\t<label>Micro</label>\n\t\t\t<div bn-control="brainjs.slider" bn-data="{min: 0, max: 1, step:0.1, orientation: \'vertical\'}" bn-val="micGain" bn-event="input: onMicGainChange"></div>\n\t\t</div>\n\t\t<div class="gainItem">\n\t\t\t<label>Video</label>\n\t\t\t<div bn-control="brainjs.slider" bn-data="{min: 0, max: 1, step:0.1, orientation: \'vertical\'}" bn-val="videoGain" bn-event="input: onVideoGainChange"></div>\n\t\t</div>\n\t</div>\n</div>\n\n\n<canvas class="visualizer" bn-bind="canvas"></canvas>\n\n\n\n',deps:["breizbot.files"],props:{url:"#"},init:function(n,t){const{url:e}=this.props,i=$$.viewController(n,{data:{micGain:.5,videoGain:.5,url:e},events:{onMicGainChange:function(n,t){console.log("onMicGainChange",t),c.gain.value=t},onVideoGainChange:function(n,t){console.log("onVideoGainChange",t),r.volume=t}}});let o=null;const a=i.scope.canvas.get(0),l=a.getContext("2d"),s=new AudioContext,c=s.createGain();c.gain.value=i.model.micGain;const r=i.scope.video.get(0);i.setData({videoGain:r.volume});const d=s.createMediaElementSource(r);this.dispose=function(){console.log("dispose"),o&&(o.getTracks().forEach(function(n){n.stop()}),o=null)},async function(){o=await navigator.mediaDevices.getUserMedia({audio:!0});const n=s.createMediaStreamSource(o);n.connect(c);const t=s.createChannelSplitter();d.connect(t);const e=s.createChannelMerger();c.connect(e,0,0),c.connect(e,0,1),t.connect(e,0,0),t.connect(e,1,1),e.connect(s.destination),function(n){const t=s.createAnalyser();t.fftSize=2048;const e=t.frequencyBinCount,i=new Uint8Array(e);n.connect(t),function n(){const o=a.width,s=a.height;requestAnimationFrame(n),t.getByteTimeDomainData(i),l.fillStyle="rgb(200, 200, 200)",l.fillRect(0,0,o,s),l.lineWidth=2,l.strokeStyle="rgb(0, 0, 0)",l.beginPath();const c=o/e;let r=0;for(let n=0;n<e;n++){const t=i[n]/128,e=t*s/2;0==n?l.moveTo(r,e):l.lineTo(r,e),r+=c}l.lineTo(o,s/2),l.stroke()}()}(n)}()}});