$$.control.registerControl("rootPage",{deps:["breizbot.broker","breizbot.appData","breizbot.pager"],template:'<div bn-control="brainjs.map" \n\tstyle="height: 100%"\n\tbn-iface="map"\n\tclass="map" \n\tbn-data="{center, zoom, scale: true, coordinates: true}"\n\t></div>\t\n<div class="toolbar">\n\t<div class="location">\n\t\t<label>Geolocation</label>\n\t\t<div \n\t\t\tbn-control="brainjs.flipswitch"\n\t\t\tbn-event="flipswitchchange: onLocationChange"\n\t\t\tdata-width="100"\n\t\t\tdata-height="25"\n\t\t\t>\n\t\t\t\n\t\t</div>\t\t\n\t</div>\n\n\t<div bn-show="show1">\n\t\t<button class="w3-button w3-blue" bn-event="click: onSearch" title="Search city">\n\t\t\t<i class="fa fa-search-location"></i>\n\t\t</button>\t\t\n\t</div>\n\n</div>\n',init:function(t,n,e,o){const{zoom:a,center:i}=e.getData();console.log("center",i);const c=$$.viewController(t,{data:{center:i||{lat:48.39,lng:-4.486},zoom:a||13,watchID:null,show1:function(){return null==this.watchID}},events:{onSearch:function(){console.log("onSearch"),o.pushPage("searchPage",{title:"Search City",onReturn:function(t){console.log("onReturn",t);const n={lat:t.lat,lng:t.lon};try{c.scope.map.updateShape("marker",{latlng:n})}catch(t){c.scope.map.addShape("marker",{type:"marker",latlng:n})}c.scope.map.flyTo(n,13)}})},onLocationChange:function(t,n){if(console.log("onLocationChange",n),"ON"==n){navigator.geolocation.getCurrentPosition(l);const t=navigator.geolocation.watchPosition(l,s,{enableHighAccuracy:!0});c.setData({watchID:t})}else navigator.geolocation.clearWatch(c.model.watchID),c.setData({watchID:null}),c.scope.map.removeShape("location")}}});function s(){console.log("geolocation error")}function l(t){const n={lat:t.coords.latitude,lng:t.coords.longitude};console.log("updateLocation",n);try{c.scope.map.updateShape("location",{latlng:n})}catch(t){c.scope.map.addShape("location",{type:"marker",icon:{type:"font",className:"far fa-dot-circle",color:"red",fontSize:20},latlng:n})}c.scope.map.panTo(n)}n.register("homebox.map.updateShape.*",t=>{const n=t.topic.split(".").pop(),e=t.data;if(null!=e)try{c.scope.map.updateShape(n,e)}catch(t){c.scope.map.addShape(n,e)}else c.scope.map.removeShape(n)}),this.onAppExit=function(){console.log("[map] onAppExit");const{map:t}=c.scope;return e.saveData({zoom:t.getZoom(),center:t.getCenter()})}}}),$$.control.registerControl("searchPage",{template:'<form bn-event="submit: onSubmit" bn-show="show1">\n\t<div class="inputgroup">\n\t\t<label>Country:</label>\n\t\t<span \n\t\t\tbn-control="brainjs.selectmenu"\n\t\t\tbn-data="{items: countries}"\n\t\t\tbn-val="currentCountry"\n\t\t\tbn-update="selectmenuchange"\n\t\t></span>\t\t\t\n\t</div>\n\t<div bn-control="brainjs.inputgroup" class="inputgroup">\n\t\t<label>City</label>\n\t\t<input type="text" name="search" required="">\n\t</div>\n\t<div>\n\t\t<button class="w3-button w3-blue" type="submit">\n\t\t\t<i class="fa fa-search"></i>\n\t\t</button>\n\t</div>\n\n</form>\n\n<div>\n\t<strong bn-text="message"></strong>\n</div>\n\n<div bn-show="running">\n\t<i class="fa fa-spinner fa-pulse"></i> Running...\n</div>\n\n<div class="scrollPanel" bn-show="show2">\n\t<ul class="w3-ul w3-border w3-white" \n\t\tbn-event="click.w3-bar: onItemClick"\n\t\tbn-each="cities"\n\t\tbn-show="show3"\n\t\t>\n\t\t<li class="w3-bar">\n\n\t\t\t<div class="w3-bar-item">\n\t\t\t\t<span bn-text="$i.name"></span>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\t\n</div>\n\t',deps:["breizbot.cities","breizbot.pager"],init:function(t,n,e){const o=$$.viewController(t,{data:{countries:[],currentCountry:"",cities:[],message:"",running:!1,show1:function(){return this.countries.length>0},show2:function(){return this.countries.length>0&&this.cities.length>0},show3:function(){return this.cities.length>0}},events:{onSubmit:function(t){t.preventDefault(),console.log("onSubmit");const{search:e}=$(this).getFormData();o.setData({message:"",running:!0}),n.getCities(o.model.currentCountry,e).then(t=>{console.log("cities",t);const n=t.length;o.setData({running:!1,cities:t,message:0==n?"No result":`${n} match`})})},onItemClick:function(t){const n=$(this).index(),a=o.model.cities[n];console.log("onItemClick",a),e.popPage(a.coord)}}});n.getCountries().then(t=>{o.setData({countries:t,currentCountry:"FR"})})}});