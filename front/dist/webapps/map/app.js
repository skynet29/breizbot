$$.control.registerControl("rootPage",{deps:["breizbot.broker","breizbot.appData","breizbot.pager","breizbot.radar","breizbot.files","breizbot.http"],template:'<div class="toolbar">\n\t<div class="location">\n\t\t<label>Geolocation</label>\n\t\t<div \n\t\t\tbn-control="brainjs.flipswitch"\n\t\t\tbn-event="flipswitchchange: onLocationChange"\n\t\t\t>\n\t\t\t\n\t\t</div>\t\t\n\t</div>\n\n\t<div bn-style="{visibility: show1}">\n\t\t<button class="w3-button" bn-event="click: onSearch" title="Search city" bn-icon="fa fa-search-location">\n\t\t</button>\t\n\t\t<button class="w3-button" bn-event="click: onAddMarker" title="Add Marker" bn-icon="fa-solid fa-location-dot">\n\t\t</button>\t\n\t\t<button class="w3-button" bn-event="click: onImportKml" title="Import KML file" bn-icon="fa-solid fa-globe">\n\t\t</button>\t\t\t\n\t</div>\n\n</div>\n\n\n<div bn-control="brainjs.map" \n\tstyle="height: 100%"\n\tbn-iface="map"\n\tclass="map" \n\tbn-data="{\n\t\tcenter, \n\t\tzoom, \n\t\tscale: true, \n\t\tcoordinates: true,\n\t\tcontextMenu: {\n\t\t\taddMarker: {\n\t\t\t\tname: \'Add Marker\'\n\t\t\t}\n\t\t},\n\t\tlayers: {\n\t\t\tfriends: {label: \'Friends\', visible: true},\n\t\t\tmarkers: {label: \'Markers\', visible: true},\n\t\t\tradar: {label: \'Radar\', visible: false, cluster: true}\n\t\t}\n\t}"\n\tbn-event="mapcontextmenu: onMapContextMenu, mapshapecontextmenu: onShapeContextMenu"\n\t></div>\t\n',init:function(t,n,e,o,a,i,l){let{zoom:r,center:s,markers:c,layers:p}=e.getData();console.log("appData",e.getData()),c=c||{},p=p||{};const u=$$.viewController(t,{data:{center:s||{lat:48.39,lng:-4.486},zoom:r||13,watchID:null,show1:function(){return null==this.watchID?"visible":"hidden"}},events:{onShapeContextMenu:function(t,n){const{id:e,cmd:o}=n;if("remove"==o&&(d.removeShape(e),delete c[e]),"zoom"==o){const t=d.getShapeInfo(e);d.flyTo(t.latlng,13)}},onMapContextMenu:async function(t,n){const{latlng:e}=n,o=await $$.ui.showPrompt({title:"Add Marker",label:"Tooltip"});if(o){const t="ID"+Date.now();m(t,e,o),c[t]={latlng:e,tooltip:o}}},onAddMarker:function(){console.log("Add Marker"),$$.ui.showForm({title:"Add Marker",fields:{lat:{label:"Latitude: ",input:"input",attrs:{type:"number",step:"any"}},lng:{label:"Longitude: ",input:"input",attrs:{type:"number",step:"any"}},label:{label:"Label:",input:"input",attrs:{type:"text"}}}},t=>{console.log(t);const{lat:n,lng:e,label:o}=t,a={lat:n,lng:e},i="ID"+Date.now();m(i,a,o),c[i]={latlng:a,tooltip:o}})},onImportKml:function(){console.log("onInportKml"),i.openFile("Import KML",{filterExtension:"kml"},async t=>{console.log("data",t);try{const n=await l.post("/importKml",t);console.log("kml",n),o.pushPage("importKml",{title:"Import KML",props:{kml:n},onReturn:function({indexes:t,layerLabel:e}){console.log({indexes:t,layerLabel:e}),d.addLayer(e,{label:e,visible:!0,openPopupOnActivate:!0}),p[e]=[];for(const o of t){const{Point:t,name:a}=n[o],[i,l]=t.coordinates.split(",").map(t=>parseFloat(t));console.log({name:a,lng:i,lat:l}),m("ID"+Date.now(),{lat:l,lng:i},a,e),p[e].push({lat:l,lng:i,label:a})}f()}})}catch(t){console.log("Error",t),$$.ui.showAlert({title:"Error",content:t})}})},onSearch:function(){o.pushPage("searchPage",{title:"Search City",onReturn:function(t){const n={lat:t.lat,lng:t.lon};try{d.updateShape("marker",{latlng:n})}catch(t){d.addShape("marker",{type:"marker",latlng:n})}d.flyTo(n,13)}})},onLocationChange:function(t,n){if(n){navigator.geolocation.getCurrentPosition(g);const t=navigator.geolocation.watchPosition(g,h,{enableHighAccuracy:!0});u.setData({watchID:t})}else navigator.geolocation.clearWatch(u.model.watchID),u.setData({watchID:null}),d.removeShape("location")}}}),d=u.scope.map,b={"Radar fixe":i.assetsUrl("radar_fixe.png"),"Radar feu rouge":i.assetsUrl("radar_feu_rouge.png"),"Radar discriminant":i.assetsUrl("radar_discriminant.png"),"Radar Vitesse Moyenne":i.assetsUrl("radar_vitesse_moyenne.png")};function m(t,n,e,o){const a={type:"marker",layer:o||"markers",latlng:n,icon:{type:"font",className:"far fa-dot-circle",color:"green",fontSize:20},popup:{content:e,className:"myToolTip",closeButton:!1},contextMenu:{remove:{name:"Remove",iconCls:"fas fa-trash-alt w3-text-blue"},zoom:{name:"Zoom",iconCls:"fas fa-search-plus w3-text-blue"}}};d.addShape(t,a)}function h(){console.log("geolocation error")}function g(t){const n={lat:t.coords.latitude,lng:t.coords.longitude};try{d.updateShape("location",{latlng:n})}catch(t){d.addShape("location",{type:"marker",icon:{type:"font",className:"far fa-dot-circle",color:"red",fontSize:20},latlng:n})}d.panTo(n)}function f(){return e.saveData({zoom:d.getZoom(),center:d.getCenter(),markers:c,layers:p})}!async function(){for(const[t,n]of Object.entries(c))m(t,n.latlng,n.tooltip);for(const[t,n]of Object.entries(p)){d.addLayer(t,{label:t,visible:!1,openPopupOnActivate:!0});for(const{lat:e,lng:o,label:a}of n)m("ID_"+a.toUpperCase().replaceAll(" ","_"),{lat:e,lng:o},a,t)}const t=await a.getRadar();console.log({radars:t}),d.addGeoData(t,"radar",{pointToLayer:(t,n)=>{const e=b[t.properties.type];if(null!=e){const t={iconSize:[91,99],iconAnchor:[40,99],popupAnchor:[20,-85],iconUrl:e};return d.createMarkerIcon(n,t)}},onPopup:t=>{let n=[];t.properties.route&&n.push(t.properties.route),n.push(t.properties.type);const{speed:e}=t.properties;if("number"==typeof e){const t=i.assetsUrl(`vitesse-${e}.png`);n.push(`<img src="${t}" style="margin-top: 10px">`)}return`<b>${n.join("<br>")}</b>`}})}(),n.register("breizbot.friendPosition",t=>{if(t.hist)return;const n=t.data,e=new Date(t.time).toLocaleTimeString("fr-FR"),o="friends."+n.userName,a=n.userName+"<br>"+e;try{d.updateShape(o,{latlng:n.coords,popupContent:a})}catch(t){d.addShape(o,{type:"marker",layer:"friends",latlng:n.coords,icon:{type:"font",className:"far fa-user",color:"blue",fontSize:20},popup:{content:a,className:"myToolTip",closeButton:!1}})}}),n.register("homebox.map.updateShape.*",t=>{const n=t.topic.split(".").pop(),e=t.data;if(null!=e)try{d.updateShape(n,e)}catch(t){d.addShape(n,e)}else d.removeShape(n)}),this.onAppExit=function(){return f()}}}),$$.control.registerControl("searchPage",{template:'<form bn-event="submit: onSubmit" bn-show="show1">\n\t<div class="inputgroup">\n\t\t<label>Country:</label>\n\t\t<span \n\t\t\tbn-control="brainjs.combobox"\n\t\t\tbn-data="{items: countries}"\n\t\t\tbn-val="currentCountry"\n\t\t\tbn-update="comboboxchange"\n\t\t></span>\t\t\t\n\t</div>\n\t<div bn-control="brainjs.inputgroup" class="inputgroup">\n\t\t<label>City</label>\n\t\t<input type="text" name="search" required="">\n\t</div>\n\t<div>\n\t\t<button class="w3-button w3-blue" type="submit">\n\t\t\t<i class="fa fa-search"></i>\n\t\t</button>\n\t</div>\n\n</form>\n\n<div>\n\t<strong bn-text="message"></strong>\n</div>\n\n<div bn-show="running">\n\t<i class="fa fa-spinner fa-pulse"></i> Running...\n</div>\n\n<div class="scrollPanel" bn-show="show2">\n\t<ul class="w3-ul w3-border w3-white" \n\t\tbn-event="click.w3-bar: onItemClick"\n\t\tbn-each="cities"\n\t\tbn-show="show3"\n\t\t>\n\t\t<li class="w3-bar">\n\n\t\t\t<div class="w3-bar-item">\n\t\t\t\t<span bn-text="$scope.$i.name"></span>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\t\n</div>\n\t',deps:["breizbot.cities","breizbot.pager"],init:function(t,n,e){const o=$$.viewController(t,{data:{countries:[],currentCountry:"",cities:[],message:"",running:!1,show1:function(){return this.countries.length>0},show2:function(){return this.countries.length>0&&this.cities.length>0},show3:function(){return this.cities.length>0}},events:{onSubmit:async function(t){t.preventDefault(),console.log("onSubmit");const{search:e}=$(this).getFormData();o.setData({message:"",running:!0});const a=await n.getCities(o.model.currentCountry,e);console.log("cities",a);const i=a.length;o.setData({running:!1,cities:a,message:0==i?"No result":`${i} match`})},onItemClick:function(t){const n=$(this).index(),a=o.model.cities[n];console.log("onItemClick",a),e.popPage(a.coord)}}});!async function(){const t=await n.getCountries();o.setData({countries:t,currentCountry:"FR"})}()}}),$$.control.registerControl("importKml",{template:'<form bn-event="submit: onSubmit">\n    <label>Layer Name</label>\n    <input type="text" name="text" required>\n    <input type="submit"  value="Submit" hidden bn-bind="submit"> \n</form>\n<div class="scrollPanel">\n    <table class="w3-table-all w3-small">\n        <thead>\n            <tr>\n                <th>\n                    <input type="checkbox" checked bn-event="click: onSelectChange">\n                </th>\n                <th>Name</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody bn-each="kml">\n            <tr>\n                <td>\n                    <input type="checkbox" checked class="check">\n                </td>\n                <td bn-text="$scope.$i.name"></td>\n                <td bn-text="$scope.$i.description"></td>\n\n            </tr>\n        </tbody>\n    </table>\n</div>\n',deps:["breizbot.pager"],props:{kml:null},init:function(t,n){const{kml:e}=this.props,o=$$.viewController(t,{data:{kml:e},events:{onSelectChange:function(){const n=$(this).prop("checked");console.log("onSelectChange",n),t.find(".check").prop("checked",n)},onSubmit:function(e){e.preventDefault();const o=$(this).getFormData();console.log("onSubmit",o);const a=[];t.find(".check").each(function(t){$(this).prop("checked")&&a.push(t)}),n.popPage({indexes:a,layerLabel:o.text})}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){o.scope.submit.click()}}}}}});