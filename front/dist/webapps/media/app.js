$$.control.registerControl("rootPage",{template:'<div bn-control="app.media" \n\tstyle="height: 100%"\n\tbn-event="fileclick: onFileClick"\n\tbn-iface="files"\n\t></div>',deps:["app.media","breizbot.pager"],init:function(t,e,n){const o=$$.viewController(t,{data:{},events:{onFileClick:function(t,i){const{fileName:r,rootDir:s,driveName:l}=i,a=s+r,d=e.fileUrl(l,a);(r.endsWith(".ogg")||r.endsWith(".mp3"))&&n.pushPage("soundPage",{title:r,props:{url:d},onReturn:function(t){"reload"===t&&o.scope.files.update()}}),r.endsWith(".mp4")&&n.pushPage("videoPage",{title:r,props:{url:d},onReturn:function(t){"reload"===t&&o.scope.files.update()}})}}})}}),$$.control.registerControl("soundPage",{template:'<div>\n\t<audio bn-attr="{src: url}" controls="" controlsList=nodownload bn-bind="audio"></audio>\n</div>',props:{url:""},init:function(t){const{url:e}=this.props,n=$$.viewController(t,{data:{url:e}});this.dispose=function(){n.scope.audio.get(0).pause(),n.scope.audio.removeAttr("src")}}}),$$.control.registerControl("videoPage",{template:'<div>\n\t<video bn-attr="{src: url}" controls="" controlsList=nodownload bn-bind="video"></video>\n</div>',props:{url:""},init:function(t){const{url:e}=this.props,n=$$.viewController(t,{data:{url:e}});this.dispose=function(){n.scope.video.get(0).pause(),n.scope.video.removeAttr("src")}}}),$$.service.registerService("app.media",{deps:["breizbot.http"],init:function(t,e){return{drive:function(){return e.get("/drive")},list:function(t,n){return e.post("/list",{driveName:t,destPath:n})},fileUrl:function(t,e){return $$.util.getUrlParams("/api/app/media/load",{driveName:t,fileName:e})}}},$iface:"\n\t\tdrive():Promise;\n\t\tlist(driveName, destPath):Promise\t\t\n\t"}),$$.control.registerControl("app.media",{deps:["app.media","breizbot.broker"],template:'<div class="contentPanel">\n\n\t<div class="toolbar" bn-show="hasDrive">\n\n\t\t<div \n\t\t\tbn-control="brainjs.combobox"\n\t\t\tbn-data="{items: drives}"\n\n\t\t></div>\n\t\t\n\t</div>\n\n\t<div>\n\t\t<span bn-text="errorMsg" class="w3-text-red"></span>\n\t</div>\n\n\t<div class="pathPanel" bn-show=hasDrive">\n\t\tPath:&nbsp;<span bn-text="rootDir"></span>\n\t</div>\n\n\t<div class="scrollPanel">\n\n\t\t<div bn-each="files" \n\t\t\tbn-iter="f" \n\t\t\tclass="container"\n\t\t\tbn-bind="files" \n\t\t\tbn-event="click.folder: onFolderClick, click.file: onFileClick">\n\t\t\t\n\t\t\t<div class="thumbnail w3-btn">\t\n\t\t\t\t\t<div bn-if="$scope.f.folder" class="folder">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<i class="fa fa-4x fa-folder-open w3-text-blue-grey"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<span bn-text="$scope.f.name"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div bn-if="!$scope.f.folder" bn-attr="{title: getTitle}" class="file">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<i bn-attr="{class: getClass}"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<span bn-text="getShortName"></span>\n\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>',init:function(t,e,n){const o=$$.viewController(t,{data:{rootDir:"/",files:[],drives:[],errorMsg:"Media service is not running",currentDrive:"",showNoDevicesConnected:function(){return""==this.errorMsg&&!this.hasDrive()},hasDrive:function(){return this.drives.length>0},getSize:function(t){let e="Ko";return(t/=1024)>1024&&(e="Mo",t/=1024),"Size : "+Math.floor(t)+" "+e},getClass:function(t){const{name:e}=t.f;return`fa fa-4x w3-text-blue-grey ${this.getIconClass(e)}`},getTitle:function(t){const{name:e,size:n}=t.f;return e+"\n"+this.getSize(n)},getShortName:function(t){return t.f.name.slice(0,20)},getIconClass:function(t){return t.endsWith(".pdf")?"fa-file-pdf":t.endsWith(".doc")?"fa-file-word":t.endsWith(".ogg")||t.endsWith(".mp3")?"fa-file-audio":t.endsWith(".mp4")?"fa-file-video":"fa-file"}},events:{onFileClick:function(e){const n=$(this).closest(".thumbnail").index();console.log("idx",n);const i=o.model.files[n];console.log("onFileClick",i);const r={driveName:o.model.currentDrive,fileName:i.name,rootDir:o.model.rootDir};t.trigger("fileclick",r)},onFolderClick:function(t){const e=$(this).closest(".thumbnail").index();console.log("idx",e);const n=o.model.files[e];console.log("onFolderClick",n);const r=n.name;if(".."==r){const t=o.model.rootDir.split("/");t.pop(),t.pop(),i(t.join("/")+"/")}else i(o.model.rootDir+r+"/")}}});function i(t){null==t&&(t=o.model.rootDir),e.list(o.model.currentDrive,t).then(function(e){console.log("files",e),e.sort((t,e)=>t.folder&&!e.folder?-1:!t.folder&&e.folder?1:t.name>e.name),"/"!=t&&e.unshift({name:"..",folder:!0}),o.setData({files:e,rootDir:t})})}n.register("homebox.launcher.status",async t=>{console.log("launcherStatus",t.data.media);const{media:n}=t.data;n&&("run"==n.state?(await $$.util.wait(1e3),console.log("loadDrives"),e.drive().then(function(t){if(console.log("drives",t),0==t.length)return void o.setData({drives:[],errorMsg:"No USB drive connected to your homebox"});const e=t[0];o.setData({drives:t,currentDrive:e,errorMsg:""}),i()}).catch(t=>{o.setData({errorMsg:t.responseText})})):o.setData({errorMsg:"Media service is not running",drives:[]}))}),n.register("breizbot.homebox.status",t=>{console.log("breizbot.homebox.status",t.data);const{connected:e}=t.data;e||o.setData({errorMsg:"Homebox is not connected",drives:[]})})},$iface:"update()",$events:"fileclick"});