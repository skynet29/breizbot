$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n    <div>Accounts</div>\n\t<button \n\t\tclass="w3-button" \n\t\ttitle="Add Account"\n        bn-event="click: onAddAccount"\n        bn-icon="fa fa-plus"\n\n\t></button>\t\n</div>\n\n<p bn-show="!hasAccounts">You have no account</p>\n<div class="scrollPanel">\n\t<ul class="w3-ul w3-border w3-white" \n        bn-each="accounts"\n        bn-event="contextmenuchange.w3-bar: onContextMenu, click.w3-bar: onItemClick"\n\t\tbn-show="hasAccounts"\n\t\t>\n\t\t<li class="w3-bar" bn-control="brainjs.contextmenu" bn-data="{items: contextMenu}">\n\n\n\t\t\t<div class="w3-bar-item">\n\t\t\t\t<div class="info">\n\t\t\t\t\t<strong bn-text="$scope.$i.name"></strong><br>\n\t\t\t\t\t<span class="w3-right" bn-text="formatAmount"></span>\t\n\t\t\t\t</div>\n\t\t\t\t<div class="synthesis">\n\t\t\t\t\t<div class="w3-text-grey">Current Month Synthesis</div>\n\t\t\t\t\t<div class="w3-text-green">\n\t\t\t\t\t\t<label>Income</label>\n\t\t\t\t\t\t<span bn-text="formatIncome"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="w3-text-red">\n\t\t\t\t\t\t<label>Expenses</label>\n\t\t\t\t\t\t<span bn-text="formatExpenses"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>Difference</label>\n\t\t\t\t\t\t<span bn-text="getDifference"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\t\t\n\n</div>',deps:["breizbot.pager","breizbot.http"],init:function(t,n,e){const a=$$.viewController(t,{data:{accounts:[],formatAmount:function(t){return t.$i.finalBalance.toFixed(2)},hasAccounts:function(){return this.accounts.length>0},contextMenu:function(){return{edit:{name:"Edit",icon:"fas fa-edit"},delete:{name:"Delete",icon:"fas fa-trash-alt"}}},getDifference:function(t){const{income:n,expenses:e}=t.$i.synthesis;return(n-e).toFixed(2)},formatIncome:function(t){return t.$i.synthesis.income.toFixed(2)},formatExpenses:function(t){return t.$i.synthesis.expenses.toFixed(2)}},events:{onAddAccount:function(){console.log("onAddAccount"),n.pushPage("addAccount",{title:"Add Account",onReturn:async function(t){await e.post("/account",t),o()}})},onContextMenu:function(t,i){const c=$(this).index(),s=a.model.accounts[c],r=s._id.toString(),{cmd:l}=i;"delete"==l?$$.ui.showConfirm({title:"Delete Account",content:"Are you sure ?"},async()=>{await e.delete(`/account/${r}`),o()}):"edit"==l&&n.pushPage("addAccount",{title:"Edit Account",props:{formData:s},onReturn:async function(t){const n=$.extend(s,t);delete n._id,await e.put(`/account/${r}`,n),o()}})},onItemClick:function(t){const e=$(this).index(),i=a.model.accounts[e];n.pushPage("transactions",{title:`${i.name} Transactions`,props:{accountId:i._id.toString()},onBack:function(){o()}})}}});async function o(){const t=await e.get("/account");a.setData({accounts:t})}o()}}),$$.control.registerControl("addAccount",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="formData">\n        <label>Account Name</label>\n        <input type="text" name="name" required>\n    \n        <label>Currency</label>\n        <div bn-control="brainjs.combobox" bn-data="{\n            items: [\'euro\', \'dollar\']\n        }" name="currency"></div>\n    \n        <label>Initial Balance</label>\n        <input type="number" required name="initialBalance" step="0.01">\n\n        <label>Held at</label>\n        <input type="text" name="heldAt">\n        \n    \n    \n        <input type="submit" bn-bind="submit" hidden>\n    </form>\n</div>\n',deps:["breizbot.pager"],props:{formData:{currency:"euro"}},init:function(t,n){const{formData:e}=this.props,a=$$.viewController(t,{data:{formData:e},events:{onSubmit:function(t){t.preventDefault();const e=$(this).getFormData();n.popPage(e)}}});this.getButtons=function(){return{apply:{icon:"fa fa-check",title:"Apply",onClick:function(){a.scope.submit.click()}}}}}}),$$.control.registerControl("addTransaction",{template:'<div>\n    <form bn-form="formData" bn-event="submit: onSubmit">\n\n        <div class="group">\n            <label>Date</label>\n            <div>\n                \x3c!-- <i class="fa fa-calendar-alt"></i>             --\x3e\n                <input bn-control="brainjs.datepicker" name="date">    \n            </div>\n    \n        </div>\n\n        <div class="group">\n            <label>Transaction Type</label>\n            <div bn-control="brainjs.radiogroup" name="type">\n                <div bn-control="brainjs.inputgroup">\n                    <input type="radio" value="debit"><label>Debit</label>\n                </div>\n                <div bn-control="brainjs.inputgroup">\n                    <input type="radio" value="credit"><label>Credit</label>\n                </div>\n            </div>    \n        </div>\n\n        <div class="group">\n            <label>Amount</label>\n            <div>\n                \x3c!-- <i class="fa fa-calculator"></i> --\x3e\n                <input type="number" required name="amount" step=0.01>\n            </div>\n        </div>\n\n        <div class="group">\n            <label>Payee</label>\n            <div>\n                \x3c!-- <i class="fa fa-user-friends"></i> --\x3e\n                <input type="text" required name="payee" bn-control="brainjs.autocomplete" bn-data="{source: payees}">\n            </div>\n        </div>\n\n        <div class="group">\n            <label>Category</label>\n            <div>\n                <input type="text" required name="category" bn-control="brainjs.autocomplete" bn-data="{source: categories}" bn-event="autocompleteselect: onCategoryChange">\n            </div>\n        </div>\n\n        <div class="group">\n            <label>Subcategory</label>\n            <div>\n                <input type="text" name="subcategory" bn-control="brainjs.autocomplete" bn-data="{source: subcategories}">\n            </div>\n        </div>\n\n        <div class="group">\n            <label>Note</label>\n            <div>\n                \x3c!-- <i class="fa fa-clipboard"></i> --\x3e\n                <input type="text" name="memo">\n            </div>\n        </div>\n\n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>',deps:["breizbot.pager","breizbot.http"],props:{accountId:null,formData:{type:"debit"}},init:function(t,n,e){const{accountId:a,formData:o}=this.props,i=$$.viewController(t,{data:{formData:o,categories:[],payees:[],subcategories:[]},events:{onSubmit:function(t){t.preventDefault();const e=$(this).getFormData();n.popPage(e)},onCategoryChange:async function(t,n){const o=await e.get(`/account/${a}/subcategories`,{category:n.item.value});i.setData({subcategories:o})}}});!async function(){const t=await e.get(`/account/${a}/categories`),n=await e.get(`/account/${a}/payees`);i.setData({payees:n,categories:t})}(),this.getButtons=function(){return{apply:{title:"Appply",icon:"fa fa-check",onClick:function(){i.scope.submit.click()}}}}}}),$$.control.registerControl("transactions",{template:'<div class="scrollPanelTable">\n\t<table class="w3-table-all w3-hoverable w3-small">\n\t\t<thead>\n\t\t\t<tr>\n                <th>Payee</th>\n                <th>Category</th>\n                <th>Date</th>\n                <th>Amount</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody bn-each="transactions" bn-lazzy="getItems" bn-bind="transactions" bn-event="contextmenuchange.item: onItemContextMenu">\n\t\t\t<tr class="item" bn-control="brainjs.contextmenu" bn-data="{items: {\n\t\t\t\tdel: {\n\t\t\t\t\tname: \'Delete\',\n\t\t\t\t\ticon: \'fas fa-trash-alt\'\n\t\t\t\t},\n\t\t\t\tedit: {\n\t\t\t\t\tname: \'Edit\',\n\t\t\t\t\ticon: \'fas fa-edit\'\n\t\t\t\t}\n\t\t\t}}">\n                <td bn-text="formatPayee"></td>\n                <td>\n\t\t\t\t\t<span bn-text="formatCategory"></span><br>\n\t\t\t\t\t<span bn-text="$scope.$i.subcategory"></span>\n\t\t\t\t</td>\n\t\t\t\t<td bn-text="formatDate" class="date"></td>\n\t\t\t\t<td bn-text="formatAmount" class="amount" bn-style="{color: getAmountColor}"></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>',deps:["breizbot.pager","breizbot.http"],props:{accountId:null},init:function(t,n,e){const{accountId:a}=this.props,o=$$.viewController(t,{data:{transactions:[],formatAmount:function(t){return t.$i.amount.toFixed(2)},formatDate:function(t){return new Date(t.$i.date).toLocaleDateString()},getItems:async function(t){return c(t)},getAmountColor:function(t){return t.$i.amount<0?"red":"black"},formatPayee:function(t){const{category:n,payee:e}=t.$i;return n.startsWith("[")?n.substring(1,n.length-1):e},formatCategory:function(t){const{category:n}=t.$i;return n.startsWith("[")?"virement":n}},events:{onItemContextMenu:function(t,c){const s=$(this).index(),{cmd:r}=c,l=o.model.transactions[s];if("del"==r)$$.ui.showConfirm({title:"Delete Transaction",content:"Are you sure ?"},async()=>{await e.delete("/transaction/",l),o.removeArrayItem("transactions",s,"transactions")});else if("edit"==r){l.amount<0?(l.type="debit",l.amount*=-1):l.type="credit";const t=l._id.toString();n.pushPage("addTransaction",{title:"Edit Transaction",props:{formData:l},onReturn:async function(n){i(n),await e.put(`/account/${a}/transaction/${t}`,n),o.updateArrayItem("transactions",s,n,"transactions")}})}}}});function i(t){let{date:n}=t;n=`${n.getFullYear()}-${n.getMonth()+1}-${n.getDate()}T00:00:00`,t.date=n,"debit"==t.type&&(t.amount*=-1),delete t.type}async function c(t){t=t||0;const n=await e.get(`/account/${a}/transactions?offset=${t}`);if(0!=t)return o.model.transactions=o.model.transactions.concat(n),n;o.setData({transactions:n})}c(),this.getButtons=function(){return{import:{title:"import from QIF file",icon:"fa fa-download",onClick:function(){console.log("Import"),n.pushPage("breizbot.files",{title:"Import QIF file",props:{filterExtension:"qif"},events:{fileclick:function(t,e){n.popPage(e)}},onReturn:async function(t){console.log("onReturn",t);const n=t.rootDir+t.fileName;await e.post(`/account/${a}/importTransactions`,{fileName:n}),c()}})}},add:{title:"Add Transaction",icon:"fa fa-plus",onClick:function(){n.pushPage("addTransaction",{title:"Add Transaction",props:{accountId:a},onReturn:async function(t){i(t),console.log("onReturn",t),await e.post(`/account/${a}/addTransaction`,t),o.insertArrayItemAfter("transactions",0,t,"transactions")}})}}}}}});