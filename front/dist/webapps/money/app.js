$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n    <div>Accounts</div>\n\t<button \n\t\tclass="w3-button" \n\t\ttitle="Add Account"\n        bn-event="click: onAddAccount"\n        bn-icon="fa fa-plus"\n\n\t></button>\t\n</div>\n\n<p bn-show="!hasAccounts">You have no account</p>\n<div class="scrollPanel">\n\t<ul class="w3-ul w3-border w3-white" \n        bn-each="accounts"\n        bn-event="contextmenuchange.w3-bar: onContextMenu, click.w3-bar: onItemClick"\n\t\tbn-show="hasAccounts"\n\t\t>\n\t\t<li class="w3-bar" bn-control="brainjs.contextmenu" bn-data="{items: contextMenu}">\n\n\n\t\t\t<div class="w3-bar-item" >\n\t\t\t\t<strong bn-text="$scope.$i.name"></strong><br>\n                <span class="w3-right" bn-text="formatAmount"></span>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\t\t\n\n</div>',deps:["breizbot.pager","breizbot.http"],init:function(t,n,e){const o=$$.viewController(t,{data:{accounts:[],formatAmount:function(t){return t.$i.finalBalance.toFixed(2)},hasAccounts:function(){return this.accounts.length>0},contextMenu:function(){return{edit:{name:"Edit",icon:"fas fa-edit"},delete:{name:"Delete",icon:"fas fa-trash-alt"}}}},events:{onAddAccount:function(){console.log("onAddAccount"),n.pushPage("addAccount",{title:"Add Account",onReturn:async function(t){await e.post("/account",t),a()}})},onContextMenu:function(t,n){const c=$(this).index(),i=o.model.accounts[c]._id.toString(),{cmd:r}=n;"delete"==r&&$$.ui.showConfirm({title:"Delete Account",content:"Are you sure ?"},async()=>{await e.delete(`/account/${i}`),a()})},onItemClick:function(t){const e=$(this).index(),a=o.model.accounts[e];n.pushPage("transactions",{title:`${a.name} Transactions`,props:{accountId:a._id.toString()}})}}});async function a(){const t=await e.get("/account");o.setData({accounts:t})}a()}}),$$.control.registerControl("addAccount",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="formData">\n        <label>Account Name</label>\n        <input type="text" name="name" required>\n    \n        <label>Currency</label>\n        <div bn-control="brainjs.combobox" bn-data="{\n            items: [\'euro\', \'dollar\']\n        }" name="currency"></div>\n    \n        <label>Initial Balance</label>\n        <input type="number" required name="initialBalance">\n\n        <label>Held at</label>\n        <input type="text" name="heldAt">\n        \n    \n    \n        <input type="submit" bn-bind="submit" hidden>\n    </form>\n</div>\n',deps:["breizbot.pager"],init:function(t,n){const e=$$.viewController(t,{data:{formData:{currency:"euro"}},events:{onSubmit:function(t){t.preventDefault();const e=$(this).getFormData();n.popPage(e)}}});this.getButtons=function(){return{apply:{icon:"fa fa-check",title:"Apply",onClick:function(){e.scope.submit.click()}}}}}}),$$.control.registerControl("transactions",{template:'<div class="scrollPanelTable">\n\t<table class="w3-table-all w3-hoverable w3-small">\n\t\t<thead>\n\t\t\t<tr>\n                <th>Payee</th>\n                <th>Category</th>\n                <th>Date</th>\n                <th>Amount</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody bn-each="transactions" bn-lazzy="getItems">\n\t\t\t<tr>\n                <td bn-text="$scope.$i.payee"></td>\n                <td bn-text="$scope.$i.category"></td>\n\t\t\t\t<td bn-text="formatDate" class="date"></td>\n\t\t\t\t<td bn-text="formatAmount" class="amount" bn-style="{color: getAmountColor}"></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>',deps:["breizbot.pager","breizbot.http"],props:{accountId:null},init:function(t,n,e){const{accountId:o}=this.props,a=$$.viewController(t,{data:{transactions:[],formatAmount:function(t){return t.$i.amount.toFixed(2)},formatDate:function(t){return new Date(t.$i.date).toLocaleDateString()},getItems:async function(t){return c(t)},getAmountColor:function(t){return t.$i.amount<0?"red":"black"}}});async function c(t){t=t||0;const n=await e.get(`/account/${o}/transactions?offset=${t}`);if(0!=t)return n;a.setData({transactions:n})}c(),this.getButtons=function(){return{import:{title:"import from QIF file",icon:"fa fa-download",onClick:function(){console.log("Import"),n.pushPage("breizbot.files",{title:"Import QIF file",props:{filterExtension:"qif",selectionEnabled:!0},events:{fileclick:function(t,e){n.popPage(e)}},onReturn:async function(t){console.log("onReturn",t);const n=t.rootDir+t.fileName;await e.post(`/account/${o}/importTransactions`,{fileName:n}),c()}})}}}}}});