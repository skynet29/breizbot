$$.control.registerControl("addMovie",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="data">\n        <label>Title</label>\n        <input type="text" required name="title">\n\n        <label>Year</label>\n        <input type="number" required name="year">\n\n        <label>Style</label>\n        <input type="text" name="style" bn-control="brainjs.autocomplete" bn-data="{source: styles}">\n\n        <label>Actor #1</label>\n        <input type="text" name="actor1" bn-control="brainjs.autocomplete" bn-data="{source: actors}">\n\n        <label>Actor #2</label>\n        <input type="text" name="actor2" bn-control="brainjs.autocomplete" bn-data="{source: actors}">\n\n        <label>Director</label>\n        <input type="text" name="director" bn-control="brainjs.autocomplete" bn-data="{source: directors}">\n        \n        <label>Franchise</label>\n        <input type="text" name="franchise" bn-control="brainjs.autocomplete" bn-data="{source: franchises}">\n\n        <label>Synopsis</label><br>\n        <textarea name="synopsis" rows="5"></textarea>\n\n\n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>\n',deps:["breizbot.pager","breizbot.http"],props:{data:{}},init:function(t,e,n){const{data:o}=this.props,i=$$.viewController(t,{data:{data:o,styles:[],franchises:[],actors:[],directors:[]},events:{onSubmit:function(t){t.preventDefault(),e.popPage($(this).getFormData())}}});!async function(){const t=await n.get("/getInfos"),{styles:e,franchises:o,actors:s,directors:a}=t;i.setData({styles:e,franchises:o,actors:s,directors:a})}(),this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){i.scope.submit.click()}}}}}}),$$.control.registerControl("filter",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="filters">\n        <label>Style</label>\n        <div bn-control="brainjs.combobox" bn-data="{items: styles}" name="style"></div>    \n\n        <label>Franchise</label>\n        <div bn-control="brainjs.combobox" bn-data="{items: franchises}" name="franchise"></div>    \n        \n        <label>Actor</label>\n        <div bn-control="brainjs.combobox" bn-data="{items: actors}" name="actor"></div>    \n\n        <label>Director</label>\n        <div bn-control="brainjs.combobox" bn-data="{items: directors}" name="director"></div>    \n\n        <label>Year</label>\n        \n        <div class="year"><input type="number" name="year" min="1950"></div>\n        \n        <button class="w3-btn w3-blue" type="button" bn-event="click: onReset">Reset</button>\n\n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>\n',deps:["breizbot.pager","breizbot.http"],props:{filters:null},init:function(t,e,n){let o=$.extend({author:"All"},this.props.filters);const i=$$.viewController(t,{data:{filters:{},styles:[],franchises:[],actors:[],directors:[]},events:{onSubmit:function(t){t.preventDefault(),e.popPage($(this).getFormData())},onReset:function(){o={author:"All",style:"All",director:"All",franchise:"All",year:""},i.setData({filters:o},!0)}}});!async function(){const t=await n.get("/getInfos"),{styles:e,franchises:s,actors:a,directors:l}=t;e.unshift({value:"All",label:"All",style:"font-weight: bold;"}),s.unshift({value:"All",label:"All",style:"font-weight: bold;"}),a.unshift({value:"All",label:"All",style:"font-weight: bold;"}),l.unshift({value:"All",label:"All",style:"font-weight: bold;"}),i.setData({styles:e,franchises:s,actors:a,directors:l}),i.setData({filters:o})}(),this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){i.scope.submit.click()}}}}}}),$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n    <div class="left">\n        <button class="w3-button" title="Import from JSON file" bn-event="click: onImport" bn-icon="fas fa-download">\n        </button>\n\n        <button class="w3-button" title="Add Movie" bn-event="click: onAddMovie" bn-icon="fas fa-plus">\n        </button>\n\n        <button class="w3-button" title="Filter" bn-event="click: onFilter" bn-icon="fas fa-filter">\n        </button>\n\n        \n    </div>\n\n    <div class="right">\n        <span bn-text="getMoviesQty" bn-bind="moviesQty"></span>\n    </div>\n\n\n</div>\n\n<div class="scrollBar">\n    <table class="w3-table-all w3-hoverable w3-small">\n        <thead>\n            <tr>\n                <th>Title</th>\n                <th>Year</th>\n                <th>Style</th>\n                <th>Actors</th>\n                <th>Director</th>\n                <th>Franchise</th>\n            </tr>\n        </thead>\n            <tbody bn-each="movies" bn-lazzy="getMovies" bn-event="contextmenuchange.item: onItemContextMenu, click.item: onDetails" bn-bind="movies">\n                <tr class="item" bn-control="brainjs.contextmenu" bn-data="{items: {\n                    del: {\n                        name: \'Delete\',\n                        icon: \'fas fa-trash-alt\'\n                    },\n                    edit: {\n                        name: \'Edit\',\n                        icon: \'fas fa-edit\'\n                    }\n                }}">\n    \n                <td bn-text="$scope.$i.title"></td>\n                <td bn-text="$scope.$i.year"></td>\n                <td bn-text="$scope.$i.style"></td>\n                <td>\n\t\t\t\t\t<span bn-text="$scope.$i.actor1"></span><br>\n\t\t\t\t\t<span bn-text="$scope.$i.actor2"></span>\n                </td>\n                <td bn-text="$scope.$i.director"></td>\n                <td bn-text="$scope.$i.franchise"></td>\n            </tr>\n\n        </tbody>\n    </table>\n</div>',deps:["breizbot.pager","breizbot.http"],props:{},init:function(t,e,n){let o={};const i=$$.viewController(t,{data:{moviesQty:0,movies:[],getMovies:async function(t){return s(t)},getMoviesQty:function(){return this.moviesQty>0?`${this.moviesQty} movies`:""}},events:{onDetails:function(){const t=$(this).index(),n=i.model.movies[t];console.log("onDetails",n),e.pushPage("showDetails",{title:n.title,props:{data:n}})},onAddMovie:function(){e.pushPage("addMovie",{title:"Add Movie",onReturn:async function(t){console.log("onReturn",t),await n.post("/addMovie",t),s()}})},onItemContextMenu:function(t,o){const s=$(this).index(),{cmd:a}=o,l=i.model.movies[s],r=l._id.toString();"del"==a?$$.ui.showConfirm({title:"Delete Movie",content:"Are you sure ?"},async()=>{await n.post(`/deleteMovie/${r}`),i.removeArrayItem("movies",s,"movies"),i.model.moviesQty--,i.updateNode("moviesQty")}):"edit"==a&&e.pushPage("addMovie",{title:"Edit Movie",props:{data:l},onReturn:async function(t){const e=await n.post(`/updateMovie/${r}`,t);i.updateArrayItem("movies",s,e,"movies")}})},onImport:function(){e.pushPage("breizbot.files",{title:"Import Movies",props:{selectionEnabled:!0,filterExtension:"json"},events:{fileclick:function(t,n){e.popPage(n)}},onReturn:async function(t){console.log("onReturn",t),await n.post("/importFile",{filePath:t.rootDir+t.fileName}),s()}})},onFilter:function(){e.pushPage("filter",{title:"Set Filter",props:{filters:o},onReturn:async function(t){Object.keys(t).forEach(e=>{("All"==t[e]||"year"==e&&isNaN(t[e]))&&delete t[e]}),o=t,s()}})}}});async function s(t){t=t||0;const e=await n.post("/getMovies",{offset:t,filters:o});if(0!=t)return i.model.movies=i.model.movies.concat(e),e;{const{moviesQty:t}=await n.post("/moviesQty",{filters:o});i.setData({movies:e,moviesQty:t})}}s()}}),$$.control.registerControl("showDetails",{template:'<div bn-html="getSynopsis" class="description"></div>',props:{data:{}},init:function(t){const{data:e}=this.props;$$.viewController(t,{data:{getSynopsis:function(){return e.synopsis?e.synopsis.replace(/\n/g,"<br><br>"):""}},events:{}})}});