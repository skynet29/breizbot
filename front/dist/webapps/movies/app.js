$$.control.registerControl("addMovie",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="data">\n        <label>Title</label>\n        <input type="text" required name="title">\n\n        <label>Year</label>\n        <input type="number" required name="year">\n\n        <label>Style</label>\n        <input type="text" name="style" bn-control="brainjs.autocomplete" bn-data="{source: styles}">\n\n        <label>Actor #1</label>\n        <input type="text" name="actor1" bn-control="brainjs.autocomplete" bn-data="{source: actors}">\n\n        <label>Actor #2</label>\n        <input type="text" name="actor2" bn-control="brainjs.autocomplete" bn-data="{source: actors}">\n\n        <label>Director</label>\n        <input type="text" name="director" bn-control="brainjs.autocomplete" bn-data="{source: directors}">\n        \n        <label>Franchise</label>\n        <input type="text" name="franchise" bn-control="brainjs.autocomplete" bn-data="{source: franchises}">\n\n        <label>Synopsis</label><br>\n        <textarea name="synopsis" rows="5"></textarea>\n\n\n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>\n',deps:["breizbot.pager","breizbot.http"],props:{data:{}},init:function(t,e,n){const{data:o}=this.props,i=$$.viewController(t,{data:{data:o,styles:[],franchises:[],actors:[],directors:[]},events:{onSubmit:function(t){t.preventDefault(),e.popPage($(this).getFormData())}}});!async function(){const t=await n.get("/getInfos"),{styles:e,franchises:o,actors:s,directors:a}=t;i.setData({styles:e,franchises:o,actors:s,directors:a})}(),this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){i.scope.submit.click()}}}}}}),$$.control.registerControl("filter",{template:'<div>\n    <form bn-event="submit: onSubmit" bn-form="filters">\n        <div class="group">\n            <label>Style</label>\n            <div bn-control="brainjs.combobox" bn-data="{items: styles}" name="style"></div>\n\n        </div>\n\n        <div class="group">\n\n            <label>Actor</label>\n            <div bn-control="brainjs.combobox" bn-data="{items: actors}" name="actor"></div>\n        </div>\n\n        <div class="group">\n            <label>Director</label>\n            <div bn-control="brainjs.combobox" bn-data="{items: directors}" name="director"></div>\n        </div>\n\n        <div class="group">\n            <label>Year</label>\n\n            <div class="year"><input type="number" name="year" min="1950"></div>\n        </div>\n\n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>',deps:["breizbot.pager","breizbot.http"],props:{filters:null},init:function(t,e,n){let o=$.extend({author:"All"},this.props.filters);const i=$$.viewController(t,{data:{filters:{},styles:[],franchises:[],actors:[],directors:[]},events:{onSubmit:function(t){t.preventDefault(),e.popPage($(this).getFormData())}}});!async function(){const t=await n.get("/getInfos"),{styles:e,franchises:s,actors:a,directors:l}=t;e.unshift({value:"All",label:"All",style:"font-weight: bold;"}),s.unshift({value:"All",label:"All",style:"font-weight: bold;"}),a.unshift({value:"All",label:"All",style:"font-weight: bold;"}),l.unshift({value:"All",label:"All",style:"font-weight: bold;"}),i.setData({styles:e,franchises:s,actors:a,directors:l}),i.setData({filters:o})}(),this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){i.scope.submit.click()}}}}}}),$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n    <div class="left">\n        <button class="w3-button" title="Import from JSON file" bn-event="click: onImport" bn-icon="fas fa-download">\n        </button>\n\n        <button class="w3-button" title="Add Movie" bn-event="click: onAddMovie" bn-icon="fas fa-plus">\n        </button>\n\n        <button class="w3-button" title="Filter" bn-event="click: onFilter" bn-icon="fas fa-filter">\n        </button>\n\n        <button class="w3-button" title="Search movies by Title" bn-event="click: onSearch" bn-icon="fas fa-search">\n        </button>\n\n        <button class="w3-button" title="Reload" bn-event="click: onReload" bn-icon="fas fa-sync-alt">\n        </button>        \n        \n    </div>\n\n    <div class="right">\n        <span bn-text="getMoviesQty" bn-bind="moviesQty"></span>\n    </div>\n\n\n</div>\n\n<div class="filters w3-grey"  bn-show="hasFilters">\n    <h1>Filters</h1>\n    <ul bn-each="getFilters">\n        <li>\n            <span bn-text="getFilterLabel" class="label"></span>\n            <span bn-text="getFilterValue"></span>\n        </li>\n\n    </ul>\n</div>\n\n<div class="scrollBar">\n    <table class="w3-table-all w3-hoverable w3-small">\n        <thead>\n            <tr>\n                <th>Title</th>\n                <th>Year</th>\n                <th>Style</th>\n                <th>Actors</th>\n                <th>Director</th>\n                <th>Franchise</th>\n            </tr>\n        </thead>\n            <tbody bn-each="movies" bn-lazzy="getMovies" bn-event="contextmenuchange.item: onItemContextMenu, click.item: onDetails, click.action: onAction" bn-bind="movies">\n                <tr class="item" bn-control="brainjs.contextmenu" bn-data="{items: {\n                    del: {\n                        name: \'Delete\',\n                        icon: \'fas fa-trash-alt\'\n                    },\n                    edit: {\n                        name: \'Edit\',\n                        icon: \'fas fa-edit\'\n                    }\n                }}">\n    \n                <td bn-text="$scope.$i.title"></td>\n                <td bn-text="$scope.$i.year"></td>\n                <td bn-text="$scope.$i.style"></td>\n                <td>\n\t\t\t\t\t<a bn-text="$scope.$i.actor1" href="#" class="actor1 action"></a><br>\n\t\t\t\t\t<a bn-text="$scope.$i.actor2" href="#" class="actor2 action"></a>\n                </td>\n                <td>\n                    <a bn-text="$scope.$i.director" href="#" class="director action"></a>\n                </td>\n                <td bn-text="$scope.$i.franchise"></td>\n            </tr>\n\n        </tbody>\n    </table>\n</div>',deps:["breizbot.pager","breizbot.http"],props:{},init:function(t,e,n){let o={};const i={actor:"Actor:",year:"Year:",director:"Director:",franchise:"Franchise:",style:"Style:",query:"Query:"},s=$$.viewController(t,{data:{moviesQty:0,movies:[],getMovies:async function(t){return a(t)},getMoviesQty:function(){return this.moviesQty>0?`${this.moviesQty} movies`:""},getFilters:function(){return Object.entries(o)},hasFilters:function(){return Object.keys(o).length>0},getFilterLabel:t=>i[t.$i[0]],getFilterValue:t=>t.$i[1]},events:{onReload:function(){o={},a()},onSearch:function(){e.pushPage("search",{title:"Search movies by title",onReturn:function(t){o=t,a()}})},onAction:function(t){t.preventDefault(),t.stopPropagation();const e=$(this),n=e.closest(".item").index(),i=s.model.movies[n];e.hasClass("actor1")?o={actor:i.actor1}:e.hasClass("actor2")?o={actor:i.actor2}:e.hasClass("director")&&(o={director:i.director}),a()},onDetails:function(){const t=$(this).index(),n=s.model.movies[t];console.log("onDetails",n),e.pushPage("showDetails",{title:n.title,props:{data:n}})},onAddMovie:function(){e.pushPage("addMovie",{title:"Add Movie",onReturn:async function(t){console.log("onReturn",t),await n.post("/addMovie",t),a()}})},onItemContextMenu:function(t,o){const i=$(this).index(),{cmd:a}=o,l=s.model.movies[i],r=l._id.toString();"del"==a?$$.ui.showConfirm({title:"Delete Movie",content:"Are you sure ?"},async()=>{await n.post(`/deleteMovie/${r}`),s.removeArrayItem("movies",i,"movies"),s.model.moviesQty--,s.updateNode("moviesQty")}):"edit"==a&&e.pushPage("addMovie",{title:"Edit Movie",props:{data:l},onReturn:async function(t){const e=await n.post(`/updateMovie/${r}`,t);s.updateArrayItem("movies",i,e,"movies")}})},onImport:function(){e.pushPage("breizbot.files",{title:"Import Movies",props:{selectionEnabled:!0,filterExtension:"json"},events:{fileclick:function(t,n){e.popPage(n)}},onReturn:async function(t){console.log("onReturn",t),await n.post("/importFile",{filePath:t.rootDir+t.fileName}),a()}})},onFilter:function(){e.pushPage("filter",{title:"Set Filter",props:{filters:o},onReturn:async function(t){Object.keys(t).forEach(e=>{("All"==t[e]||"year"==e&&isNaN(t[e]))&&delete t[e]}),o=t,a()}})}}});async function a(t){t=t||0;const e=await n.post("/getMovies",{offset:t,filters:o});if(0!=t)return s.model.movies=s.model.movies.concat(e),e;{const{moviesQty:t}=await n.post("/moviesQty",{filters:o});s.setData({movies:e,moviesQty:t})}}a()}}),$$.control.registerControl("search",{template:'<div>\n    <form bn-event="submit: onSubmit">\n        <label>Query</label>\n        <input type="text" required name="query" minlength="3">\n        \n        <input type="submit" hidden bn-bind="submit">\n    </form>\n</div>\n',deps:["breizbot.pager"],init:function(t,e){const n=$$.viewController(t,{data:{},events:{onSubmit:async function(t){t.preventDefault(),e.popPage($(this).getFormData())}}});this.getButtons=function(){return{apply:{title:"Apply",icon:"fas fa-check",onClick:function(){n.scope.submit.click()}}}}}}),$$.control.registerControl("showDetails",{template:'<div bn-html="getSynopsis" class="description"></div>',props:{data:{}},init:function(t){const{data:e}=this.props;$$.viewController(t,{data:{getSynopsis:function(){return e.synopsis?e.synopsis.replace(/\n/g,"<br><br>"):""}},events:{}})}});