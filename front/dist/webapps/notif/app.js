$$.control.registerControl("rootPage",{deps:["breizbot.users","breizbot.broker"],template:'<div class="scrollPanel">\n\t<ul class="w3-ul w3-border w3-white" \n\t\tbn-each="notifs" bn-iter="n"\n\t\tbn-event="click.delete: onDelete, click.accept: onAccept, click.decline: onDecline, click.reply: onReply"\n\t\t>\n\t\t<li class="w3-bar" bn-show="show1">\n\t\t\t<span class="w3-button w3-right w3-blue delete" title="Delete"><i class="fa fa-times"></i></span>\n\t\t\t<span class="w3-button w3-right w3-blue reply" title="Reply" bn-show="show2"><i class="fa fa-reply"></i></span>\n\n\t\t\t<div class="w3-bar-item">\n\t\t\t\tFrom: <span bn-text="$scope.n.from"></span><br>\n\t\t\t\tDate: <span bn-text="text1"></span>\n\t\t\t\tat <span bn-text="text2"></span>\n\t\t\t\t<br>\n\t\t\t\tMessage: <span bn-html="$scope.n.notif.text"></span>\n\t\t\t</div>\n\t\t</li>\n\n\t\t<li class="w3-bar" bn-show="isInvit">\n\t\t\t<span class="w3-button w3-right w3-green accept"><i class="fa fa-user-check"></i></span>\n\t\t\t<span class="w3-button w3-right w3-red decline"><i class="fa fa-user-slash"></i></span>\n\n\t\t\t<div class="w3-bar-item">\n\t\t\t\tFrom: <span bn-text="$scope.n.from"></span><br>\n\t\t\t\tDate: <span bn-text="text1"></span>\n\t\t\t\tat <span bn-text="text2"></span>\n\t\t\t\t<br>\n\t\t\t\tMessage: <strong>I want to be your friend</strong>\n\t\t\t</div>\n\t\t</li>\t\t\t\n\t</ul>\t\n</div>',init:function(t,n,e){const o=$$.viewController(t,{data:{notifs:[],show1:function(t){return"string"==typeof t.n.notif.text},show2:function(t){return!0===t.n.notif.reply},text1:function(t){return new Date(t.n.date).toLocaleDateString()},text2:function(t){return new Date(t.n.date).toLocaleTimeString()},isInvit:function(t){return"invit"===t.n.notif.type}},events:{onDelete:function(){const t=$(this).closest("li").index(),e=o.model.notifs[t];console.log("onDelete",e),n.removeNotif(e._id)},onAccept:async function(){const t=$(this).closest("li").index(),e=o.model.notifs[t];console.log("onAccept",e);const s=e.from;await n.addFriend(s),await n.removeNotif(e._id),await n.sendNotif(s,{text:"User has accepted your invitation"})},onDecline:async function(){const t=$(this).closest("li").index(),e=o.model.notifs[t];console.log("onDecline",e);const s=e.from;await n.removeNotif(e._id),await n.sendNotif(s,{text:"User has declined your invitation"})},onReply:async function(t){const e=$(this).closest("li").index(),s=o.model.notifs[e];console.log("onReply",s);const i=s.from,a=await $$.ui.showPrompt({title:"Reply",label:"Message:"});null!=a&&(await n.removeNotif(s._id),await n.sendNotif(i,{text:a,reply:!0}))}}});async function s(){const t=await n.getNotifs();console.log("notifs",t),o.setData({notifs:t})}e.register("breizbot.notifCount",function(t){s()}),s()}});