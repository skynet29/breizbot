$$.control.registerControl("rootPage",{deps:["breizbot.rtc"],template:'<div bn-control="breizbot.rtc" \n\tbn-data="{\n\t\tappName:\'phone\',\n\t\ticonCls: \'fa fa-phone fa-flip-vertical\',\n\t\ttitle: \'Select a friend to call\'\n\t}"\n\tbn-event="rtchangup: onHangup"\n>\n</div>\n<div class="video">\n\n\t  <video bn-bind="localVideo" autoplay muted playsinline bn-class="{reduced: isConnected}"></video>\n\t  <video bn-bind="remoteVideo" autoplay playsinline bn-show="isConnected"></video>\t\n</div>\t\t\n\n\n\n',init:function(e,n){n.on("status",e=>{t.setData({status:e.status})});const t=$$.viewController(e,{data:{status:"ready",isConnected:function(){return"connected"==this.status}},events:{onHangup:function(e){r()}}}),o={iceServers:[{urls:"stun:stun.l.google.com:19302"}]},a=t.scope.localVideo.on("canplay",function(){console.log("canplay",this.videoHeight,this.videoWidth),t.setData({videoSize:this.videoWidth+"x"+this.videoHeight})}).get(0),c=t.scope.remoteVideo.get(0);let i=null,s=null,d=null;function l(){console.log("createPeerConnection");try{(i=new RTCPeerConnection(o)).onicecandidate=function(e){const t=e.candidate;t&&n.sendData("candidate",{label:t.sdpMLineIndex,id:t.sdpMid,candidate:t.candidate})},i.ontrack=function(e){console.log("ontrack",e),d=e.streams[0],c.srcObject=d},i.onnegotiationneeded=async function(e){console.log("onnegotiationneeded",e);const t=await i.createOffer();i.setLocalDescription(t),console.log("send offer",t),n.sendData("offer",t)}}catch(e){console.log("Failed to create PeerConnection, exception: "+e.message),alert("Cannot create RTCPeerConnection object.")}}function r(){i.close(),i=null,d&&d.getTracks().forEach(e=>e.stop())}n.on("accept",async function(){console.log("receive accept"),l(),s.getTracks().forEach(e=>{console.log("addTrack",e),i.addTrack(e,s)})}),n.onData("candidate",function(e){const{label:n,candidate:t}=e;i.addIceCandidate(new RTCIceCandidate({sdpMLineIndex:n,candidate:t}))}),n.onData("offer",async function(e){console.log("receive offer",e),l(),i.setRemoteDescription(new RTCSessionDescription(e)),s.getTracks().forEach(e=>{console.log("addTrack",e),i.addTrack(e,s)});const t=await i.createAnswer();i.setLocalDescription(t),console.log("send answer",t),n.sendData("answer",t)}),n.onData("answer",function(e){console.log("receive answer",e),i.setRemoteDescription(new RTCSessionDescription(e))}),n.on("bye",function(){r()}),n.on("ready",()=>{!async function(){try{const e=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0});a.srcObject=e,s=e,n.isCallee()&&n.accept()}catch(e){console.log("error",e),n.isCallee&&n.deny()}}()}),this.onAppExit=function(){return n.exit()}}});