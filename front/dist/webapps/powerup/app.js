$$.control.registerControl("rootPage",{template:'<div>\n    <button class="w3-blue w3-button" \n        bn-event="click: onConnect"\n        bn-show="!connected"\n    >Connect to HUB</button>\n\n    <button class="w3-blue w3-button" \n        bn-event="click: onShutdown"\n        bn-show="connected"\n    >Shutdown</button>\n\n\n    <button class="w3-blue w3-button" \n        bn-event="click: onSendMsg"\n        bn-show="connected"\n    >Send Msg</button>\n</div>\n<div bn-show="connected">\n    <h1>External Devices</h1>\n    <table class="w3-table-all">\n        <thead>\n            <tr>\n                <th>Port</th>\n                <th>Device Type</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody bn-each="externalDevices" bn-event="click.w3-button: onAction">\n            <tr>\n                <td bn-text="$scope.$i.port"></td>\n                <td bn-text="$scope.$i.device"></td>\n                <td>\n                    <button class="w3-button w3-green" data-action="forward">FORWARD</button>\n                    <button class="w3-button w3-green" data-action="backward">BACKWARD</button>\n                    <button class="w3-button w3-red" data-action="off">OFF</button>\n                </td>\n            </tr>\n\n        </tbody>\n    </table>\n    <h1>Internal Devices</h1>\n    <ul bn-each="internalDevices">\n        <li bn-text="$scope.$i"></li>\n    </ul>\n</div>',deps:["breizbot.pager"],props:{},init:function(n,t){let e=null,o=null,_=null,E=null,O={};function T(n){const t={};return Object.entries(n).forEach(([n,e])=>{t[e]=n}),t}const R={DETACHED_IO:0,ATTACHED_IO:1,ATTACHED_VIRTUAL_IO:2},c=T(R),i={HUB_PROPERTIES:1,HUB_ACTIONS:2,HUB_ALERTS:3,HUB_ATTACHED_IO:4,GENERIC_ERROR_MESSAGES:5,HW_NETWORK_COMMANDS:8,FW_UPDATE_GO_INTO_BOOT_MODE:16,FW_UPDATE_LOCK_MEMORY:17,FW_UPDATE_LOCK_STATUS_REQUEST:18,FW_LOCK_STATUS:19,PORT_INFORMATION_REQUEST:33,PORT_MODE_INFORMATION_REQUEST:34,PORT_INPUT_FORMAT_SETUP_SINGLE:65,PORT_INPUT_FORMAT_SETUP_COMBINEDMODE:66,PORT_INFORMATION:67,PORT_MODE_INFORMATION:68,PORT_VALUE_SINGLE:69,PORT_VALUE_COMBINEDMODE:70,PORT_INPUT_FORMAT_SINGLE:71,PORT_INPUT_FORMAT_COMBINEDMODE:72,VIRTUAL_PORT_SETUP:97,PORT_OUTPUT_COMMAND:129,PORT_OUTPUT_COMMAND_FEEDBACK:130},A=T(i),N={UNKNOWN:0,SIMPLE_MEDIUM_LINEAR_MOTOR:1,TRAIN_MOTOR:2,LIGHT:8,VOLTAGE_SENSOR:20,CURRENT_SENSOR:21,PIEZO_BUZZER:22,HUB_LED:23,TILT_SENSOR:34,MOTION_SENSOR:35,COLOR_DISTANCE_SENSOR:37,MEDIUM_LINEAR_MOTOR:38,MOVE_HUB_MEDIUM_LINEAR_MOTOR:39,MOVE_HUB_TILT_SENSOR:40,DUPLO_TRAIN_BASE_MOTOR:41,DUPLO_TRAIN_BASE_SPEAKER:42,DUPLO_TRAIN_BASE_COLOR_SENSOR:43,DUPLO_TRAIN_BASE_SPEEDOMETER:44,TECHNIC_LARGE_LINEAR_MOTOR:46,TECHNIC_XLARGE_LINEAR_MOTOR:47,TECHNIC_MEDIUM_ANGULAR_MOTOR:48,TECHNIC_LARGE_ANGULAR_MOTOR:49,TECHNIC_MEDIUM_HUB_GEST_SENSOR:54,REMOTE_CONTROL_BUTTON:55,REMOTE_CONTROL_RSSI:56,TECHNIC_MEDIUM_HUB_ACCELEROMETER:57,TECHNIC_MEDIUM_HUB_GYRO_SENSOR:58,TECHNIC_MEDIUM_HUB_TILT_SENSOR:59,TECHNIC_MEDIUM_HUB_TEMPERATURE_SENSOR:60,TECHNIC_COLOR_SENSOR:61,TECHNIC_DISTANCE_SENSOR:62,TECHNIC_FORCE_SENSOR:63,TECHNIC_3X3_COLOR_LIGHT_MATRIX:64,TECHNIC_SMALL_ANGULAR_MOTOR:65,MARIO_ACCELEROMETER:71,MARIO_BARCODE_SENSOR:73,MARIO_PANTS_SENSOR:74,TECHNIC_MEDIUM_ANGULAR_MOTOR_GREY:75,TECHNIC_LARGE_ANGULAR_MOTOR_GREY:76},a=T(N),I={ADVERTISING_NAME:1,BUTTON_STATE:2,FW_VERSION:3,HW_VERSION:4,RSSI:5,BATTERY_VOLTAGE:6,BATTERY_TYPE:7,MANUFACTURER_NAME:8,RADIO_FIRMWARE_VERSION:9,LWP_PROTOCOL_VERSION:10,SYSTEM_TYPE_ID:11,HW_NETWORK_ID:12,PRIMARY_MAC_ADDRESS:13,SECONDARY_MAC_ADDRESS:14,HW_NETWORK_FAMILY:15},s=T(I),r=T({ACK:1,MACK:2,BUFFER_OVERFLOW:3,TIMEOUT:4,COMMAND_NOT_RECOGNIZED:5,INVALID_USE:6,OVERCURRENT:7,INTERNAL_ERROR:8}),C={BLACK:0,PINK:1,PURPLE:2,BLUE:3,LIGHT_BLUE:4,CYAN:5,GREEN:6,YELLOW:7,ORANGE:8,RED:9,WHITE:10,NONE:255},S={};async function M(n,...t){console.log("sendMsg",{type:n,data:t});const e=t.length+3,o=new ArrayBuffer(e),_=new Uint8Array(o);_[0]=e,_[1]=0,_[2]=n,_.set(t,3),console.log(_),await E.writeValueWithoutResponse(o)}function l(n,t,...e){return M(i.PORT_OUTPUT_COMMAND,n,17,81,t,e)}function U(n,t){return l(n,0,t)}function d(n){!function(n){const t=n.byteLength,e=n.getUint8(0),o=n.getUint8(2);console.log("decodeMsg",{msgLen:e,bufferLen:t,msgType:A[o]});const _=S[o];"function"==typeof _&&_(n)}(n.target.value)}function D(){console.log("onGattServerDisconnected"),u.setData({connected:!1})}S[i.HUB_ATTACHED_IO]=function(n){const t=n.getUint8(3),e=n.getUint8(4),o=e?n.getUint16(5,!0):0,_=a[o]||"Unknown",E=c[e];if(console.log("handlePortMsg",{portId:t,eventName:E,deviceTypeName:_}),e==R.ATTACHED_IO)!function(n,t){if(console.log("attachDevice",{portId:n,deviceType:t}),O[t]=n,n>=50)u.model.internalDevices.push(a[t]);else{const e=String.fromCharCode(n+65),o=u.model.externalDevices.find(n=>n.port==e);console.log("entry",o),o.device=a[t]}u.update()}(t,o);else if(e==R.DETACHED_IO)!function(n){const t=function(n){for(const[t,e]of Object.entries(O))if(e==n)return t}(n);delete O[t];const e=String.fromCharCode(n+65);u.model.externalDevices.find(n=>n.port==e).device="None",u.update()}(t);else if(e==R.ATTACHED_VIRTUAL_IO){const t=n.getUint8(7),e=n.getUint8(8);console.log({portIdA:t,portIdB:e})}},S[i.GENERIC_ERROR_MESSAGES]=function(n){const t=n.getUint8(3),e=n.getUint8(4);console.log({cmdType:t,errorCode:r[e]})},S[i.HUB_PROPERTIES]=function(n){const t=n.getUint8(3);if(console.log({property:s[t]}),t==I.BATTERY_VOLTAGE){const t=n.getUint8(5);console.log({batteryLevel:t})}},S[i.PORT_OUTPUT_COMMAND_FEEDBACK]=function(n){for(let t=3;t<n.byteLength;t+=2){const e=n.getUint8(t),o=n.getUint8(t+1);console.log({portId:e,feedback:o})}};const L=[];for(let n=0;n<4;n++)L.push({port:String.fromCharCode(n+65),device:"None"});const u=$$.viewController(n,{data:{connected:!1,internalDevices:[],externalDevices:L},events:{onConnect:async function(){console.log("onConnect"),O={},(e=await navigator.bluetooth.requestDevice({acceptAllDevices:!0,optionalServices:["00001623-1212-efde-1623-785feabcd123"]})).addEventListener("gattserverdisconnected",D),o=await e.gatt.connect(),console.log("Connected"),u.setData({connected:!0}),_=await o.getPrimaryService("00001623-1212-efde-1623-785feabcd123"),(E=await _.getCharacteristic("00001624-1212-efde-1623-785feabcd123")).addEventListener("characteristicvaluechanged",d),E.startNotifications()},onSendMsg:async function(){var n;await l((n=N.HUB_LED,O[n]),0,C.GREEN)},onShutdown:async function(){await M(i.HUB_ACTIONS,1)},onAction:function(n){const t=$(this).closest("tr").index(),e=$(this).data("action");switch(console.log("onAction",{idx:t,action:e}),e){case"off":U(t,0);break;case"forward":U(t,50);break;case"backward":U(t,-50)}}}})}});