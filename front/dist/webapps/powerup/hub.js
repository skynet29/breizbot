!function(){return function t(e,s,o){function i(a,r){if(!s[a]){if(!e[a]){var c="function"==typeof require&&require;if(!r&&c)return c(a,!0);if(n)return n(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var E=s[a]={exports:{}};e[a][0].call(E.exports,function(t){return i(e[a][1][t]||t)},E,E.exports,t,e,s,o)}return s[a].exports}for(var n="function"==typeof require&&require,a=0;a<o.length;a++)i(o[a]);return i}}()({1:[function(t,e,s){e.exports=class{constructor(){this.callbacks=[]}on(t){this.callbacks.push(t)}emit(t){console.log("emit",t);let e=this.callbacks.length;for(;e--;)(0,this.callbacks[e])(t)&&this.callbacks.splice(e,1)}}},{}],2:[function(t,e,s){const o=t("./Device");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}async setBrightness(t,e,s){return await this.setMode(3,!1),this.writeDirectMode(3,t,e,s)}}},{"./Device":4}],3:[function(t,e,s){const{getEnumName:o}=$$.util,i={DETACHED_IO:0,ATTACHED_IO:1,ATTACHED_VIRTUAL_IO:2},n=o(i),a={HUB_PROPERTIES:1,HUB_ACTIONS:2,HUB_ALERTS:3,HUB_ATTACHED_IO:4,GENERIC_ERROR_MESSAGES:5,HW_NETWORK_COMMANDS:8,FW_UPDATE_GO_INTO_BOOT_MODE:16,FW_UPDATE_LOCK_MEMORY:17,FW_UPDATE_LOCK_STATUS_REQUEST:18,FW_LOCK_STATUS:19,PORT_INFORMATION_REQUEST:33,PORT_MODE_INFORMATION_REQUEST:34,PORT_INPUT_FORMAT_SETUP_SINGLE:65,PORT_INPUT_FORMAT_SETUP_COMBINEDMODE:66,PORT_INFORMATION:67,PORT_MODE_INFORMATION:68,PORT_VALUE_SINGLE:69,PORT_VALUE_COMBINEDMODE:70,PORT_INPUT_FORMAT_SINGLE:71,PORT_INPUT_FORMAT_COMBINEDMODE:72,VIRTUAL_PORT_SETUP:97,PORT_OUTPUT_COMMAND:129,PORT_OUTPUT_COMMAND_FEEDBACK:130},r=o(a),c={UNKNOWN:0,SIMPLE_MEDIUM_LINEAR_MOTOR:1,TRAIN_MOTOR:2,LIGHT:8,VOLTAGE_SENSOR:20,CURRENT_SENSOR:21,PIEZO_BUZZER:22,HUB_LED:23,TILT_SENSOR:34,MOTION_SENSOR:35,COLOR_DISTANCE_SENSOR:37,MEDIUM_LINEAR_MOTOR:38,MOVE_HUB_MEDIUM_LINEAR_MOTOR:39,MOVE_HUB_TILT_SENSOR:40,DUPLO_TRAIN_BASE_MOTOR:41,DUPLO_TRAIN_BASE_SPEAKER:42,DUPLO_TRAIN_BASE_COLOR_SENSOR:43,DUPLO_TRAIN_BASE_SPEEDOMETER:44,TECHNIC_LARGE_LINEAR_MOTOR:46,TECHNIC_XLARGE_LINEAR_MOTOR:47,TECHNIC_MEDIUM_ANGULAR_MOTOR:48,TECHNIC_LARGE_ANGULAR_MOTOR:49,TECHNIC_MEDIUM_HUB_GEST_SENSOR:54,REMOTE_CONTROL_BUTTON:55,REMOTE_CONTROL_RSSI:56,TECHNIC_MEDIUM_HUB_ACCELEROMETER:57,TECHNIC_MEDIUM_HUB_GYRO_SENSOR:58,TECHNIC_MEDIUM_HUB_TILT_SENSOR:59,TECHNIC_MEDIUM_HUB_TEMPERATURE_SENSOR:60,TECHNIC_COLOR_SENSOR:61,TECHNIC_DISTANCE_SENSOR:62,TECHNIC_FORCE_SENSOR:63,TECHNIC_3X3_COLOR_LIGHT_MATRIX:64,TECHNIC_SMALL_ANGULAR_MOTOR:65,MARIO_ACCELEROMETER:71,MARIO_BARCODE_SENSOR:73,MARIO_PANTS_SENSOR:74,TECHNIC_MEDIUM_ANGULAR_MOTOR_GREY:75,TECHNIC_LARGE_ANGULAR_MOTOR_GREY:76,VIRTUAL_DEVICE:100},l=o(c),E=o({ACK:1,MACK:2,BUFFER_OVERFLOW:3,TIMEOUT:4,COMMAND_NOT_RECOGNIZED:5,INVALID_USE:6,OVERCURRENT:7,INTERNAL_ERROR:8}),T={ADVERTISING_NAME:1,BUTTON_STATE:2,FW_VERSION:3,HW_VERSION:4,RSSI:5,BATTERY_VOLTAGE:6,BATTERY_TYPE:7,MANUFACTURER_NAME:8,RADIO_FIRMWARE_VERSION:9,LWP_PROTOCOL_VERSION:10,SYSTEM_TYPE_ID:11,HW_NETWORK_ID:12,PRIMARY_MAC_ADDRESS:13,SECONDARY_MAC_ADDRESS:14,HW_NETWORK_FAMILY:15},d=o(T),u={NAME:0,RAW:1,PCT:2,SI:3,SYMBOL:4,MAPPING:5,USED_INTERNALLY:6,MOTOR_BIAS:7,CAPABILITY_BITS:8,VALUE_FORMAT:128},h=o(u),_={A:0,B:1,C:2,D:3,HUB_LED:50,CURRENT_SENSOR:59,VOLTAGE_SENSOR:60,ACCELEROMETER:97,GYRO_SENSOR:98,TILT_SENSOR:99},R=o(_);e.exports={MessageType:a,MessageTypeNames:r,Event:i,EventNames:n,BrakingStyle:{FLOAT:0,HOLD:126,BRAKE:127},DeviceMode:{POWER:0,SPEED:1,ROTATION:2,ABSOLUTE:3,COLOR:0,RGB:1,TILT_POS:0,TILT_INPACT_COUNT:1},DeviceType:c,DeviceTypeNames:l,ModeInformationType:u,ModeInformationTypeNames:h,PortMap:_,PortMapNames:R,HubPropertyPayload:T,HubPropertyPayloadNames:d,ErrorCodeNames:E}},{}],4:[function(t,e,s){t("./CallbackEmitter");const{MessageType:o,PortMapNames:i}=t("./Const"),{log:n,toUint32:a}=t("./Util"),r={};e.exports=class{constructor(t,e,s){this.hubDevice=t,this.portId=e,this.type=s,this.name=i[e],this.feedbackCallback=null,this.valueCallback=void 0,this.mode=void 0,this.waitEnd=!1,this.notificationEnabled=!1}async writePortCommand(t,...e){return this.waitEnd=t,new Promise(async t=>{this.feedbackCallback=t,await this.hubDevice.writePortCommand(this.portId,e)})}handleFeedback(t){"function"==typeof this.feedbackCallback&&(1!=t||this.waitEnd?10==t&&this.waitEnd&&this.feedbackCallback():this.feedbackCallback())}writeDirectMode(t,...e){return n("writeDirectMode",this.portId,{mode:t}),this.writePortCommand(!0,81,t,e)}setMode(t,e,s=1){return console.log("setMode",this.portId,{mode:t,notificationEnabled:e}),this.mode=t,this.notificationEnabled=e,this.hubDevice.sendMsg(o.PORT_INPUT_FORMAT_SETUP_SINGLE,this.portId,t,a(s),e?1:0)}async readInfo(){let t=r[this.type];return null==t&&(t=await this.hubDevice.getPortInformation(this.portId),r[this.type]=t),t}decodeValue(t){const e=r[this.type];if(null!=e){const{VALUE_FORMAT:s,RAW:o,SI:i}=e.modes[this.mode],a=$$.util.mapRange(o.min,o.max,i.min,i.max),{dataType:r,numValues:c}=s,l=[];let E,T=4;for(let e=0;e<c;e++){switch(r){case"16bit":E=t.getInt16(T,!0),T+=2;break;case"8bit":E=t.getInt8(T),T+=1;break;case"32bit":E=t.getInt32(T,!0),T+=4;break;case"float":E=t.getFloat32(T,!0),T+=4}n("val",E),l.push(Math.trunc(a(E)))}return 1==l.length?l[0]:l}}handleValue(t){n("handleValue",this.portId,t);let e=this.decodeValue(t);null!=e&&"function"==typeof this.valueCallback&&this.valueCallback(e)}async getValue(t){return console.log("getValue",this.portId,{mode:t}),await this.setMode(t,!1),new Promise(async t=>{this.valueCallback=(e=>(console.log("value",e),t(e),!0)),await this.hubDevice.sendMsg(o.PORT_INFORMATION_REQUEST,this.portId,0)})}async waitTestValue(t,e){return await this.setMode(t,!0),await new Promise(async t=>{this.valueCallback=(async s=>{n("waitTestValue",s),await e(s)&&(n("waitTestValue OK"),t())})}),this.setMode(t,!1)}async subscribe(t,e,s=1){await this.setMode(t,!0,s),this.valueCallback=(async t=>{await e(t)})}async unsubscribe(){this.notificationEnabled&&this.setMode(this.mode,!1)}}},{"./CallbackEmitter":1,"./Const":3,"./Util":12}],5:[function(t,e,s){const o=t("./Device");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}async setBrightness(t,e,s,o){return await this.setMode(5,!1),this.writeDirectMode(5,t,s,e,o)}}},{"./Device":4}],6:[function(t,e,s){const o=t("./Motor"),{BrakingStyle:i}=t("./Const"),{toInt16:n,toInt32:a}=t("./Util"),r=100;e.exports=class extends o{constructor(t,e,s){super(t,e,"Virtual Device"),this.name=s}setSpeed(t,e){return this.writePortCommand(!0,8,t,e,r,0)}setSpeedForTime(t,e,s,o=!1,a=i.BRAKE){return console.log("setSpeedForTime",this.portId,{speed1:t,speed2:e,time:s,waitFeedback:o,brakingStyle:a}),this.writePortCommand(o,10,n(s),t,e,r,a)}rotateDegrees(t,e,s,o,n=i.BRAKE){return console.log("rotateDegrees",this.portId,{degrees:t,speed1:e,speed2:s,waitFeedback:o,brakingStyle:n}),this.writePortCommand(o,12,a(t),e,s,r,n)}gotoAngle(t,e,s,o,n=i.BRAKE){return console.log("gotoAngle",this.portId,{angle1:t,angle2:e,speed:s,waitFeedback:o,brakingStyle:n}),this.writePortCommand(o,14,a(t),a(e),s,r,n)}}},{"./Const":3,"./Motor":8,"./Util":12}],7:[function(t,e,s){const o=t("./Device"),{PortMapNames:i,DeviceMode:n}=t("./Const");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}setBrightness(t){return console.log("setBrightness",this.portId,{brightness:t}),this.writeDirectMode(n.POWER,t)}}},{"./Const":3,"./Device":4}],8:[function(t,e,s){const o=t("./Device"),{PortMapNames:i,DeviceMode:n}=t("./Const");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}setPower(t){return console.log("setPower",this.portId,{power:t}),this.writeDirectMode(n.POWER,t)}}},{"./Const":3,"./Device":4}],9:[function(t,e,s){const o=t("./Device"),{PortMapNames:i}=t("./Const"),n={COLOR:0,RGB:1};e.exports=class extends o{constructor(t,e,s){super(t,e,s)}async setColor(t){return console.log("setColor",this.portId,{color:t}),await this.setMode(n.COLOR,!1),this.writeDirectMode(n.COLOR,t)}async setRGBColor(t,e,s){return console.log("setColor",this.portId,{r:t,g:e,b:s}),await this.setMode(n.RGB,!1),this.writeDirectMode(n.RGB,t,e,s)}}},{"./Const":3,"./Device":4}],10:[function(t,e,s){const o=t("./Motor"),{PortMapNames:i,DeviceMode:n,BrakingStyle:a}=t("./Const"),{toInt32:r,toInt16:c}=t("./Util"),l=100;e.exports=class extends o{constructor(t,e,s){super(t,e,s)}setSpeed(t){return console.log("#setSpeed",this.portId,{speed:t}),0==t?this.setPower(0):this.writePortCommand(!0,7,t,l,0)}rotateDegrees(t,e,s,o=a.BRAKE){return console.log("rotateDegrees",this.portId,{degrees:t,speed:e,waitEnd:s,brakingStyle:o}),this.writePortCommand(s,11,r(t),e,l,o)}gotoAngle(t,e,s,o=a.BRAKE){return console.log("gotoAngle",this.portId,{angle:t,speed:e,waitEnd:s,brakingStyle:o}),this.calibrationValue&&(t*=this.calibrationValue),this.writePortCommand(s,13,r(t),e,l,o)}async gotoAbsPosition(t,e,s,o=a.BRAKE){const i=await this.getAbsolutePosition();console.log("gotoAbsPosition",this.portId,{angle:t,absPos:i,speed:e,waitEnd:s,brakingStyle:o});let n=t-i;return n<0&&(e=-e),n=Math.abs(n),this.rotateDegrees(n,e,s,o)}setSpeedForTime(t,e,s=!1,o=a.BRAKE){return console.log("setSpeedForTime",this.portId,{speed:t,time:e,waitEnd:s,brakingStyle:o}),this.writePortCommand(s,9,c(e),t,l,o)}resetZero(){return console.log("resetZero",this.portId),this.writeDirectMode(n.ROTATION,0,0,0,0)}getSpeed(){return this.getValue(n.SPEED)}getPosition(){return this.getValue(n.ROTATION)}async getAbsolutePosition(){const t=await this.getValue(n.ABSOLUTE);return t<0?t+360:t}async calibrate(){console.log("calibrate",this.portId),this.setPower(50),await this.waitTestValue(n.SPEED,t=>t>10),await this.waitTestValue(n.SPEED,t=>0==t),this.setPower(0),await $$.util.wait(1e3),await this.resetZero(),this.setPower(-50),await this.waitTestValue(n.SPEED,t=>Math.abs(t)>10),await this.waitTestValue(n.SPEED,t=>0==t),this.setPower(0);const t=await this.getValue(n.ROTATION);console.log(t);const e=Math.floor(t/2);console.log({offset:e}),await this.gotoAngle(e,10,!0),await this.resetZero(),this.calibrationValue=Math.abs(e)}}},{"./Const":3,"./Motor":8,"./Util":12}],11:[function(t,e,s){const o=t("./Device"),{DeviceMode:i}=t("./Const"),{toInt32:n}=t("./Util");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}getImpactCount(){return this.getValue(i.TILT_INPACT_COUNT)}setImpactCount(t){return this.writeDirectMode(i.TILT_INPACT_COUNT,n(t))}decodeValue(t){const e=super.decodeValue(t);if(this.mode==i.TILT_POS){const[t,s,o]=e;return{yaw:t,pitch:s,roll:o}}return e}}},{"./Const":3,"./Device":4,"./Util":12}],12:[function(t,e,s){e.exports={toInt16:function(t){const e=new Uint8Array(2);return new DataView(e.buffer).setInt16(0,t,!0),Array.from(e)},toInt32:function(t){const e=new Uint8Array(4);return new DataView(e.buffer).setInt32(0,t,!0),Array.from(e)},toUint32:function(t){const e=new Uint8Array(4);return new DataView(e.buffer).setUint32(0,t,!0),Array.from(e)},log:function(...t){}}},{}],13:[function(t,e,s){!function(){const e=t("./CallbackEmitter"),{EventNames:s,DeviceMode:o,DeviceTypeNames:i,BrakingStyle:n,PortMap:a,HubPropertyPayloadNames:r,ModeInformationTypeNames:c,Event:l,DeviceType:E,PortMapNames:T,MessageType:d,HubPropertyPayload:u,ModeInformationType:h,ErrorCodeNames:_,MessageTypeNames:R}=t("./Const"),O=t("./Motor"),I=t("./DoubleMotor"),M=t("./TachoMotor"),A=t("./Device"),C=t("./RgbLed"),g=t("./Led"),N=t("./TiltSensor"),m=t("./ColorSensor"),S=t("./DistanceSensor"),{log:p}=t("./Util"),P={BLACK:0,PINK:1,PURPLE:2,BLUE:3,LIGHT_BLUE:4,CYAN:5,GREEN:6,YELLOW:7,ORANGE:8,RED:9,WHITE:10,NONE:255},b="00001623-1212-efde-1623-785feabcd123",U="00001624-1212-efde-1623-785feabcd123";function D(t){const e=new Uint8Array(t);let s="";for(let t=0;t<e.byteLength&&0!=e[t];t++)s+=String.fromCharCode(e[t]);return s}function f(t,...e){const s=e.flat(4),o=s.length+3,i=new ArrayBuffer(o),n=new Uint8Array(i);return n[0]=o,n[1]=0,n[2]=t,n.set(s,3),i}function L(t,e){return`${T[t]}_${T[e]}`}const w={[E.TECHNIC_LARGE_LINEAR_MOTOR]:M,[E.TECHNIC_LARGE_ANGULAR_MOTOR_GREY]:M,[E.TECHNIC_XLARGE_LINEAR_MOTOR]:M,[E.TECHNIC_MEDIUM_HUB_TILT_SENSOR]:N,[E.HUB_LED]:C,[E.LIGHT]:g,[E.TECHNIC_MEDIUM_ANGULAR_MOTOR_GREY]:M,[E.TECHNIC_COLOR_SENSOR]:m,[E.TECHNIC_DISTANCE_SENSOR]:S};class y extends EventEmitter2{constructor(){super(),this.charac=null,this.portCmdQueue={},this.portCmdCallback={},this.hubDevices={},this.busy=!1,this.attachCallbacks=new e,this.portCmdQueue=[]}async writePortCommand(t,...e){console.log("#writePortCommand",{portId:t,data:e});const s=f(d.PORT_OUTPUT_COMMAND,t,17,e);this.busy?(this.portCmdQueue.push(s),console.log("# Busy ! wait feedback")):(this.busy=!0,await this.sendBuffer(s))}async init(t){const e=await t.gatt.connect();p("Connected");const s=await e.getPrimaryService(b);this.charac=await s.getCharacteristic(U);const o=t=>{this.decodeMsg(t.target.value)};t.addEventListener("gattserverdisconnected",()=>{console.log("onGattServerDisconnected",this),this.charac.removeEventListener("characteristicvaluechanged",o),this.charac=null,this.emit("disconnected")}),this.charac.addEventListener("characteristicvaluechanged",o),await this.charac.startNotifications(),await $$.util.wait(100)}async startNotification(){await this.sendMsg(d.HUB_PROPERTIES,u.BATTERY_VOLTAGE,2),await this.sendMsg(d.HUB_PROPERTIES,u.SYSTEM_TYPE_ID,5),await this.sendMsg(d.HUB_PROPERTIES,u.PRIMARY_MAC_ADDRESS,5),await this.sendMsg(d.HUB_ALERTS,1,1)}async getDblMotor(t,e){return new Promise(async s=>{const o=L(t,e),i=Object.values(this.hubDevices).find(t=>t.name==o);i?s(i):(this.attachCallbacks.on(t=>t.name==o&&(console.log(`device on portId ${t.portId} is ready`),s(t),!0)),await this.createVirtualPort(t,e))})}async sendBuffer(t){await this.charac.writeValueWithoutResponse(t)}sendMsg(t,...e){return p("sendMsg",R[t],e),this.sendBuffer(f(t,e))}getPortIdFromName(t){for(const e of Object.values(this.hubDevices))if(e.name==t)return e.portId}createVirtualPort(t,e){return this.sendMsg(d.VIRTUAL_PORT_SETUP,1,t,e)}shutdown(){return this.sendMsg(d.HUB_ACTIONS,1)}getHubDevices(){return Object.values(this.hubDevices)}async readDeviceInfo(){for(const t of this.getHubDevices())await t.readInfo()}getDevice(t){return this.hubDevices[t]}async getPortInformation(t){const e=await this.getPortInformationRequest(t),{count:s,output:o,input:i,capabilities:n}=e,a=[];for(let e=0;e<s;e++){const s={};let n;s.mode=0,n=await this.getPortModeInformationRequest(t,e,h.NAME),s.name=n.name,s[(n=await this.getPortModeInformationRequest(t,e,h.RAW)).type]={min:n.min,max:n.max},s[(n=await this.getPortModeInformationRequest(t,e,h.SI)).type]={min:n.min,max:n.max},n=await this.getPortModeInformationRequest(t,e,h.SYMBOL),s.unit=n.symbol,n=await this.getPortModeInformationRequest(t,e,h.VALUE_FORMAT);const{numValues:r,dataType:c,totalFigures:l,decimals:E}=n;s[n.type]={numValues:r,dataType:c,totalFigures:l,decimals:E},i>>e&1&&(s.mode|=1),o>>e&1&&(s.mode|=2),a.push(s)}return{modes:a,capabilities:n}}getPortInformationRequest(t){return new Promise(async e=>{await this.sendMsg(d.PORT_INFORMATION_REQUEST,t,1),this.portCmdCallback[t]=e})}getPortModeInformationRequest(t,e,s){return new Promise(async o=>{await this.sendMsg(d.PORT_MODE_INFORMATION_REQUEST,t,e,s),this.portCmdCallback[t]=o})}decodeMsg(t){t.byteLength,t.getUint8(0);const e=t.getUint8(2);switch(p("decodeMsg",{msgType:R[e]}),e){case d.HUB_ATTACHED_IO:this.handlePortMsg(t);break;case d.GENERIC_ERROR_MESSAGES:this.handleGenericErrorMsg(t);break;case d.HUB_PROPERTIES:this.handleHubPropertyResponse(t);break;case d.HUB_ALERTS:this.handleHubAlerts(t);break;case d.PORT_OUTPUT_COMMAND_FEEDBACK:this.handlePortCommandFeedback(t);break;case d.PORT_MODE_INFORMATION:this.handlePortModeInformation(t);break;case d.PORT_INFORMATION:this.handlePortInformation(t);break;case d.PORT_VALUE_SINGLE:this.handlePortValueSingle(t)}}handlePortValueSingle(t){const e=t.getUint8(3),s=t.getUint8(0),o=this.hubDevices[e];p("handlePortValueSingle",{msgLen:s,portId:e}),o.handleValue(t)}handlePortModeInformation(t){const e=t.getUint8(3),s=t.getUint8(4),o=t.getUint8(5),i={portId:e,mode:s,type:c[o]};switch(o){case h.NAME:i.name=D(t.buffer.slice(6,t.byteLength));break;case h.RAW:case h.PCT:case h.SI:i.min=t.getFloat32(6,!0),i.max=t.getFloat32(10,!0);break;case h.SYMBOL:i.symbol=D(t.buffer.slice(6,t.byteLength));break;case h.VALUE_FORMAT:i.numValues=t.getUint8(6),i.dataType=["8bit","16bit","32bit","float"][t.getUint8(7)],i.totalFigures=t.getUint8(8),i.decimals=t.getUint8(9)}p("portModeInformation",i);const n=this.portCmdCallback[e];"function"==typeof n&&(n(i),delete this.portCmdCallback[e])}handlePortInformation(t){const e=t.getUint8(3);let s=t.getUint8(5);const o=t.getUint8(6),i=t.getUint16(7,!0),n=t.getUint16(9,!0);p(`Port ${e}, capabilities ${s}, total modes ${o}, \n                    input modes ${i}, output modes ${n}`);const a="output,input,logical combinable, logical synchronisable".split(",");let r=[];for(let t=0;t<4;t++)s>>t&1&&r.push(a[t]);const c={portId:e,capabilities:r.join(", "),count:o,input:i,output:n},l=this.portCmdCallback[e];"function"==typeof l&&l(c)}handleHubPropertyResponse(t){const e=t.getUint8(3);if(p({property:r[e]}),e==u.BATTERY_VOLTAGE){const e=t.getUint8(5);p({batteryLevel:e}),this.emit("batteryLevel",{batteryLevel:e})}else if(e==u.BUTTON_STATE){const e=t.getUint8(5);p({buttonState:e}),this.emit("buttonState",{buttonState:e})}else if(e==u.SYSTEM_TYPE_ID){const e=t.getUint8(5);p({systemType:e})}else if(e==u.PRIMARY_MAC_ADDRESS){const e=[];for(let s=0;s<6;s++)e.push(t.getUint8(5+s).toString(16).toLocaleUpperCase().padStart(2,"0"));p({bytes:e}),this.emit("address",{address:e.join(":")})}}handleGenericErrorMsg(t){const e=t.getUint8(3),s=t.getUint8(4);p({cmdType:e,errorCode:_[s]}),this.emit("error",{cmdType:e,errorCode:_[s]})}handleHubAlerts(t){const e=t.byteLength,s=t.getUint8(0),o=t.getUint8(3),i=t.getUint8(4),n=t.getUint8(5);p("handleHubAlerts",{bufferLen:e,msgLen:s,type:o,operation:i,payload:n}),this.emit("hubAlerts",{type:o,payload:n})}handlePortCommandFeedback(t){for(let e=3;e<t.byteLength;e+=2){const s=t.getUint8(e),o=t.getUint8(e+1),i=this.hubDevices[s];console.log("#handlePortCommandFeedback",{portId:s,feedback:o}),this.busy=!1,null!=i&&i.handleFeedback(o);const n=this.portCmdQueue.shift();n&&(console.log("# process queued cmd"),this.busy=!0,this.sendBuffer(n))}}handlePortMsg(t){const e=t.getUint8(3),o=t.getUint8(4),n=o?t.getUint16(5,!0):0,a=i[n]||"Unknown",r=s[o];if(console.log("handlePortMsg",{portId:e,eventName:r,deviceTypeName:a}),o==l.ATTACHED_IO){let t=w[n];t||(t=A);const s=new t(this,e,a);this.hubDevices[e]=s,this.attachCallbacks.emit(s),this.emit("attach",s)}else if(o==l.DETACHED_IO)delete this.hubDevices[e],this.emit("detach",{portId:e});else if(o==l.ATTACHED_VIRTUAL_IO){const s=t.getUint8(7),o=t.getUint8(8),i=new I(this,e,L(s,o));this.hubDevices[e]=i,this.attachCallbacks.emit(i),this.emit("attach",i)}}}$$.service.registerService("hub",{init:function(){return{connect:async function(){p("connect");const t=await navigator.bluetooth.requestDevice({acceptAllDevices:!0,optionalServices:[b]}),e=new y;return await e.init(t),e},Color:P,PortMap:a,PortMapNames:T,DeviceMode:o,BrakingStyle:n,DeviceTypeNames:i,isMotor:function(t){return t instanceof O},isTachoMotor:function(t){return t instanceof M},isLed:function(t){return t instanceof g},isDoubleMotor:function(t){return t instanceof I},isColorSensor:function(t){return t instanceof m},isDistanceSensor:function(t){return t instanceof S}}}})}()},{"./CallbackEmitter":1,"./ColorSensor":2,"./Const":3,"./Device":4,"./DistanceSensor":5,"./DoubleMotor":6,"./Led":7,"./Motor":8,"./RgbLed":9,"./TachoMotor":10,"./TiltSensor":11,"./Util":12}]},{},[13]);
//# sourceMappingURL=hub.js.map
