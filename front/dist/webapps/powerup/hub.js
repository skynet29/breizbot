!function(){return function t(e,s,o){function i(n,r){if(!s[n]){if(!e[n]){var c="function"==typeof require&&require;if(!r&&c)return c(n,!0);if(a)return a(n,!0);var l=new Error("Cannot find module '"+n+"'");throw l.code="MODULE_NOT_FOUND",l}var E=s[n]={exports:{}};e[n][0].call(E.exports,function(t){return i(e[n][1][t]||t)},E,E.exports,t,e,s,o)}return s[n].exports}for(var a="function"==typeof require&&require,n=0;n<o.length;n++)i(o[n]);return i}}()({1:[function(t,e,s){e.exports=class{constructor(){this.callbacks=[]}on(t){this.callbacks.push(t)}emit(t){let e=this.callbacks.length;for(;e--;)(0,this.callbacks[e])(t)&&this.callbacks.splice(e,1)}}},{}],2:[function(t,e,s){const{getEnumName:o}=$$.util,i={DETACHED_IO:0,ATTACHED_IO:1,ATTACHED_VIRTUAL_IO:2},a=o(i),n={HUB_PROPERTIES:1,HUB_ACTIONS:2,HUB_ALERTS:3,HUB_ATTACHED_IO:4,GENERIC_ERROR_MESSAGES:5,HW_NETWORK_COMMANDS:8,FW_UPDATE_GO_INTO_BOOT_MODE:16,FW_UPDATE_LOCK_MEMORY:17,FW_UPDATE_LOCK_STATUS_REQUEST:18,FW_LOCK_STATUS:19,PORT_INFORMATION_REQUEST:33,PORT_MODE_INFORMATION_REQUEST:34,PORT_INPUT_FORMAT_SETUP_SINGLE:65,PORT_INPUT_FORMAT_SETUP_COMBINEDMODE:66,PORT_INFORMATION:67,PORT_MODE_INFORMATION:68,PORT_VALUE_SINGLE:69,PORT_VALUE_COMBINEDMODE:70,PORT_INPUT_FORMAT_SINGLE:71,PORT_INPUT_FORMAT_COMBINEDMODE:72,VIRTUAL_PORT_SETUP:97,PORT_OUTPUT_COMMAND:129,PORT_OUTPUT_COMMAND_FEEDBACK:130},r=o(n),c={UNKNOWN:0,SIMPLE_MEDIUM_LINEAR_MOTOR:1,TRAIN_MOTOR:2,LIGHT:8,VOLTAGE_SENSOR:20,CURRENT_SENSOR:21,PIEZO_BUZZER:22,HUB_LED:23,TILT_SENSOR:34,MOTION_SENSOR:35,COLOR_DISTANCE_SENSOR:37,MEDIUM_LINEAR_MOTOR:38,MOVE_HUB_MEDIUM_LINEAR_MOTOR:39,MOVE_HUB_TILT_SENSOR:40,DUPLO_TRAIN_BASE_MOTOR:41,DUPLO_TRAIN_BASE_SPEAKER:42,DUPLO_TRAIN_BASE_COLOR_SENSOR:43,DUPLO_TRAIN_BASE_SPEEDOMETER:44,TECHNIC_LARGE_LINEAR_MOTOR:46,TECHNIC_XLARGE_LINEAR_MOTOR:47,TECHNIC_MEDIUM_ANGULAR_MOTOR:48,TECHNIC_LARGE_ANGULAR_MOTOR:49,TECHNIC_MEDIUM_HUB_GEST_SENSOR:54,REMOTE_CONTROL_BUTTON:55,REMOTE_CONTROL_RSSI:56,TECHNIC_MEDIUM_HUB_ACCELEROMETER:57,TECHNIC_MEDIUM_HUB_GYRO_SENSOR:58,TECHNIC_MEDIUM_HUB_TILT_SENSOR:59,TECHNIC_MEDIUM_HUB_TEMPERATURE_SENSOR:60,TECHNIC_COLOR_SENSOR:61,TECHNIC_DISTANCE_SENSOR:62,TECHNIC_FORCE_SENSOR:63,TECHNIC_3X3_COLOR_LIGHT_MATRIX:64,TECHNIC_SMALL_ANGULAR_MOTOR:65,MARIO_ACCELEROMETER:71,MARIO_BARCODE_SENSOR:73,MARIO_PANTS_SENSOR:74,TECHNIC_MEDIUM_ANGULAR_MOTOR_GREY:75,TECHNIC_LARGE_ANGULAR_MOTOR_GREY:76,VIRTUAL_DEVICE:100},l=o(c),E=o({ACK:1,MACK:2,BUFFER_OVERFLOW:3,TIMEOUT:4,COMMAND_NOT_RECOGNIZED:5,INVALID_USE:6,OVERCURRENT:7,INTERNAL_ERROR:8}),d={ADVERTISING_NAME:1,BUTTON_STATE:2,FW_VERSION:3,HW_VERSION:4,RSSI:5,BATTERY_VOLTAGE:6,BATTERY_TYPE:7,MANUFACTURER_NAME:8,RADIO_FIRMWARE_VERSION:9,LWP_PROTOCOL_VERSION:10,SYSTEM_TYPE_ID:11,HW_NETWORK_ID:12,PRIMARY_MAC_ADDRESS:13,SECONDARY_MAC_ADDRESS:14,HW_NETWORK_FAMILY:15},h=o(d),T={NAME:0,RAW:1,PCT:2,SI:3,SYMBOL:4,MAPPING:5,USED_INTERNALLY:6,MOTOR_BIAS:7,CAPABILITY_BITS:8,VALUE_FORMAT:128},_=o(T),u={A:0,B:1,C:2,D:3,HUB_LED:50,CURRENT_SENSOR:59,VOLTAGE_SENSOR:60,ACCELEROMETER:97,GYRO_SENSOR:98,TILT_SENSOR:99},R=o(u);e.exports={MessageType:n,MessageTypeNames:r,Event:i,EventNames:a,BrakingStyle:{FLOAT:0,HOLD:126,BRAKE:127},DeviceMode:{POWER:0,SPEED:1,ROTATION:2,ABSOLUTE:3,COLOR:0,RGB:1,TILT_POS:0},DeviceType:c,DeviceTypeNames:l,ModeInformationType:T,ModeInformationTypeNames:_,PortMap:u,PortMapNames:R,HubPropertyPayload:d,HubPropertyPayloadNames:h,ErrorCodeNames:E}},{}],3:[function(t,e,s){const o=t("./CallbackEmitter"),{MessageType:i,PortMapNames:a}=t("./Const"),{log:n,toUint32:r}=t("./Util");e.exports=class{constructor(t,e,s){this.hubDevice=t,this.portId=e,this.type=s,this.name=a[e],this.feedbackCallback=null,this.valueCallbacks=new o,this.mode=void 0}async writePortCommand(t,...e){return n("writePortCommand",this.portId,{waitFeedback:t,data:e}),t?new Promise(async t=>{await this.hubDevice.sendMsg(i.PORT_OUTPUT_COMMAND,this.portId,17,e),this.feedbackCallback=t}):this.hubDevice.sendMsg(i.PORT_OUTPUT_COMMAND,this.portId,16,e)}writeDirectMode(t,e,...s){return n("writeDirectMode",this.portId,{mode:t,waitFeedback:e}),this.writePortCommand(e,81,t,s)}setMode(t,e,s=1){return n("setMode",this.portId,{mode:t,notificationEnabled:e}),this.mode=t,this.hubDevice.sendMsg(i.PORT_INPUT_FORMAT_SETUP_SINGLE,this.portId,t,r(s),e?1:0)}decodeValue(t){}handleValue(t){let e=this.decodeValue(t);null!=e&&this.valueCallbacks.emit(e)}handleFeedback(){"function"==typeof this.feedbackCallback&&this.feedbackCallback()}async getValue(t){return console.log("getValue",this.portId,{mode:t}),await this.setMode(t,!1),new Promise(async t=>{this.valueCallbacks.on(e=>(t(e),!0)),await this.hubDevice.sendMsg(i.PORT_INFORMATION_REQUEST,this.portId,0)})}async waitTestValue(t,e){return new Promise(async s=>{await this.setMode(t,!0),this.valueCallbacks.on(async o=>(n("waitTestValue",o),!!e(o)&&(n("waitTestValue OK"),await this.setMode(t,!1),s(),!0)))})}async subscribe(t,e,s=1){await this.setMode(t,!0,s),this.valueCallbacks.on(t=>(e(t),!1))}}},{"./CallbackEmitter":1,"./Const":2,"./Util":10}],4:[function(t,e,s){const o=t("./Motor"),{BrakingStyle:i}=t("./Const"),{toInt16:a,toInt32:n}=t("./Util"),r=100;e.exports=class extends o{constructor(t,e,s){super(t,e,"Virtual Device"),this.name=s}setSpeed(t,e){return this.writePortCommand(!1,8,t,e,r,0)}setSpeedForTime(t,e,s,o=!1,n=i.BRAKE){return console.log("setSpeedForTime",this.portId,{speed1:t,speed2:e,time:s,waitFeedback:o,brakingStyle:n}),this.writePortCommand(this.portId,o,10,a(s),t,e,r,n)}rotateDegrees(t,e,s,o,a=i.BRAKE){return console.log("rotateDegrees",this.portId,{degrees:t,speed1:e,speed2:s,waitFeedback:o,brakingStyle:a}),this.writePortCommand(o,12,n(t),e,s,r,a)}gotoAngle(t,e,s,o,a=i.BRAKE){return console.log("gotoAngle",this.portId,{angle1:t,angle2:e,speed:s,waitFeedback:o,brakingStyle:a}),this.writePortCommand(o,14,n(t),n(e),s,r,a)}}},{"./Const":2,"./Motor":6,"./Util":10}],5:[function(t,e,s){const o=t("./Device"),{PortMapNames:i,DeviceMode:a}=t("./Const");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}setBrightness(t){return console.log("setBrightness",this.portId,{brightness:t}),this.writeDirectMode(a.POWER,!1,t)}}},{"./Const":2,"./Device":3}],6:[function(t,e,s){const o=t("./Device"),{PortMapNames:i,DeviceMode:a}=t("./Const");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}setPower(t){return console.log("setPower",this.portId,{power:t}),this.writeDirectMode(a.POWER,!1,t)}}},{"./Const":2,"./Device":3}],7:[function(t,e,s){const o=t("./Device"),{PortMapNames:i,DeviceMode:a}=t("./Const");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}async setColor(t){return console.log("setColor",this.portId,{color:t}),await this.setMode(a.COLOR,!1),this.writeDirectMode(a.COLOR,!1,t)}async setRGBColor(t,e,s){return console.log("setColor",this.portId,{r:t,g:e,b:s}),await this.setMode(a.RGB,!1),this.writeDirectMode(a.RGB,!1,t,e,s)}}},{"./Const":2,"./Device":3}],8:[function(t,e,s){const o=t("./Motor"),{PortMapNames:i,DeviceMode:a,BrakingStyle:n}=t("./Const"),{toInt32:r,toInt16:c}=t("./Util"),l=100;e.exports=class extends o{constructor(t,e,s){super(t,e,s)}setSpeed(t){return console.log("setSpeed",this.portId,{speed:t}),this.writePortCommand(!1,7,t,l,0)}rotateDegrees(t,e,s,o=n.BRAKE){return console.log("rotateDegrees",this.portId,{degrees:t,speed:e,waitFeedback:s,brakingStyle:o}),this.writePortCommand(s,11,r(t),e,l,o)}gotoAngle(t,e,s,o=n.BRAKE){return console.log("gotoAngle",this.portId,{angle:t,speed:e,waitFeedback:s,brakingStyle:o}),this.calibrationValue&&(t*=this.calibrationValue),this.writePortCommand(s,13,r(t),e,l,o)}setSpeedForTime(t,e,s=!1,o=n.BRAKE){return console.log("setSpeedForTime",this.portId,{speed:t,time:e,waitFeedback:s,brakingStyle:o}),this.writePortCommand(s,9,c(e),t,l,o)}resetZero(){return console.log("resetZero",this.portId),this.writeDirectMode(a.ROTATION,!0,0,0,0,0)}async calibrate(){console.log("calibrate",this.portId),this.setPower(50),await this.waitTestValue(a.SPEED,t=>t>10),await this.waitTestValue(a.SPEED,t=>0==t),this.setPower(0),await $$.util.wait(1e3),await this.resetZero(),this.setPower(-50),await this.waitTestValue(a.SPEED,t=>Math.abs(t)>10),await this.waitTestValue(a.SPEED,t=>0==t),this.setPower(0);const t=await this.getValue(a.ROTATION);console.log(t);const e=Math.floor(t/2);console.log({offset:e}),await this.gotoAngle(e,10,!0),await this.resetZero(),this.calibrationValue=Math.abs(e)}decodeValue(t){let e;switch(this.mode){case a.ABSOLUTE:e=t.getInt16(4,!0);break;case a.ROTATION:e=t.getInt32(4,!0);break;case a.SPEED:e=t.getInt8(4)}return e}}},{"./Const":2,"./Motor":6,"./Util":10}],9:[function(t,e,s){const o=t("./Device"),{PortMapNames:i,DeviceMode:a}=t("./Const");e.exports=class extends o{constructor(t,e,s){super(t,e,s)}decodeValue(t){let e;switch(this.mode){case a.TILT_POS:e={yaw:t.getInt16(4,!0),pitch:t.getInt16(6,!0),roll:t.getInt16(8,!0)}}return e}}},{"./Const":2,"./Device":3}],10:[function(t,e,s){e.exports={toInt16:function(t){const e=new Uint8Array(2);return new DataView(e.buffer).setInt16(0,t,!0),Array.from(e)},toInt32:function(t){const e=new Uint8Array(4);return new DataView(e.buffer).setInt32(0,t,!0),Array.from(e)},toUint32:function(t){const e=new Uint8Array(4);return new DataView(e.buffer).setUint32(0,t,!0),Array.from(e)},log:function(...t){}}},{}],11:[function(t,e,s){!function(){const e=t("./CallbackEmitter"),{EventNames:s,DeviceMode:o,DeviceTypeNames:i,BrakingStyle:a,PortMap:n,HubPropertyPayloadNames:r,ModeInformationTypeNames:c,Event:l,DeviceType:E,PortMapNames:d,MessageType:h,HubPropertyPayload:T,ModeInformationType:_,ErrorCodeNames:u,MessageTypeNames:R}=t("./Const"),O=t("./Motor"),I=t("./DoubleMotor"),M=t("./TachoMotor"),A=t("./Device"),C=t("./RgbLed"),g=t("./Led"),N=t("./TiltSensor"),{log:m}=t("./Util"),p={BLACK:0,PINK:1,PURPLE:2,BLUE:3,LIGHT_BLUE:4,CYAN:5,GREEN:6,YELLOW:7,ORANGE:8,RED:9,WHITE:10,NONE:255},S="00001623-1212-efde-1623-785feabcd123",P="00001624-1212-efde-1623-785feabcd123";function b(t){const e=new Uint8Array(t);let s="";for(let t=0;t<e.byteLength&&0!=e[t];t++)s+=String.fromCharCode(e[t]);return s}function U(t,e){return`${d[t]}_${d[e]}`}const D={[E.TECHNIC_LARGE_LINEAR_MOTOR]:M,[E.TECHNIC_LARGE_ANGULAR_MOTOR_GREY]:M,[E.TECHNIC_XLARGE_LINEAR_MOTOR]:M,[E.TECHNIC_MEDIUM_HUB_TILT_SENSOR]:N,[E.HUB_LED]:C,[E.LIGHT]:g};class f extends EventEmitter2{constructor(){super(),this.charac=null,this.portCmdQueue={},this.portCmdCallback={},this.hubDevices={},this.busy=!1,this.cmdQueue=[],this.attachCallbacks=new e}async init(t){const e=await t.gatt.connect();m("Connected");const s=await e.getPrimaryService(S);this.charac=await s.getCharacteristic(P);const o=t=>{this.decodeMsg(t.target.value)};t.addEventListener("gattserverdisconnected",()=>{console.log("onGattServerDisconnected",this),this.charac.removeEventListener("characteristicvaluechanged",o),this.charac=null,this.emit("disconnected")}),this.charac.addEventListener("characteristicvaluechanged",o),await this.charac.startNotifications(),await $$.util.wait(100)}async startNotification(){await this.sendMsg(h.HUB_PROPERTIES,T.BATTERY_VOLTAGE,2),await this.sendMsg(h.HUB_PROPERTIES,T.SYSTEM_TYPE_ID,5),await this.sendMsg(h.HUB_PROPERTIES,T.PRIMARY_MAC_ADDRESS,5),await this.sendMsg(h.HUB_ALERTS,1,1)}getMotor(t){return new Promise((e,s)=>{const o=this.hubDevices[t];o?o instanceof O?e(o):s():this.attachCallbacks.on(s=>s.portId==t&&(m(`device on portId ${t} is ready`),e(s),!0))})}getTachoMotor(t){return new Promise((e,s)=>{const o=this.hubDevices[t];o?o instanceof M?e(o):s():this.attachCallbacks.on(s=>s.portId==t&&(m(`device on portId ${t} is ready`),e(s),!0))})}isMotor(t){const e=this.hubDevices[t];return!!e&&e instanceof O}isLed(t){const e=this.hubDevices[t];return!!e&&e instanceof g}isTachoMotor(t){const e=this.hubDevices[t];return!!e&&e instanceof M}getTiltSensor(t){return new Promise((e,s)=>{const o=this.hubDevices[t];o?o instanceof N?e(o):s():this.attachCallbacks.on(s=>s.portId==t&&(m(`device on portId ${t} is ready`),e(s),!0))})}getRgbLed(t){return new Promise((e,s)=>{const o=this.hubDevices[t];o?o instanceof C?e(o):s():this.attachCallbacks.on(s=>s.portId==t&&(m(`device on portId ${t} is ready`),e(s),!0))})}getLed(t){return new Promise((e,s)=>{const o=this.hubDevices[t];o?o instanceof g?e(o):s():this.attachCallbacks.on(s=>s.portId==t&&(m(`device on portId ${t} is ready`),e(s),!0))})}async getDblMotor(t,e){return new Promise(async s=>{const o=U(t,e),i=Object.values(this.hubDevices).find(t=>t.name==o);i?s(i):(this.attachCallbacks.on(t=>t.name==o&&(console.log(`device on portId ${t.portId} is ready`),s(t),!0)),await this.createVirtualPort(t,e))})}async sendBuffer(t){m("sendBuffer",t),this.busy?(m("busy push in queue"),this.cmdQueue.push(t)):(this.busy=!0,await this.charac.writeValueWithoutResponse(t),this.busy=!1,this.cmdQueue.length>0&&await this.sendBuffer(this.cmdQueue.shift()))}sendMsg(t,...e){return m("sendMsg",R[t],e),this.sendBuffer(function(t,...e){const s=e.flat(3),o=s.length+3,i=new ArrayBuffer(o),a=new Uint8Array(i);return a[0]=o,a[1]=0,a[2]=t,a.set(s,3),i}(t,e))}getPortIdFromName(t){for(const e of Object.values(this.hubDevices))if(e.name==t)return e.portId}createVirtualPort(t,e){return this.sendMsg(h.VIRTUAL_PORT_SETUP,1,t,e)}shutdown(){return this.sendMsg(h.HUB_ACTIONS,1)}getHubDevices(){return Object.values(this.hubDevices)}getDeviceType(t){return this.hubDevices[t].type}async getPortInformation(t){const e=await this.getPortInformationRequest(t),{capabilities:s,count:o,output:i,input:a}=e,n=Math.max(a,i),r=[];for(let e=0;e<o;e++){const s={};if(n>>e){let o;o=await this.getPortModeInformationRequest(t,e,_.NAME),s.name=o.name,s[(o=await this.getPortModeInformationRequest(t,e,_.RAW)).type]={min:o.min,max:o.max},s[(o=await this.getPortModeInformationRequest(t,e,_.PCT)).type]={min:o.min,max:o.max},s[(o=await this.getPortModeInformationRequest(t,e,_.SI)).type]={min:o.min,max:o.max},o=await this.getPortModeInformationRequest(t,e,_.SYMBOL),s.unit=o.symbol,o=await this.getPortModeInformationRequest(t,e,_.VALUE_FORMAT);const{numValues:i,dataType:a,totalFigures:n,decimals:r}=o;s[o.type]={numValues:i,dataType:a,totalFigures:n,decimals:r}}r.push(s)}return{modes:r,capabilities:s}}getPortInformationRequest(t){return new Promise(async e=>{await this.sendMsg(h.PORT_INFORMATION_REQUEST,t,1),this.portCmdCallback[t]=e})}getPortModeInformationRequest(t,e,s){return new Promise(async o=>{await this.sendMsg(h.PORT_MODE_INFORMATION_REQUEST,t,e,s),this.portCmdCallback[t]=o})}decodeMsg(t){t.byteLength,t.getUint8(0);const e=t.getUint8(2);switch(m("decodeMsg",{msgType:R[e]}),e){case h.HUB_ATTACHED_IO:this.handlePortMsg(t);break;case h.GENERIC_ERROR_MESSAGES:this.handleGenericErrorMsg(t);break;case h.HUB_PROPERTIES:this.handleHubPropertyResponse(t);break;case h.HUB_ALERTS:this.handleHubAlerts(t);break;case h.PORT_OUTPUT_COMMAND_FEEDBACK:this.handlePortCommandFeedback(t);break;case h.PORT_MODE_INFORMATION:this.handlePortModeInformation(t);break;case h.PORT_INFORMATION:this.handlePortInformation(t);break;case h.PORT_VALUE_SINGLE:this.handlePortValueSingle(t)}}handlePortValueSingle(t){const e=t.getUint8(3),s=t.getUint8(0),o=this.hubDevices[e];m("handlePortValueSingle",{msgLen:s,portId:e}),o.handleValue(t)}handlePortModeInformation(t){const e=t.getUint8(3),s=t.getUint8(4),o=t.getUint8(5),i={portId:e,mode:s,type:c[o]};switch(o){case _.NAME:i.name=b(t.buffer.slice(6,t.byteLength));break;case _.RAW:case _.PCT:case _.SI:i.min=t.getFloat32(6,!0),i.max=t.getFloat32(10,!0);break;case _.SYMBOL:i.symbol=b(t.buffer.slice(6,t.byteLength));break;case _.VALUE_FORMAT:i.numValues=t.getUint8(6),i.dataType=["8bit","16bit","32bit","float"][t.getUint8(7)],i.totalFigures=t.getUint8(8),i.decimals=t.getUint8(9)}m("portModeInformation",i);const a=this.portCmdCallback[e];"function"==typeof a&&(a(i),delete this.portCmdCallback[e])}handlePortInformation(t){const e=t.getUint8(3);let s=t.getUint8(5);const o=t.getUint8(6),i=t.getUint16(7,!0),a=t.getUint16(9,!0);m(`Port ${e}, capabilities ${s}, total modes ${o}, \n                    input modes ${i}, output modes ${a}`);const n="output,input,logical combinable, logical synchronisable".split(",");let r=[];for(let t=0;t<4;t++)s>>t&1&&r.push(n[t]);const c={portId:e,capabilities:r.join(", "),count:o,input:i,output:a},l=this.portCmdCallback[e];"function"==typeof l&&l(c)}handleHubPropertyResponse(t){const e=t.getUint8(3);if(m({property:r[e]}),e==T.BATTERY_VOLTAGE){const e=t.getUint8(5);m({batteryLevel:e}),this.emit("batteryLevel",{batteryLevel:e})}else if(e==T.BUTTON_STATE){const e=t.getUint8(5);m({buttonState:e}),this.emit("buttonState",{buttonState:e})}else if(e==T.SYSTEM_TYPE_ID){const e=t.getUint8(5);m({systemType:e})}else if(e==T.PRIMARY_MAC_ADDRESS){const e=[];for(let s=0;s<6;s++)e.push(t.getUint8(5+s).toString(16).toLocaleUpperCase().padStart(2,"0"));m({bytes:e}),this.emit("address",{address:e.join(":")})}}handleGenericErrorMsg(t){const e=t.getUint8(3),s=t.getUint8(4);m({cmdType:e,errorCode:u[s]}),this.emit("error",{cmdType:e,errorCode:u[s]})}handleHubAlerts(t){const e=t.byteLength,s=t.getUint8(0),o=t.getUint8(3),i=t.getUint8(4),a=t.getUint8(5);m("handleHubAlerts",{bufferLen:e,msgLen:s,type:o,operation:i,payload:a}),this.emit("hubAlerts",{type:o,payload:a})}handlePortCommandFeedback(t){for(let e=3;e<t.byteLength;e+=2){const s=t.getUint8(e),o=t.getUint8(e+1),i=this.hubDevices[s];m("handlePortCommandFeedback",{portId:s,feedback:o}),10==o&&null!=i&&i.handleFeedback()}}handlePortMsg(t){const e=t.getUint8(3),o=t.getUint8(4),a=o?t.getUint16(5,!0):0,n=i[a]||"Unknown",r=s[o];if(m("handlePortMsg",{portId:e,eventName:r,deviceTypeName:n}),o==l.ATTACHED_IO){let t=D[a];t||(t=A);const s=new t(this,e,n);this.hubDevices[e]=s,this.attachCallbacks.emit(s),this.emit("attach",s)}else if(o==l.DETACHED_IO)delete this.hubDevices[e],this.emit("detach",{portId:e});else if(o==l.ATTACHED_VIRTUAL_IO){const s=t.getUint8(7),o=t.getUint8(8),i=new I(this,e,U(s,o));this.hubDevices[e]=i,this.attachCallbacks.emit(i),this.emit("attach",i)}}}$$.service.registerService("hub",{init:function(){return{connect:async function(){m("connect");const t=await navigator.bluetooth.requestDevice({acceptAllDevices:!0,optionalServices:[S]}),e=new f;return await e.init(t),e},Color:p,PortMap:n,PortMapNames:d,DeviceMode:o,BrakingStyle:a,DeviceTypeNames:i}}})}()},{"./CallbackEmitter":1,"./Const":2,"./Device":3,"./DoubleMotor":4,"./Led":5,"./Motor":6,"./RgbLed":7,"./TachoMotor":8,"./TiltSensor":9,"./Util":10}]},{},[11]);
//# sourceMappingURL=hub.js.map
