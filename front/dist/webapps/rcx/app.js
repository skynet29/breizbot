$$.control.registerControl("rootPage",{template:'<div>\n    <div bn-show="notSupported" class="notSupported">\n        Sorry, <b>Web Serial</b> is not supported on this device, make sure you\'re\n        running Chrome 78 or later and have enabled the\n        <code>#enable-experimental-web-platform-features</code> flag in\n        <code>chrome://flags</code>\n    </div>\n\n    <button class="w3-button w3-blue" \n        bn-event="click: onConnect"\n        bn-show="showConnect"\n        >Connect</button>\n\n    <div bn-show="connected">\n\n        <div>\n            <button class="w3-button w3-blue" bn-event="click: onDownloadFirmware">Download Firmware</button>\n        </div>\n\n        <div class="beep">\n            <button class="w3-button w3-blue" bn-event="click: onBeep">Beep</button>\n\n            <div bn-control="brainjs.combobox", \n            bn-data="{items: [\n                {value: 0, label: \'Beep\'},\n                {value: 1, label: \'Beep beep\'},\n                {value: 2, label: \'Downward tones\'},\n                {value: 3, label: \'Upward tones\'},\n                {value: 4, label: \'Low buzz\'},\n                {value: 5, label: \'Fast upward tones\'}\n            ]}" \n            bn-val="beep" bn-iface="beepType"></div>\n    \n        </div>\n        <button class="w3-button w3-blue" bn-event="click: onVersion">Version</button>\n        <button class="w3-button w3-blue" bn-event="click: onPing">Ping</button>\n        <button class="w3-button w3-blue" bn-event="click: onBattery">Battery</button>\n        <button class="w3-button w3-blue" bn-event="click: onMotorStatus">Motor Status</button>\n        <button class="w3-button w3-blue" bn-event="click: onPowerOff">Power Off</button>\n\n        <fieldset bn-control="brainjs.checkgroup" bn-iface="motorList">\n            <legend>Motor List</legend>\n            <input type="checkbox" value="A" class="w3-check"><label>A</label>\n            <input type="checkbox" value="B" class="w3-check"><label>B</label>\n            <input type="checkbox" value="C" class="w3-check"><label>C</label>\n\n        </fieldset>\n\n        <fieldset bn-control="brainjs.radiogroup" bn-iface="motorDir">\n            <legend>Motor Direction</legend>\n            <input type="radio" value="Fwd" class="w3-radio"><label>Forward</label>\n            <input type="radio" value="Bkd" class="w3-radio"><label>Backward</label>\n\n        </fieldset>\n\n        <button class="w3-button w3-blue" bn-event="click: onMotorOn">Motor On</button>\n        <button class="w3-button w3-blue" bn-event="click: onMotorOff">Motor Off</button>\n\n    </div>\n\n\n</div>',deps:["app.rcx","breizbot.pager","breizbot.files"],init:function(e,n,t,o){const r=$$.viewController(e,{data:{notSupported:!("serial"in navigator),connected:!1,beep:0,showConnect:function(){return!this.notSupported&&!this.connected}},events:{onDownloadFirmware:function(){t.pushPage("breizbot.files",{title:"Open File",props:{filterExtension:"lgo"},events:{fileclick:function(e,n){t.popPage(n)}},onReturn:async function(e){const{fileName:t,rootDir:r}=e,a=o.fileUrl(r+t),c=await fetch(a),i=await c.text();await n.downloadFirmware(i,200)}})},onConnect:async function(){await n.connect(),r.setData({connected:!0})},onBeep:async function(){const e=parseInt(r.scope.beepType.getValue());console.log("beepType",e),await n.beep(e)},onPing:async function(){await n.isAlive()},onBattery:async function(){const e=await n.getBatteryLevel();console.log("level",e),$$.ui.showAlert({title:"Battery Level",content:`${e} mV`})},onVersion:async function(){const e=await n.getVersion();console.log("version",e),$$.ui.showAlert({title:"Firmware version",content:e})},onPowerOff:async function(){await n.powerOff()},onMotorOn:async function(){const e=r.scope.motorList.getValue(),t=r.scope.motorDir.getValue();console.log("motorList",e),console.log("motorDir",t),"Fwd"==t?await n.motorFwd(e):await n.motorBkd(e),await n.motorOn(e)},onMotorOff:async function(){const e=r.scope.motorList.getValue();console.log("motorList",e),await n.motorOff(e)},onMotorStatus:async function(){let e={A:await n.motorStatus("A"),B:await n.motorStatus("B"),C:await n.motorStatus("C")};e=JSON.stringify(e,null,4),console.log("status",e),$$.ui.showAlert({title:"Motor Status",height:400,content:`<pre>${e}</pre>`})}}})}}),$$.service.registerService("app.rcx",{deps:["app.srecord"],init:function(e,n){let t,o=!0,r=0,a=0,c=[],i=null,s=null;const l=2e3;function u(e){return 255&e}function b(e){return e>>8&255}function w(e){const n=[];e=e.slice(3);for(let t=0;t<e.length-2;t+=2)n.push(e[t]);return n}function f(e,...n){return c=[],null!=s?Promise.reject("Busy"):new Promise((c,l)=>{i=c;const u=function(e){switch(e){case 69:case 117:return 2;case 18:case 48:return 3;case 21:return 9;case 165:return 26;default:return 1}}(n[0]),b=t.writable.getWriter(),w=function(e){a=2*e.length+5;const n=new ArrayBuffer(a),t=new Uint8Array(n);t[0]=85,t[1]=255,t[2]=0,o&&(e[0]|=8),o=!o;let r=3,c=0;return e.forEach(e=>{t[r++]=e,t[r++]=255&~e,c=c+e&255}),t[r++]=c,t[r++]=255&~c,n}(n);b.write(w),r=2*(n.length+u)+10,b.releaseLock(),0!=e&&(s=setTimeout(()=>{s=null,l("Timeout, check your RCX is switched on")},e))})}async function d(){return console.log("deleteFirmware"),await f(l,101,1,3,5,7,11)}async function p(){return console.log("unlockFirmware"),await f(0,165,76,69,71,79,174)}async function m(e,n){return console.log("startDownloadFirmware",e,"0x",n.toString(16)),(await f(l,117,u(e),b(e),u(n),b(n),0))[1]}async function g(e,n){let t=0;n.forEach(e=>{t=(t+e)%256});let o=n.length;return console.log("transferData data length=",o,"checksum=",t),(await f(10*l,69,u(e),b(e),u(o),b(o),...n,t))[1]}function h(e){let n=0;return e.forEach(e=>{switch(e){case"A":n|=1;break;case"B":n|=2;break;case"C":n|=4}}),n}return{connect:async function(){t=await navigator.serial.requestPort(),await t.open({baudRate:2400,parity:"odd"}),async function(){const e=t.readable.getReader();for(;;){const{value:n,done:t}=await e.read();if(0!=r&&(c=c.concat(Array.from(n))),r==c.length){const e=w(c.slice(a));console.log("resp",e),clearTimeout(s),s=null,"function"==typeof i&&i(e),c=[],r=0}if(t){e.releaseLock();break}}}()},beep:async function(e){return console.log("beep"),f(l,81,e)},getBatteryLevel:async function(){const e=await f(l,48);return e[1]+(e[2]<<8)},getVersion:async function(){const e=await f(l,21,1,3,5,7,11);return{romVersion:{major:(e[1]<<8)+e[2],minor:(e[3]<<8)+e[4]},firmwareVersion:{major:(e[5]<<8)+e[6],minor:(e[7]<<8)+e[8]}}},powerOff:async function(){return await f(l,96)},motorOn:async function(e){return f(l,33,192|h(e))},motorOff:async function(e){return f(l,33,16|h(e))},motorFwd:async function(e){return f(l,225,128|h(e))},motorBkd:async function(e){return f(l,225,0|h(e))},motorPower:async function(e,n){return f(l,19,h(e),2,n)},motorStatus:async function(e){e=e.charCodeAt(0)-65;const n=(await f(l,18,3,e))[1];return{power:7&n,dir:0!=(8&n)?"FWD":"BACK",brake:0!=(64&n),on:0!=(128&n)}},deleteFirmware:d,startDownloadFirmware:m,unlockFirmware:p,transferData:g,downloadFirmware:async function(e,t){console.log("rcx.downloadFirmware");let o=n.parse(e);console.log("parse ret",o);const r=Object.values(o.mem).flat();console.log("data",r);let a=0;if(r.forEach(e=>{a=(a+e)%65536}),console.log("checksum",a),await d(),0!=(o=await m(o.boot,a)))throw"startDownloadFirmware failed";let c=r.length,i=1,s=0;for(;c>0;){console.log("remainBytes",c);let e=t;if(c<=t&&(i=0,e=t),console.log("chunkSize",e),0!=(o=await g(i++,r.slice(s,s+e))))throw"transferData error="+o;c-=e,s+=e}o=await p(),console.log("ret",o)},isAlive:async function(){return f(l,16)}}}}),$$.service.registerService("app.srecord",{init:function(e){return{parse:function(e){const n=e.split("\n");console.log("nb srecs",n.length);const t={mem:{}};return n.forEach(e=>{if(0!=e.length){if("S"!=e[0])throw"Bad header "+e[0];const n=parseInt(e[1]),o=function(e){switch(e){case 0:case 1:case 9:case 5:return 2;case 2:case 6:case 8:return 3;case 3:case 7:return 4;default:throw"Bad type"}}(n),r=parseInt(e.substr(4,2*o),16),a=parseInt(e.substr(2,2),16)-1-o,c=[];for(let n=0,t=4+2*o;n<a;n++,t+=2)c.push(parseInt(e.substr(t,2),16));if(1==n)t.mem[r]=c;else if(9==n)t.boot=r;else if(0==n){let e="";c.forEach(n=>{e+=String.fromCharCode(n)}),t.info=e}}}),t}}}});