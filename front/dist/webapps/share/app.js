$$.control.registerControl("filesPage",{deps:["app.share"],props:{$pager:null,userName:"",showThumbnail:!0,thumbnailSize:"?x100"},template:'<div class="contentPanel">\n\n\t<div class="pathPanel">\n\t\tPath:&nbsp;<span bn-text="rootDir"></span>\n\t</div>\n\n\t<div class="scrollPanel">\n\n\t\t<div bn-each="files" \n\t\t\tbn-iter="f" \n\t\t\tclass="container"\n\t\t\tbn-bind="files" \n\t\t\tbn-event="click.folder: onFolderClick, click.file: onFileClick">\n\t\t\t\n\t\t\t<div class="thumbnail w3-btn" bn-data="{info: f}">\t\n\t\t\t\t\t<div bn-if="f.folder" class="folder">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<i class="fa fa-4x fa-folder-open w3-text-blue-grey"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<span bn-text="f.name"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div bn-if="!f.folder && (!f.isImage || !showThumbnail)" bn-attr="{title: f.name + \'\\n\' + getSize(f.size)}" class="file">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<i bn-attr="{class: `fa fa-4x w3-text-blue-grey ${getIconClass(f.name)}`}"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<span bn-text="f.name.slice(0, 20)"></span>\n\t\t\t\t\t</div>\t\t\t\n\n\t\t\t\t\t<div bn-if="!f.folder && f.isImage && showThumbnail" bn-attr="{title: f.name + \'\\n\' + getSize(f.size)}" class="file">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img bn-attr="{src: f.thumbnailUrl}">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<span bn-text="f.name.slice(0, 20)"></span>\n\t\t\t\t\t</div>\t\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>',buttons:[{name:"reload",icon:"fa fa-sync-alt"}],init:function(t,e){const{$pager:n,userName:i,showThumbnail:l,thumbnailSize:a}=this.props,o=$$.viewController(t,{data:{rootDir:"/",files:[],showThumbnail:l,getSize:function(t){let e="Ko";return(t/=1024)>1024&&(e="Mo",t/=1024),"Size : "+Math.floor(t)+" "+e},getIconClass:function(t){return t.endsWith(".pdf")?"fa-file-pdf":t.endsWith(".doc")?"fa-file-word":t.endsWith(".ogg")||t.endsWith(".mp3")?"fa-file-audio":t.endsWith(".mp4")?"fa-file-video":"fa-file"}},events:{onFileClick:function(t){const e=$(this).closest(".thumbnail").data("info");console.log("onFileClick",e);const l=o.model.rootDir+e.name;null!=$$.util.getFileType(e.name)&&n.pushPage("viewerPage",{title:e.name,props:{fullName:l,userName:i}})},onFolderClick:function(t){const e=$(this).closest(".thumbnail").data("info").name;if(".."==e){const t=o.model.rootDir.split("/");t.pop(),t.pop(),s(t.join("/")+"/")}else s(o.model.rootDir+e+"/")}}});function s(t){null==t&&(t=o.model.rootDir),e.list(i,t).then(function(n){console.log("files",n),n.forEach(n=>{n.isImage&&(n.thumbnailUrl=e.fileThumbnailUrl(i,t+n.name,a))}),n.sort((t,e)=>t.folder&&!e.folder?-1:!t.folder&&e.folder?1:t.name>e.name),"/"!=t&&n.unshift({name:"..",folder:!0}),o.setData({files:n,rootDir:t})})}s(),this.onAction=function(t){"reload"==t&&s()}}}),$$.control.registerControl("rootPage",{template:'<div class="toolbar">\n<p>Click on a user to see the files shared by him</p>\n</div>\n<div \n\tbn-control="breizbot.friends" \n\tbn-iface="friends" \n\tbn-event="friendclick: onSelectFriend"\n\tbn-data="{showConnectionState: false}"\n\t></div>',props:{$pager:null},init:function(t){const{$pager:e}=this.props;$$.viewController(t,{data:{},events:{onSelectFriend:function(t,n){const{userName:i}=n;e.pushPage("filesPage",{title:i,props:{userName:i}})}}})}}),$$.control.registerControl("viewerPage",{deps:["app.share"],template:'<div \n\tbn-control="breizbot.viewer" \n\tbn-data="{type, url}" \n\tstyle="height: 100%" \n\tbn-iface="viewer">\n\t\t\n\t</div>',props:{$pager:null,fullName:"",userName:""},init:function(t,e){const{$pager:n,fullName:i,userName:l}=this.props;$$.viewController(t,{data:{type:$$.util.getFileType(i),url:e.fileUrl(l,i)}})}}),$$.service.registerService("app.share",{deps:["breizbot.http"],init:function(t,e){return{list:function(t,n){return console.log("[Share] list",n),e.post("/list",{path:n,user:t}).then(t=>(t.forEach(t=>{t.isImage="image"==$$.util.getFileType(t.name)}),t))},fileUrl:function(t,e){return $$.util.getUrlParams("/api/app/share/load",{user:t,fileName:e})},fileThumbnailUrl:function(t,e,n){return $$.util.getUrlParams("/api/app/share/loadThumbnail",{user:t,fileName:e,size:n})}}},$iface:"\n\t\tlist(user, path):Promise;\n\t\tfileUrl(user, fileName):string;\n\t\tfileThumbnailUrl(user, fileName, size):string;\n\t"});